applicationId: 10bdbf39-31e3-4533-bf0d-3a97d729544e
id: fb932ce3-3224-47d8-b095-8c17c5c352e3
isHidden: false
layouts:
  - dsl:
      apis:
        apiMap:
          05d02ce3-f999-4639-ba49-15fafb2279df:
            dynamicTriggerPathList:
              - key: onError
            id: 05d02ce3-f999-4639-ba49-15fafb2279df
            onError:
              - id: 4eba8232-6f8e-4db7-a2fd-976e8582be70
                message: "{{time_yesterday_CN.error}}"
                style: error
                type: showAlert
          0d70a685-3612-4004-b58d-ffdb31660679:
            dynamicTriggerPathList:
              - key: onError
            id: 0d70a685-3612-4004-b58d-ffdb31660679
            onError:
              - id: d5a16e80-c582-4f25-8325-0be453da9895
                message: "{{getInfoTimeAdherence.error}}"
                style: error
                type: showAlert
          181e1855-5ab9-4c34-a0b6-66ae505708da:
            dynamicTriggerPathList:
              - key: onError
            id: 181e1855-5ab9-4c34-a0b6-66ae505708da
            onError:
              - id: df8c4058-acd5-4e0d-96f2-e70d58ba81f0
                message: "{{getWeightList.error}}"
                style: error
                type: showAlert
          1bfee298-c550-4c19-975e-daf9ab67fed3:
            dynamicTriggerPathList:
              - key: onError
            id: 1bfee298-c550-4c19-975e-daf9ab67fed3
            onError:
              - id: 170a9816-738f-4767-bed8-f0bfa94d7ae9
                message: "{{startTimeTracked.error}}"
                style: error
                type: showAlert
          1e692082-ea9d-40e9-9d9b-14aa02784d18:
            dynamicTriggerPathList:
              - key: onError
            id: 1e692082-ea9d-40e9-9d9b-14aa02784d18
            onError:
              - id: c81fbdcb-69ff-47b7-a1f4-99df916c10ba
                message: "{{getAllTimeTracked.error}}"
                style: error
                type: showAlert
          20ed69ab-62d2-46b8-a20e-8b754f2ebf9f:
            dynamicTriggerPathList:
              - key: onError
            id: 20ed69ab-62d2-46b8-a20e-8b754f2ebf9f
            onError:
              - id: d30089d3-c771-426b-8867-3edf1b568d60
                message: "{{API1.error}}"
                style: error
                type: showAlert
          28a6c9b9-c9bb-4563-8e13-9e1a878d8fd1:
            dynamicTriggerPathList:
              - key: onError
            id: 28a6c9b9-c9bb-4563-8e13-9e1a878d8fd1
            onError:
              - id: d3b017ee-2ec8-41f7-8e01-e597e33e9c62
                message: "{{endTimeTracked.error}}"
                style: error
                type: showAlert
          3e5f50c7-9d71-4b85-9134-4da212f8d8f3:
            dynamicTriggerPathList:
              - key: onError
            id: 3e5f50c7-9d71-4b85-9134-4da212f8d8f3
            onError:
              - id: 0e2b6f14-8e21-4088-998b-eede8cfc5223
                message: "{{getTimeTracksForNav.error}}"
                style: error
                type: showAlert
          6263f368-f106-4689-9445-56c59518e085:
            dynamicTriggerPathList:
              - key: onError
            id: 6263f368-f106-4689-9445-56c59518e085
            onError:
              - id: 1f52fbd7-c3bd-4d73-8e2d-35c860a650f0
                message: "{{getBloodPressureDiastolicPlotly.error}}"
                style: error
                type: showAlert
          626ac93c-ecfe-4451-a22c-0bc8e7eb4d1d:
            dynamicTriggerPathList:
              - key: onError
            id: 626ac93c-ecfe-4451-a22c-0bc8e7eb4d1d
            onError:
              - id: 30995297-d31f-46f7-b425-75cd0715a503
                message: "{{getTimeAdherence.error}}"
                style: error
                type: showAlert
          69d42613-cf46-408b-a69f-9da1c5f7d9ea:
            dynamicTriggerPathList:
              - key: onError
            id: 69d42613-cf46-408b-a69f-9da1c5f7d9ea
            onError:
              - id: b7d6fa48-0ab3-4dca-bd48-ebebf9613424
                message: "{{getOxygenSaturationList.error}}"
                style: error
                type: showAlert
          6db2219c-e2db-473c-8928-085c68f5a2e2:
            dynamicTriggerPathList:
              - key: onError
            id: 6db2219c-e2db-473c-8928-085c68f5a2e2
            onError:
              - id: d4a0a98d-31e5-4c19-85a7-6842640e7798
                message: "{{API2.error}}"
                style: error
                type: showAlert
          784e9577-45b3-4106-a0c4-15e821018487:
            dynamicTriggerPathList:
              - key: onError
            id: 784e9577-45b3-4106-a0c4-15e821018487
            onError:
              - id: 10a929a8-4d1a-4a4b-9279-b097d6ba9ee2
                message: "{{getAllTime.error}}"
                style: error
                type: showAlert
          807e7701-a13d-4893-b262-99dc99082567:
            dynamicTriggerPathList:
              - key: onError
            id: 807e7701-a13d-4893-b262-99dc99082567
            onError:
              - id: 32d4ea10-7b38-4e25-a97e-b2af0482d988
                message: "{{getCareTeam.error}}"
                style: error
                type: showAlert
          87d1f560-517f-4402-93f3-c0013e495903:
            dynamicTriggerPathList:
              - key: onError
            id: 87d1f560-517f-4402-93f3-c0013e495903
            onError:
              - id: fcedb154-abb8-4eae-90e5-deef9490d816
                message: "{{getReadingLogs.error}}"
                style: error
                type: showAlert
          89a6c29f-f450-4cde-8924-bb47cd7c71be:
            dynamicTriggerPathList:
              - key: onError
            id: 89a6c29f-f450-4cde-8924-bb47cd7c71be
            onError:
              - id: c73d547e-2746-4a97-a243-b84fa6f06000
                message: "{{getPatientCohorts.error}}"
                style: error
                type: showAlert
          8da84892-093a-4fb6-b7eb-98b5cd917143:
            dynamicBindingPathList: []
            dynamicTriggerPathList:
              - key: onError
              - key: onSuccess
              - key: onCancel
            id: 8da84892-093a-4fb6-b7eb-98b5cd917143
            onCancel:
              - id: hkk63sucaf
                newWindow: true
            onError:
              - id: db7cc771-9191-4720-899e-844f3a3a82d2
                message: "{{getCareTeamTime.error}}"
                style: error
                type: showAlert
            onSuccess:
              - id: p9pp1li357
                newWindow: true
          931dc431-1752-4b81-b460-5c12d0294f03:
            dynamicTriggerPathList:
              - key: onError
            id: 931dc431-1752-4b81-b460-5c12d0294f03
            onError:
              - id: 2ac641cb-cbd1-4067-9f7a-07f1a01c0357
                message: "{{getTimePrioritiesGlobal.error}}"
                style: error
                type: showAlert
          a80ca822-3c9e-45ac-aca9-4e23f2ccd54f:
            dynamicBindingPathList: []
            dynamicTriggerPathList:
              - key: onError
              - key: onSuccess
              - key: onCancel
            id: a80ca822-3c9e-45ac-aca9-4e23f2ccd54f
            onCancel:
              - id: qysvvtpf4j
            onError:
              - id: 863b42bb-2898-4dab-b9f2-d97eeb8a2d29
                message: "{{getPatientToStop.error}}"
                style: error
                type: showAlert
            onSuccess:
              - id: 41vdf5i4t5
          af1fe603-66bd-4dd7-aaee-c70a87febafb:
            dynamicBindingPathList: []
            dynamicTriggerPathList:
              - key: onError
              - key: onSuccess
              - key: onCancel
            id: af1fe603-66bd-4dd7-aaee-c70a87febafb
            onCancel:
              - id: di1ktgpn1m
                newWindow: true
            onError:
              - id: a96e645a-5efd-40e6-a3d2-c2d190034190
                message: "{{getAdherence.error}}"
                style: error
                type: showAlert
            onSuccess:
              - id: yredkpdtmj
                newWindow: true
          b27936a2-1094-450e-8d85-5eaae78e3ce1:
            dynamicBindingPathList: []
            dynamicTriggerPathList:
              - key: onError
              - key: onSuccess
              - key: onCancel
              - key: onMessage
            id: b27936a2-1094-450e-8d85-5eaae78e3ce1
            onCancel:
              - id: 9mmbslla6l
            onError:
              - id: 5bed86c6-8c6f-4207-844f-28552a8712e6
                message: "{{getCurrentPanelTime.error}}"
                style: error
                type: showAlert
            onMessage:
              - id: e0sr9ymmkq
            onSuccess:
              - id: 3lh8e8pois
            responseType: SYNC
          b90b0ae9-225e-427b-9d06-d915283eb5da:
            dynamicTriggerPathList:
              - key: onError
            id: b90b0ae9-225e-427b-9d06-d915283eb5da
            onError:
              - id: 2a811031-f6cd-4df5-bddb-f22a1710c345
                message: "{{getBloodPressureSystolicPlotly.error}}"
                style: error
                type: showAlert
          be272e4d-5e98-4bc1-a234-bb501e649e92:
            dynamicBindingPathList: []
            dynamicTriggerPathList:
              - key: onError
              - key: onSuccess
              - key: onCancel
            id: be272e4d-5e98-4bc1-a234-bb501e649e92
            onCancel:
              - id: cbjlsxbham
                newWindow: true
            onError:
              - id: c8e6336b-2550-4083-ab34-3eba50a2b229
                message: "{{CTM_Calls.error}}"
                style: error
                type: showAlert
            onSuccess:
              - id: a2tl9uqpu7
                newWindow: true
          c32a0258-a132-4291-ba1b-60b2f71554f4:
            dynamicTriggerPathList:
              - key: onError
            id: c32a0258-a132-4291-ba1b-60b2f71554f4
            onError:
              - id: 44e2328e-4923-40e9-acbe-3ab18aae43a9
                message: "{{getBloodPressureList.error}}"
                style: error
                type: showAlert
          c6a6475e-0533-4821-ae19-ef4724fb090a:
            dynamicTriggerPathList:
              - key: onError
            id: c6a6475e-0533-4821-ae19-ef4724fb090a
            onError:
              - id: fce16301-b28e-419a-b8cc-b4c6b5de6cd5
                message: "{{getTimePriorities.error}}"
                style: error
                type: showAlert
          c6fd3109-15da-4e71-9a76-7dfb1b116387:
            dynamicTriggerPathList:
              - key: onError
            id: c6fd3109-15da-4e71-9a76-7dfb1b116387
            onError:
              - id: 65854146-aac2-4a00-bb6c-e3bc24c404a7
                message: "{{getYesterdayReadings.error}}"
                style: error
                type: showAlert
          c8ad9d09-903e-4105-a738-3405b87ce062:
            dynamicTriggerPathList:
              - key: onError
            id: c8ad9d09-903e-4105-a738-3405b87ce062
            onError:
              - id: 7a456d3a-4081-4c77-a0d0-ecb9a283026a
                message: "{{getDetailFromLSQ.error}}"
                style: error
                type: showAlert
          e0482ff9-df96-491a-9b31-c31ad05214ea:
            dynamicTriggerPathList:
              - key: onError
            id: e0482ff9-df96-491a-9b31-c31ad05214ea
            onError:
              - id: 3152e3d7-3f68-4438-bdc9-cccd2c6f37d7
                message: "{{getPulseList.error}}"
                style: error
                type: showAlert
          e2d36ff0-614f-41f8-87fb-8bc5fdc49e02:
            dynamicTriggerPathList:
              - key: onError
            id: e2d36ff0-614f-41f8-87fb-8bc5fdc49e02
            onError:
              - id: bd385316-bf42-4840-a34e-30b4792d4466
                message: "{{getCTAvgHours.error}}"
                style: error
                type: showAlert
          e3397b97-555b-4b12-b8e7-6f8c57b9a126:
            dynamicTriggerPathList:
              - key: onError
            id: e3397b97-555b-4b12-b8e7-6f8c57b9a126
            onError:
              - id: 365867e9-4f64-4bd9-a3da-cf98f845263d
                message: "{{getBloodGlucoseList.error}}"
                style: error
                type: showAlert
          edb5266f-c066-4b7b-8b6f-16917df01519:
            dynamicTriggerPathList:
              - key: onError
            id: edb5266f-c066-4b7b-8b6f-16917df01519
            onError:
              - id: 67c4ee67-8ec9-479a-abf5-eccd6a78ba77
                message: "{{updateTimeTrack.error}}"
                style: error
                type: showAlert
      backgroundColor: none
      cachedData:
        pageLoadActions:
          apiDeps:
            CTM_Calls:
              - getDetailFromLSQ
            getBloodGlucoseList:
              - getReadingLogs
            getBloodPressureDiastolicPlotly:
              - getBloodPressureList
            getBloodPressureList:
              - getReadingLogs
            getBloodPressureSystolicPlotly:
              - getBloodPressureList
            getCurrentPanelTime:
              - updateTimeTrack
            getDetailFromLSQ: []
            getOxygenSaturationList:
              - getReadingLogs
            getPatientCohorts: []
            getPatientToStop:
              - updateTimeTrack
            getPulseList:
              - getReadingLogs
            getReadingLogs: []
            getTimeAdherence: []
            getTimeTracksForNav: []
            getWeightList:
              - getReadingLogs
            updateTimeTrack:
              - getTimeTracksForNav
          apiNames:
            - getWeightList
            - getOxygenSaturationList
            - getReadingLogs
            - getPatientCohorts
            - getBloodPressureSystolicPlotly
            - CTM_Calls
            - getBloodPressureList
            - getDetailFromLSQ
            - getPulseList
            - getBloodGlucoseList
            - getBloodPressureDiastolicPlotly
            - getCurrentPanelTime
            - getPatientToStop
            - getTimeAdherence
            - updateTimeTrack
            - getTimeTracksForNav
      canExtend: true
      children:
        - canExtend: true
          children:
            - backgroundColor: none
              canExtend: true
              children:
                - animateLoading: true
                  collapseWhenHidden: false
                  dynamicBindingPathList:
                    - key: textColor
                  dynamicTriggerPathList: []
                  gridColumns: 26
                  height:
                    mode: gridUnit
                    value: 3
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 46
                  parentId: dwpvpsnarl
                  text: Minutes Tracked
                  textAlign: CENTER
                  textColor: "{{ theme.colors.neutral900 }}"
                  textStyle: HEADING_2
                  textType: text
                  top:
                    mode: gridUnit
                    value: 10
                  type: TEXT_WIDGET
                  verticalAlign: AUTO
                  widgetId: roxcuamfjs
                  widgetName: Text2
                  width:
                    mode: gridUnit
                    value: 26
                - animateLoading: true
                  cachedColumnSettings:
                    DAYS_SINCE_LAST_INTERACTION:
                      columnType: number
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DAYS_SINCE_LAST_INTERACTION })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: DAYS_SINCE_LAST_INTERACTION
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Days Since...
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DAYS_SINCE_LAST_INTERACTION })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DAYS_SINCE_LAST_INTERACTION })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    FINAL_TOTAL_TIME_LOGGED:
                      columnType: number
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FINAL_TOTAL_TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: FINAL_TOTAL_TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Billable
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FINAL_TOTAL_TIME_LOGGED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FINAL_TOTAL_TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LAST_TIME_LOGGED:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LAST_TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 19
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LAST_TIME_LOGGED
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_TIME_LOGGED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MINUTES_LOGGED:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MINUTES_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MINUTES_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 20
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: MINUTES_LOGGED
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MINUTES_LOGGED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MINUTES_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    REMAINDER:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.REMAINDER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: REMAINDER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 38
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: REMAINDER
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.REMAINDER })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.REMAINDER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TIME_LOGGED:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 43
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TIME_LOGGED
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TIME_LOGGED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_MINUTES_LOGGED:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_MINUTES_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_MINUTES_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 33
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: TOTAL_MINUTES_LOGGED
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_MINUTES_LOGGED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_MINUTES_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_TIME_LOGGED_BY_CN:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_BY_CN })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_TIME_LOGGED_BY_CN
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 34
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: TOTAL_TIME_LOGGED_BY_CN
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_BY_CN })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_TIME_LOGGED_BY_CN })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  collapseWhenHidden: false
                  columnOrder:
                    - PATIENT_INDIVIDUAL_ID
                    - FIRST_NAME
                    - LAST_NAME
                    - MONTH_OF
                    - CARE_NAVIGATOR
                    - TRUE_CARE_LINK
                    - PATIENT_FIRST_NAME
                    - PATIENT_LAST_NAME
                    - MONTHS_SINCE_CREATED
                    - LEAD_STAGE
                    - RPM_STAGE
                    - CCM_STAGE
                    - DAYS_FROM_LAST_ENC
                    - ASSIGNED_NAVIGATOR_TIME_LOGGED
                    - INDIVIDUAL_TIME_LOGGED
                    - TOTAL_TIME_LOGGED_ROUNDED
                    - TOTAL_BILLABLE_BLOCKS
                    - TIME_LEFT
                    - THREE_DAY_ADHERENCE_RATE
                    - WEEK_ADHERENCE_RATE
                    - MONTH_ADHERENCE_RATE
                    - QUARTER_ADHERENCE_RATE
                    - PROPORTION_INDIVIDUAL
                    - TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED
                    - LATEST_ENC_CREATED_TIME
                    - PROPORTION_INDIVIDUAL_WITH_GLOBAL
                    - PROPORTION_GLOBAL
                    - TOTAL_BILLABLE
                    - CCM_PAYER
                    - CARE_SERVICES
                    - CREATED_ON
                    - PROPORTION_GROUP
                    - CUSTOMER_FACILITY
                    - GROUP_PROPORTIONAL_MULTIPLIER
                    - GLOBAL_PROPORTIONAL_MULTIPLIER
                    - AT_LEAST_ONE_BILLABLE_BLOCK
                    - CUSTOMER
                    - DOB
                    - GLOBAL_OUTLIER
                    - GROUP_OUTLIER
                    - INDIVIDUALLY_BILLABLE_BLOCKS
                    - LEADSQUARED_ID
                    - READING_DAYS_LAST_MONTH
                    - READING_DAYS_LAST_QUARTER
                    - TOTAL_TIME_LOGGED
                    - READING_DAYS_LAST_THREE
                    - READING_DAYS_LAST_WEEK
                    - TOTAL_TIME_LOGGED_WITH_GLOBAL
                    - LEAD_TYPE
                    - PATIENT_DOB
                    - RPM_PAYER
                    - VISITING_PROVIDER
                    - WELLNESS_PAYER
                    - WELLNESS_STAGE
                  columnSizeMap:
                    ASSIGNED_NAVIGATOR_TIME_LOGGED: 95.5697677880024
                    CARE_NAVIGATOR: 134
                    CCM_STAGE: 81
                    DAYS_FROM_LAST_ENC: 137.12792841506632
                    FIRST_NAME: 98
                    INDIVIDUAL_TIME_LOGGED: 202
                    LAST_NAME: 99
                    LEAD_STAGE: 95
                    MONTHS_SINCE_CREATED: 81.28868312757201
                    MONTH_ADHERENCE_RATE: 72.52914223251028
                    MONTH_OF: 80
                    PATIENT_FIRST_NAME: 93
                    PATIENT_LAST_NAME: 99
                    PROPORTION_GROUP: 60
                    PROPORTION_INDIVIDUAL: 74
                    QUARTER_ADHERENCE_RATE: 67.93512341392321
                    RPM_STAGE: 77
                    THREE_DAY_ADHERENCE_RATE: 80
                    TIME_LEFT: 96
                    TOTAL_BILLABLE: 133.42222222222222
                    TOTAL_BILLABLE_BLOCKS: 123
                    TOTAL_TIME_LOGGED: 175.0830864197531
                    TOTAL_TIME_LOGGED_ROUNDED: 126
                    TOTAL_TIME_LOGGED_WITH_GLOBAL: 284.15781893004123
                    TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED: 124
                    TRUE_CARE_LINK: 173
                    WEEK_ADHERENCE_RATE: 75
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  defaultSort:
                    asc: false
                    column: TOTAL_TIME_LOGGED_ROUNDED
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: tableData
                    - key: primaryColumns.AT_LEAST_ONE_BILLABLE_BLOCK.computedValue
                    - key: primaryColumns.AT_LEAST_ONE_BILLABLE_BLOCK.linkUrl
                    - key: primaryColumns.AT_LEAST_ONE_BILLABLE_BLOCK.linkLabel
                    - key: primaryColumns.CARE_NAVIGATOR.computedValue
                    - key: primaryColumns.CARE_NAVIGATOR.linkUrl
                    - key: primaryColumns.CARE_NAVIGATOR.linkLabel
                    - key: primaryColumns.CUSTOMER.computedValue
                    - key: primaryColumns.CUSTOMER.linkUrl
                    - key: primaryColumns.CUSTOMER.linkLabel
                    - key: primaryColumns.DOB.computedValue
                    - key: primaryColumns.DOB.linkUrl
                    - key: primaryColumns.DOB.linkLabel
                    - key: primaryColumns.FIRST_NAME.computedValue
                    - key: primaryColumns.FIRST_NAME.linkUrl
                    - key: primaryColumns.FIRST_NAME.linkLabel
                    - key: primaryColumns.GLOBAL_OUTLIER.computedValue
                    - key: primaryColumns.GLOBAL_OUTLIER.linkUrl
                    - key: primaryColumns.GLOBAL_OUTLIER.linkLabel
                    - key: primaryColumns.GLOBAL_PROPORTIONAL_MULTIPLIER.computedValue
                    - key: primaryColumns.GLOBAL_PROPORTIONAL_MULTIPLIER.linkUrl
                    - key: primaryColumns.GLOBAL_PROPORTIONAL_MULTIPLIER.linkLabel
                    - key: primaryColumns.GROUP_OUTLIER.computedValue
                    - key: primaryColumns.GROUP_OUTLIER.linkUrl
                    - key: primaryColumns.GROUP_OUTLIER.linkLabel
                    - key: primaryColumns.GROUP_PROPORTIONAL_MULTIPLIER.computedValue
                    - key: primaryColumns.GROUP_PROPORTIONAL_MULTIPLIER.linkUrl
                    - key: primaryColumns.GROUP_PROPORTIONAL_MULTIPLIER.linkLabel
                    - key: primaryColumns.INDIVIDUALLY_BILLABLE_BLOCKS.computedValue
                    - key: primaryColumns.INDIVIDUALLY_BILLABLE_BLOCKS.linkUrl
                    - key: primaryColumns.INDIVIDUALLY_BILLABLE_BLOCKS.linkLabel
                    - key: primaryColumns.INDIVIDUAL_TIME_LOGGED.computedValue
                    - key: primaryColumns.INDIVIDUAL_TIME_LOGGED.linkUrl
                    - key: primaryColumns.INDIVIDUAL_TIME_LOGGED.linkLabel
                    - key: primaryColumns.LAST_NAME.computedValue
                    - key: primaryColumns.LAST_NAME.linkUrl
                    - key: primaryColumns.LAST_NAME.linkLabel
                    - key: primaryColumns.MONTH_OF.computedValue
                    - key: primaryColumns.MONTH_OF.linkUrl
                    - key: primaryColumns.MONTH_OF.linkLabel
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.computedValue
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkUrl
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkLabel
                    - key: primaryColumns.PROPORTION_GLOBAL.computedValue
                    - key: primaryColumns.PROPORTION_GLOBAL.linkUrl
                    - key: primaryColumns.PROPORTION_GLOBAL.linkLabel
                    - key: primaryColumns.PROPORTION_GROUP.computedValue
                    - key: primaryColumns.PROPORTION_GROUP.linkUrl
                    - key: primaryColumns.PROPORTION_GROUP.linkLabel
                    - key: primaryColumns.PROPORTION_INDIVIDUAL.computedValue
                    - key: primaryColumns.PROPORTION_INDIVIDUAL.linkUrl
                    - key: primaryColumns.PROPORTION_INDIVIDUAL.linkLabel
                    - key: primaryColumns.PROPORTION_INDIVIDUAL_WITH_GLOBAL.computedValue
                    - key: primaryColumns.PROPORTION_INDIVIDUAL_WITH_GLOBAL.linkUrl
                    - key: primaryColumns.PROPORTION_INDIVIDUAL_WITH_GLOBAL.linkLabel
                    - key: primaryColumns.TOTAL_BILLABLE.computedValue
                    - key: primaryColumns.TOTAL_BILLABLE.linkUrl
                    - key: primaryColumns.TOTAL_BILLABLE.linkLabel
                    - key: primaryColumns.TOTAL_BILLABLE_BLOCKS.computedValue
                    - key: primaryColumns.TOTAL_BILLABLE_BLOCKS.linkUrl
                    - key: primaryColumns.TOTAL_BILLABLE_BLOCKS.linkLabel
                    - key: primaryColumns.TOTAL_TIME_LOGGED.computedValue
                    - key: primaryColumns.TOTAL_TIME_LOGGED.linkUrl
                    - key: primaryColumns.TOTAL_TIME_LOGGED.linkLabel
                    - key: primaryColumns.TOTAL_TIME_LOGGED_ROUNDED.computedValue
                    - key: primaryColumns.TOTAL_TIME_LOGGED_ROUNDED.linkUrl
                    - key: primaryColumns.TOTAL_TIME_LOGGED_ROUNDED.linkLabel
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL.computedValue
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL.linkUrl
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL.linkLabel
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED.computedValue
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED.linkUrl
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED.linkLabel
                    - key: primaryColumns.MONTH_OF.outputFormat
                    - key: primaryColumns.CARE_SERVICES.linkUrl
                    - key: primaryColumns.CARE_SERVICES.linkLabel
                    - key: primaryColumns.CARE_SERVICES.computedValue
                    - key: primaryColumns.CCM_PAYER.linkUrl
                    - key: primaryColumns.CCM_PAYER.linkLabel
                    - key: primaryColumns.CCM_PAYER.computedValue
                    - key: primaryColumns.CCM_STAGE.linkUrl
                    - key: primaryColumns.CCM_STAGE.linkLabel
                    - key: primaryColumns.CCM_STAGE.computedValue
                    - key: primaryColumns.CREATED_ON.linkUrl
                    - key: primaryColumns.CREATED_ON.linkLabel
                    - key: primaryColumns.CREATED_ON.computedValue
                    - key: primaryColumns.CUSTOMER_FACILITY.linkUrl
                    - key: primaryColumns.CUSTOMER_FACILITY.linkLabel
                    - key: primaryColumns.CUSTOMER_FACILITY.computedValue
                    - key: primaryColumns.LEADSQUARED_ID.linkUrl
                    - key: primaryColumns.LEADSQUARED_ID.linkLabel
                    - key: primaryColumns.LEADSQUARED_ID.computedValue
                    - key: primaryColumns.LEAD_STAGE.linkUrl
                    - key: primaryColumns.LEAD_STAGE.linkLabel
                    - key: primaryColumns.LEAD_STAGE.computedValue
                    - key: primaryColumns.LEAD_TYPE.linkUrl
                    - key: primaryColumns.LEAD_TYPE.linkLabel
                    - key: primaryColumns.LEAD_TYPE.computedValue
                    - key: primaryColumns.PATIENT_DOB.linkUrl
                    - key: primaryColumns.PATIENT_DOB.linkLabel
                    - key: primaryColumns.PATIENT_DOB.computedValue
                    - key: primaryColumns.PATIENT_FIRST_NAME.linkUrl
                    - key: primaryColumns.PATIENT_FIRST_NAME.linkLabel
                    - key: primaryColumns.PATIENT_FIRST_NAME.computedValue
                    - key: primaryColumns.PATIENT_LAST_NAME.linkLabel
                    - key: primaryColumns.PATIENT_LAST_NAME.computedValue
                    - key: primaryColumns.RPM_PAYER.linkUrl
                    - key: primaryColumns.RPM_PAYER.linkLabel
                    - key: primaryColumns.RPM_PAYER.computedValue
                    - key: primaryColumns.RPM_STAGE.linkUrl
                    - key: primaryColumns.RPM_STAGE.linkLabel
                    - key: primaryColumns.RPM_STAGE.computedValue
                    - key: primaryColumns.VISITING_PROVIDER.linkUrl
                    - key: primaryColumns.VISITING_PROVIDER.linkLabel
                    - key: primaryColumns.VISITING_PROVIDER.computedValue
                    - key: primaryColumns.WELLNESS_PAYER.linkUrl
                    - key: primaryColumns.WELLNESS_PAYER.linkLabel
                    - key: primaryColumns.WELLNESS_PAYER.computedValue
                    - key: primaryColumns.WELLNESS_STAGE.linkUrl
                    - key: primaryColumns.WELLNESS_STAGE.linkLabel
                    - key: primaryColumns.WELLNESS_STAGE.computedValue
                    - key: primaryColumns.MONTH_ADHERENCE_RATE.linkUrl
                    - key: primaryColumns.MONTH_ADHERENCE_RATE.linkLabel
                    - key: primaryColumns.MONTH_ADHERENCE_RATE.computedValue
                    - key: primaryColumns.QUARTER_ADHERENCE_RATE.linkUrl
                    - key: primaryColumns.QUARTER_ADHERENCE_RATE.linkLabel
                    - key: primaryColumns.QUARTER_ADHERENCE_RATE.computedValue
                    - key: primaryColumns.READING_DAYS_LAST_MONTH.linkUrl
                    - key: primaryColumns.READING_DAYS_LAST_MONTH.linkLabel
                    - key: primaryColumns.READING_DAYS_LAST_MONTH.computedValue
                    - key: primaryColumns.READING_DAYS_LAST_QUARTER.linkUrl
                    - key: primaryColumns.READING_DAYS_LAST_QUARTER.linkLabel
                    - key: primaryColumns.READING_DAYS_LAST_QUARTER.computedValue
                    - key: primaryColumns.READING_DAYS_LAST_THREE.linkUrl
                    - key: primaryColumns.READING_DAYS_LAST_THREE.linkLabel
                    - key: primaryColumns.READING_DAYS_LAST_THREE.computedValue
                    - key: primaryColumns.READING_DAYS_LAST_WEEK.linkUrl
                    - key: primaryColumns.READING_DAYS_LAST_WEEK.linkLabel
                    - key: primaryColumns.READING_DAYS_LAST_WEEK.computedValue
                    - key: primaryColumns.THREE_DAY_ADHERENCE_RATE.linkUrl
                    - key: primaryColumns.THREE_DAY_ADHERENCE_RATE.linkLabel
                    - key: primaryColumns.THREE_DAY_ADHERENCE_RATE.computedValue
                    - key: primaryColumns.WEEK_ADHERENCE_RATE.linkUrl
                    - key: primaryColumns.WEEK_ADHERENCE_RATE.linkLabel
                    - key: primaryColumns.WEEK_ADHERENCE_RATE.computedValue
                    - key: primaryColumns.MONTHS_SINCE_CREATED.linkUrl
                    - key: primaryColumns.MONTHS_SINCE_CREATED.linkLabel
                    - key: primaryColumns.MONTHS_SINCE_CREATED.computedValue
                    - key: primaryColumns.TIME_LEFT.linkUrl
                    - key: primaryColumns.TIME_LEFT.linkLabel
                    - key: primaryColumns.TIME_LEFT.computedValue
                    - key: primaryColumns.TRUE_CARE_LINK.computedValue
                    - key: primaryColumns.TRUE_CARE_LINK.linkLabel
                    - key: primaryColumns.ASSIGNED_NAVIGATOR_TIME_LOGGED.computedValue
                    - key: primaryColumns.ASSIGNED_NAVIGATOR_TIME_LOGGED.linkUrl
                    - key: primaryColumns.ASSIGNED_NAVIGATOR_TIME_LOGGED.linkLabel
                    - key: primaryColumns.DAYS_FROM_LAST_ENC.computedValue
                    - key: primaryColumns.DAYS_FROM_LAST_ENC.linkUrl
                    - key: primaryColumns.DAYS_FROM_LAST_ENC.linkLabel
                    - key: primaryColumns.LATEST_ENC_CREATED_TIME.computedValue
                    - key: primaryColumns.LATEST_ENC_CREATED_TIME.linkUrl
                    - key: primaryColumns.LATEST_ENC_CREATED_TIME.linkLabel
                  dynamicPropertyPathList:
                    - key: primaryColumns.MONTH_OF.outputFormat
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 95
                  height:
                    mode: gridUnit
                    value: 68
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: false
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 1
                  onCancelChanges:
                    - id: d3qag7isi0
                      newWindow: true
                  onRowClicked:
                    - apiNames: []
                      direction: open
                      id: 9gbsc2ql4n
                      name: detail_slide
                      newWindow: true
                      type: controlSlideout
                    - id: i608m56syq
                  onSaveChanges:
                    - id: xowve3qe8z
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    ASSIGNED_NAVIGATOR_TIME_LOGGED:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ASSIGNED_NAVIGATOR_TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: ASSIGNED_NAVIGATOR_TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Care Navigator
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ASSIGNED_NAVIGATOR_TIME_LOGGED })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ASSIGNED_NAVIGATOR_TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    AT_LEAST_ONE_BILLABLE_BLOCK:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.AT_LEAST_ONE_BILLABLE_BLOCK })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: AT_LEAST_ONE_BILLABLE_BLOCK
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: AT_LEAST_ONE_BILLABLE_BLOCK
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.AT_LEAST_ONE_BILLABLE_BLOCK })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AT_LEAST_ONE_BILLABLE_BLOCK })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CARE_NAVIGATOR:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CARE_NAVIGATOR })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CARE_NAVIGATOR
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Care Navigator
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CARE_NAVIGATOR })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_NAVIGATOR })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CARE_SERVICES:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CARE_SERVICES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CARE_SERVICES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CARE_SERVICES
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CARE_SERVICES })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_SERVICES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CCM_PAYER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CCM_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CCM_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CCM_PAYER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CCM_PAYER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CCM_STAGE:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CCM_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CCM_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: CCM
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CCM_STAGE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig:
                        Active:
                          color: "#14CDB733"
                        Cancelled:
                          color: "#FF484833"
                        Candidate:
                          color: "#FF9F3533"
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CREATED_ON:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CREATED_ON })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CREATED_ON
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CREATED_ON
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CREATED_ON })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CREATED_ON })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CUSTOMER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CUSTOMER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CUSTOMER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 6
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CUSTOMER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CUSTOMER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CUSTOMER_FACILITY:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CUSTOMER_FACILITY })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CUSTOMER_FACILITY
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 7
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CUSTOMER_FACILITY
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CUSTOMER_FACILITY })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER_FACILITY })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    DAYS_FROM_LAST_ENC:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DAYS_FROM_LAST_ENC })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: DAYS_FROM_LAST_ENC
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Last Touch (Days)
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DAYS_FROM_LAST_ENC })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DAYS_FROM_LAST_ENC })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    DOB:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DOB })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: DOB
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: DOB
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DOB })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DOB })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    FIRST_NAME:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.FIRST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: FIRST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: FIRST_NAME
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.FIRST_NAME })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FIRST_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    GLOBAL_OUTLIER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GLOBAL_OUTLIER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: GLOBAL_OUTLIER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 10
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: GLOBAL_OUTLIER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GLOBAL_OUTLIER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.GLOBAL_OUTLIER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    GLOBAL_PROPORTIONAL_MULTIPLIER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GLOBAL_PROPORTIONAL_MULTIPLIER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: GLOBAL_PROPORTIONAL_MULTIPLIER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 11
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: GLOBAL_PROPORTIONAL_MULTIPLIER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GLOBAL_PROPORTIONAL_MULTIPLIER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.GLOBAL_PROPORTIONAL_MULTIPLIER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    GROUP_OUTLIER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GROUP_OUTLIER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: GROUP_OUTLIER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 12
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: GROUP_OUTLIER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GROUP_OUTLIER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.GROUP_OUTLIER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    GROUP_PROPORTIONAL_MULTIPLIER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GROUP_PROPORTIONAL_MULTIPLIER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: GROUP_PROPORTIONAL_MULTIPLIER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 13
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: GROUP_PROPORTIONAL_MULTIPLIER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GROUP_PROPORTIONAL_MULTIPLIER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.GROUP_PROPORTIONAL_MULTIPLIER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    INDIVIDUALLY_BILLABLE_BLOCKS:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.INDIVIDUALLY_BILLABLE_BLOCKS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: INDIVIDUALLY_BILLABLE_BLOCKS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 14
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: INDIVIDUALLY_BILLABLE_BLOCKS
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.INDIVIDUALLY_BILLABLE_BLOCKS })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.INDIVIDUALLY_BILLABLE_BLOCKS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    INDIVIDUAL_TIME_LOGGED:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.INDIVIDUAL_TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: INDIVIDUAL_TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 15
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CN+1TH
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.INDIVIDUAL_TIME_LOGGED })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.INDIVIDUAL_TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LAST_NAME:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LAST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      fontStyle: BOLD
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LAST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 16
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: LAST_NAME
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LAST_NAME })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LATEST_ENC_CREATED_TIME:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LATEST_ENC_CREATED_TIME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LATEST_ENC_CREATED_TIME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 19
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LATEST_ENC_CREATED_TIME
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LATEST_ENC_CREATED_TIME })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LATEST_ENC_CREATED_TIME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEADSQUARED_ID:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEADSQUARED_ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEADSQUARED_ID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 17
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LEADSQUARED_ID
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEADSQUARED_ID })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEADSQUARED_ID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEAD_STAGE:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEAD_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEAD_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 18
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Stage
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEAD_STAGE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig:
                        Active:
                          color: "#14CDB733"
                        Cancelled:
                          color: "#FF484833"
                        Deceased:
                          color: "#9D585833"
                        Hospice:
                          color: "#FF62A433"
                        Inactive:
                          color: "#7C4FF833"
                        Paused:
                          color: "#27BBFF33"
                        Re-engage:
                          color: "#FF9F3533"
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEAD_TYPE:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEAD_TYPE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEAD_TYPE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 19
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LEAD_TYPE
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEAD_TYPE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_TYPE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MONTHS_SINCE_CREATED:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTHS_SINCE_CREATED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MONTHS_SINCE_CREATED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 23
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Months
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTHS_SINCE_CREATED })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTHS_SINCE_CREATED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig:
                        "0":
                          color: "#90e789b3"
                        "1":
                          color: "#95d090b3"
                        "10":
                          color: "#000000"
                        "2":
                          color: "#9dc09ab3"
                        "3":
                          color: "#97a896b3"
                        "4":
                          color: "#878f86b3"
                        "5":
                          color: "#6c706cb3"
                        "6":
                          color: "#444444b3"
                        "7":
                          color: "#262626b3"
                        "8":
                          color: "#000000b3"
                        "9":
                          color: "#000000"
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MONTH_ADHERENCE_RATE:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTH_ADHERENCE_RATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: MONTH_ADHERENCE_RATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 23
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 30-Day
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTH_ADHERENCE_RATE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH_ADHERENCE_RATE })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MONTH_OF:
                      columnType: date
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTH_OF })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MONTH_OF
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 20
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Month Of
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTH_OF })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH_OF })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return 'MM-YYYY'})}}"
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_DOB:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_DOB })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_DOB
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 21
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PATIENT_DOB
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_DOB })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_FIRST_NAME:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_FIRST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: PATIENT_FIRST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 22
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: First
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_FIRST_NAME })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_INDIVIDUAL_ID:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_INDIVIDUAL_ID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 23
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: ID
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_LAST_NAME:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_LAST_NAME })}}"
                      editInputType: TEXT
                      enableFilter: true
                      enableSort: true
                      fontStyle: ""
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_LAST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 24
                      isDerived: false
                      isEditable: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Last
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_LAST_NAME })}}"
                      linkUrl: ""
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROPORTION_GLOBAL:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_GLOBAL })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PROPORTION_GLOBAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 25
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PROPORTION_GLOBAL
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_GLOBAL })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROPORTION_GLOBAL })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROPORTION_GROUP:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_GROUP })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: PROPORTION_GROUP
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 26
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CN
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_GROUP })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROPORTION_GROUP })}}"
                      maximumFractionDigits: "0"
                      minimumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROPORTION_INDIVIDUAL:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_INDIVIDUAL })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: PROPORTION_INDIVIDUAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 27
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Patient
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_INDIVIDUAL })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROPORTION_INDIVIDUAL })}}"
                      maximumFractionDigits: "0"
                      minimumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROPORTION_INDIVIDUAL_WITH_GLOBAL:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_INDIVIDUAL_WITH_GLOBAL
                        })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PROPORTION_INDIVIDUAL_WITH_GLOBAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 28
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PROPORTION_INDIVIDUAL_WITH_GLOBAL
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_INDIVIDUAL_WITH_GLOBAL
                        })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROPORTION_INDIVIDUAL_WITH_GLOBAL })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    QUARTER_ADHERENCE_RATE:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.QUARTER_ADHERENCE_RATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: QUARTER_ADHERENCE_RATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 33
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 90-Day
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.QUARTER_ADHERENCE_RATE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.QUARTER_ADHERENCE_RATE })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    READING_DAYS_LAST_MONTH:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_MONTH })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: READING_DAYS_LAST_MONTH
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 34
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: READING_DAYS_LAST_MONTH
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_MONTH })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS_LAST_MONTH })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    READING_DAYS_LAST_QUARTER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_QUARTER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: READING_DAYS_LAST_QUARTER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 35
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: READING_DAYS_LAST_QUARTER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_QUARTER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS_LAST_QUARTER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    READING_DAYS_LAST_THREE:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_THREE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: READING_DAYS_LAST_THREE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 36
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: READING_DAYS_LAST_THREE
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_THREE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS_LAST_THREE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    READING_DAYS_LAST_WEEK:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_WEEK })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: READING_DAYS_LAST_WEEK
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 37
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: READING_DAYS_LAST_WEEK
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_WEEK })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS_LAST_WEEK })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    RPM_PAYER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.RPM_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: RPM_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 29
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: RPM_PAYER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.RPM_PAYER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    RPM_STAGE:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.RPM_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: RPM_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 30
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: RPM
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.RPM_STAGE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig:
                        Active:
                          color: "#14CDB733"
                        Cancelled:
                          color: "#FF484833"
                        Inactive:
                          color: "#FF9F3533"
                        Paused:
                          color: "#27BBFF33"
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    THREE_DAY_ADHERENCE_RATE:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.THREE_DAY_ADHERENCE_RATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: THREE_DAY_ADHERENCE_RATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 41
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 3-Day
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.THREE_DAY_ADHERENCE_RATE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.THREE_DAY_ADHERENCE_RATE })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TIME_LEFT:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TIME_LEFT })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TIME_LEFT
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 42
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: "# Left to Bill"
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TIME_LEFT })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TIME_LEFT })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_BILLABLE:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_BILLABLE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_BILLABLE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 31
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_BILLABLE
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_BILLABLE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_BILLABLE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_BILLABLE_BLOCKS:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_BILLABLE_BLOCKS })}}"
                      enableFilter: true
                      enableSort: true
                      fontStyle: BOLD
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_BILLABLE_BLOCKS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 32
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Billable Codes
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_BILLABLE_BLOCKS })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_BILLABLE_BLOCKS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig:
                        "0":
                          color: "#0000001a"
                        "1":
                          color: "#1ac93026"
                        "10":
                          color: "#ff484866"
                        "11":
                          color: "#ff484880"
                        "12":
                          color: "#ff484899"
                        "2":
                          color: "#1ac9304d"
                        "3":
                          color: "#1ac93073"
                        "4":
                          color: "#1ac93099"
                        "5":
                          color: "#1ac930bf"
                        "6":
                          color: "#1aec34d9"
                        "7":
                          color: "#FF9F3533"
                        "8":
                          color: "#ff9f354d"
                        "9":
                          color: "#ff9f3566"
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_TIME_LOGGED:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 33
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_TIME_LOGGED
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_TIME_LOGGED_ROUNDED:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_ROUNDED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_TIME_LOGGED_ROUNDED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 34
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Billable
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_ROUNDED })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_TIME_LOGGED_ROUNDED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_TIME_LOGGED_WITH_GLOBAL:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_TIME_LOGGED_WITH_GLOBAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 35
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_TIME_LOGGED_WITH_GLOBAL
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED
                        })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 36
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED
                        })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TRUE_CARE_LINK:
                      columnType: link
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TRUE_CARE_LINK })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TRUE_CARE_LINK
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 47
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TRUE_CARE_LINK
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TRUE_CARE_LINK })}}"
                      linkUrl: ""
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    VISITING_PROVIDER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.VISITING_PROVIDER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: VISITING_PROVIDER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 37
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: VISITING_PROVIDER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.VISITING_PROVIDER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.VISITING_PROVIDER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    WEEK_ADHERENCE_RATE:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WEEK_ADHERENCE_RATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: WEEK_ADHERENCE_RATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 51
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 7-Day
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WEEK_ADHERENCE_RATE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WEEK_ADHERENCE_RATE })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    WELLNESS_PAYER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WELLNESS_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: WELLNESS_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 38
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: WELLNESS_PAYER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WELLNESS_PAYER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    WELLNESS_STAGE:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WELLNESS_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: WELLNESS_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 39
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: WELLNESS_STAGE
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WELLNESS_STAGE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  showColumnBorders: true
                  tableData: "{{getTimeAdherence.response}}"
                  tableHeader: ""
                  textSize: PARAGRAPH
                  top:
                    mode: gridUnit
                    value: 13
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: hmhk022xau
                  widgetName: MonthlyPatientLog
                  width:
                    mode: gridUnit
                    value: 95
                - animateLoading: true
                  collapseWhenHidden: false
                  defaultOptionValue: Jewell Dykstra
                  dynamicBindingPathList: []
                  dynamicTriggerPathList:
                    - key: onOptionChange
                    - key: onSearchTextChange
                    - key: onClear
                  gridColumns: 23
                  height:
                    mode: gridUnit
                    value: 3
                  isLoading: false
                  isVertical: false
                  isVisible: true
                  label: Care Navigator
                  left:
                    mode: gridUnit
                    value: 0
                  onClear:
                    - id: 0k5o8mol3w
                      newWindow: true
                  onOptionChange:
                    - apiNames:
                        - getTimeAdherence
                      id: 5iagr61zbl
                      newWindow: true
                      type: executeApi
                    - apiNames:
                        - getTimeTracksForNav
                      id: 730mdyzydw
                      type: executeApi
                    - apiNames:
                        - updateTimeTrack
                      id: 96yi39rn7a
                      state:
                        id: b1cfc6a6-8e9c-4d7e-910b-297e61bedfd7
                        name: trackTimeDataArr
                      type: executeApi
                      value: |-
                        {{getTimeTracksForNav.response.map(track => ({
                        	id: track.ID,
                        	patient_id: track.PATIENT_ID,
                        	first_name: track.PATIENT_FIRSTNAME,
                        	last_name: track.PATIENT_LASTNAME,
                        	navigator: track.NAVIGATOR,
                        	start_time: (new Date(track.START_TIME)).toISOString()
                        }))}}
                  onSearchTextChange:
                    - id: rw4qwocmux
                      newWindow: true
                  options: |-
                    [
                      'Lana Ahmed',
                    	'Natalie Aldaw',
                    	'Barbara Aubry',
                    	'Jewell Dykstra',
                    	'Sandy Farley',
                    	'Hayden Geitner',
                    	'Marc Prescott',
                    	'Beth Sims',
                    	'Cailie Smith'
                    ]
                  parentId: dwpvpsnarl
                  placeholderText: Select an option
                  top:
                    mode: gridUnit
                    value: 1
                  type: DROP_DOWN_WIDGET
                  widgetId: 0rjttzyldd
                  widgetName: dropdownCN
                  width:
                    mode: gridUnit
                    value: 23
                - animateLoading: true
                  collapseWhenHidden: false
                  dynamicBindingPathList: []
                  dynamicTriggerPathList: []
                  gridColumns: 24
                  height:
                    mode: gridUnit
                    value: 3
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 72
                  parentId: dwpvpsnarl
                  text: Reading Adherence Rates
                  textAlign: CENTER
                  textStyle: HEADING_2
                  textType: text
                  top:
                    mode: gridUnit
                    value: 10
                  type: TEXT_WIDGET
                  verticalAlign: AUTO
                  widgetId: zll8fl5amp
                  widgetName: Text1
                  width:
                    mode: gridUnit
                    value: 24
                - animateLoading: false
                  appMode: EDIT
                  canExtend: false
                  children:
                    - appMode: EDIT
                      canExtend: false
                      children:
                        - appMode: EDIT
                          children:
                            - appMode: EDIT
                              canExtend: false
                              children:
                                - animateLoading: false
                                  appMode: EDIT
                                  backgroundColor: '{{ currentCell.blank ? "#00000000" : theme.colors.danger }}'
                                  buttonStyle: PRIMARY_BUTTON
                                  collapseWhenHidden: true
                                  docsUrl: https://docs.superblocks.com/components/button
                                  dynamicBindingPathList:
                                    - key: icon
                                    - key: text
                                    - key: backgroundColor
                                    - key: textColor
                                  dynamicPropertyPathList:
                                    - key: icon
                                    - key: backgroundColor
                                    - key: textColor
                                  dynamicTriggerPathList:
                                    - key: onClick
                                  gridColumns: 14
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  icon: "{{currentCell.blank ? '' : icons.stop_circle}}"
                                  iconPosition: LEFT
                                  isDefaultClickDisabled: true
                                  isDisabled: false
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 0
                                  onClick:
                                    - apiNames:
                                        - start_timer
                                      code: |-
                                        if (!timeTrackStatusGrid.selectedCell.blank) {
                                        	currentTrackeToStop.set(timeTrackStatusGrid.selectedCell.patient_id);
                                        	timeTrackModal.open()
                                        }
                                      command: start
                                      id: r54kokllvi
                                      type: runJs
                                  parentId: mff495zoy0
                                  text: "{{!currentCell.blank ? currentCell.showTime + ' - ' +
                                    currentCell.first_name + ' ' +
                                    currentCell.last_name : \"No more Track\"}}"
                                  textColor: '{{currentCell.blank ? "#000" : "#FFFFFF"}}'
                                  top:
                                    mode: gridUnit
                                    value: 0
                                  type: BUTTON_WIDGET
                                  widgetId: 8uj5s8ql4n
                                  widgetName: Button4
                                  width:
                                    mode: gridUnit
                                    value: 14
                              collapseWhenHidden: true
                              containerStyle: none
                              detachFromLayout: true
                              disablePropertyPane: true
                              dragDisabled: true
                              gridColumns: 14
                              height:
                                mode: gridUnit
                                value: 3
                              ignoreCollision: true
                              isLoading: false
                              isVisible: true
                              left:
                                mode: gridUnit
                                value: 0
                              openParentPropertyPane: true
                              parentId: 81elrf9wvd
                              resizeDisabled: true
                              top:
                                mode: gridUnit
                                value: 0
                              type: CANVAS_WIDGET
                              widgetId: mff495zoy0
                              widgetName: Canvas16
                              width:
                                mode: gridUnit
                                value: 14
                          collapseWhenHidden: true
                          containerStyle: none
                          disablePropertyPane: true
                          disallowCopy: true
                          dragDisabled: true
                          gridColumns: 14
                          height:
                            mode: gridUnit
                            value: 5
                          isDeletable: false
                          isLoading: false
                          isVisible: true
                          left:
                            mode: gridUnit
                            value: 0
                          openParentPropertyPane: true
                          padding:
                            bottom:
                              mode: px
                              value: 0
                            left:
                              mode: px
                              value: 0
                            right:
                              mode: px
                              value: 0
                            top:
                              mode: px
                              value: 0
                          parentId: yj4g9g6g2l
                          resizeDisabled: false
                          shouldScrollContents: true
                          top:
                            mode: gridUnit
                            value: 0
                          type: CONTAINER_WIDGET
                          widgetId: 81elrf9wvd
                          widgetName: Container3
                          width:
                            mode: gridUnit
                            value: 14
                      collapseWhenHidden: true
                      containerStyle: none
                      detachFromLayout: true
                      disablePropertyPane: true
                      dropDisabled: true
                      gridColumns: 21
                      height:
                        mode: gridUnit
                        value: 9
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      openParentPropertyPane: true
                      padding:
                        bottom:
                          mode: px
                          value: 0
                        left:
                          mode: px
                          value: 0
                        right:
                          mode: px
                          value: 0
                        top:
                          mode: px
                          value: 0
                      parentId: cxj6rg4lsc
                      resizeDisabled: true
                      top:
                        mode: gridUnit
                        value: 0
                      type: CANVAS_WIDGET
                      widgetId: yj4g9g6g2l
                      widgetName: Canvas15
                      width:
                        mode: gridUnit
                        value: 21
                  collapseWhenHidden: true
                  columnCount: 1
                  containerStyle: none
                  defaultSelectedCell: "0"
                  dynamicBindingPathList:
                    - key: gridBindings.Button4.onClick[1].type
                    - key: gridBindings.Button4.onClick[1].name
                    - key: gridData
                    - key: gridBindings.Button4.icon
                    - key: gridBindings.Button4.buttonStyle
                    - key: gridBindings.Button4.backgroundColor
                    - key: gridBindings.Button4.onClick[0].code
                    - key: gridBindings.Button4.textColor
                    - key: gridBindings.Button4.text
                  dynamicPropertyPathList: []
                  dynamicTriggerPathList:
                    - key: onCellClicked
                  enhancements: true
                  gridBindings:
                    Button4:
                      backgroundColor: |-
                        {{timeTrackStatusGrid.gridData.map((currentCell, currentIndex) => {
                                      return (function(){
                                        try {
                                          return   currentCell.blank ? "#00000000" : theme.colors.danger ;
                                        } catch (err) {
                                          console.error("Error executing currentCell js in Grid component timeTrackStatusGrid", err);
                                          return "";
                                        }
                                      })();
                                    })}}
                      buttonStyle: |-
                        {{timeTrackStatusGrid.gridData.map((currentCell, currentIndex) => {
                                      return (function(){
                                        try {
                                          return  'PRIMARY_BUTTON';
                                        } catch (err) {
                                          console.error("Error executing currentCell js in Grid component timeTrackStatusGrid", err);
                                          return "";
                                        }
                                      })();
                                    })}}
                      dynamicPropertyPathList:
                        - key: icon
                        - key: backgroundColor
                        - key: textColor
                      icon: |-
                        {{timeTrackStatusGrid.gridData.map((currentCell, currentIndex) => {
                                      return (function(){
                                        try {
                                          return  currentCell.blank ? '' : icons.stop_circle;
                                        } catch (err) {
                                          console.error("Error executing currentCell js in Grid component timeTrackStatusGrid", err);
                                          return "";
                                        }
                                      })();
                                    })}}
                      onClick:
                        - apiNames:
                            - start_timer
                          code: |-
                            {{timeTrackStatusGrid.gridData.map((currentCell, currentIndex) => {
                                          return (function(){
                                            try {
                                              return  'if (!timeTrackStatusGrid.selectedCell.blank) {
                            	currentTrackeToStop.set(timeTrackStatusGrid.selectedCell.patient_id);
                            	timeTrackModal.open()
                            }';
                                            } catch (err) {
                                              console.error("Error executing currentCell js in Grid component timeTrackStatusGrid", err);
                                              return "";
                                            }
                                          })();
                                        })}}
                          command: start
                          id: r54kokllvi
                          type: runJs
                      text: |-
                        {{timeTrackStatusGrid.gridData.map((currentCell, currentIndex) => {
                                      return (function(){
                                        try {
                                          return  !currentCell.blank ? currentCell.showTime + ' - ' + currentCell.first_name + ' ' + currentCell.last_name : "No more Track";
                                        } catch (err) {
                                          console.error("Error executing currentCell js in Grid component timeTrackStatusGrid", err);
                                          return "";
                                        }
                                      })();
                                    })}}
                      textColor: |-
                        {{timeTrackStatusGrid.gridData.map((currentCell, currentIndex) => {
                                      return (function(){
                                        try {
                                          return  currentCell.blank ? "#000" : "#FFFFFF";
                                        } catch (err) {
                                          console.error("Error executing currentCell js in Grid component timeTrackStatusGrid", err);
                                          return "";
                                        }
                                      })();
                                    })}}
                    Canvas15:
                      appMode: EDIT
                      canExtend: false
                      children:
                        - 81elrf9wvd
                      collapseWhenHidden: true
                      containerStyle: none
                      detachFromLayout: true
                      disablePropertyPane: true
                      dropDisabled: true
                      gridColumns: 34
                      height:
                        mode: gridUnit
                        value: 6
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      openParentPropertyPane: true
                      padding:
                        bottom:
                          mode: px
                          value: 0
                        left:
                          mode: px
                          value: 0
                        right:
                          mode: px
                          value: 0
                        top:
                          mode: px
                          value: 0
                      parentId: cxj6rg4lsc
                      resizeDisabled: true
                      top:
                        mode: gridUnit
                        value: 0
                      type: CANVAS_WIDGET
                      widgetId: yj4g9g6g2l
                      widgetName: Canvas15
                      width:
                        mode: gridUnit
                        value: 34
                    Canvas16:
                      appMode: EDIT
                      canExtend: false
                      children:
                        - 1zpjldfnwy
                        - alfguoajz1
                        - sx29owqbff
                        - t2wqbdc9zv
                      collapseWhenHidden: true
                      containerStyle: none
                      detachFromLayout: true
                      disablePropertyPane: true
                      dragDisabled: true
                      gridColumns: 22
                      height:
                        mode: gridUnit
                        value: 21
                      ignoreCollision: true
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      openParentPropertyPane: true
                      parentId: 81elrf9wvd
                      resizeDisabled: true
                      top:
                        mode: gridUnit
                        value: 0
                      type: CANVAS_WIDGET
                      widgetId: mff495zoy0
                      widgetName: Canvas16
                      width:
                        mode: gridUnit
                        value: 22
                    Container3:
                      appMode: EDIT
                      children:
                        - mff495zoy0
                      collapseWhenHidden: true
                      containerStyle: none
                      disablePropertyPane: true
                      disallowCopy: true
                      dragDisabled: true
                      gridColumns: 22
                      height:
                        mode: gridUnit
                        value: 21
                      isDeletable: false
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      openParentPropertyPane: true
                      padding:
                        bottom:
                          mode: px
                          value: 0
                        left:
                          mode: px
                          value: 0
                        right:
                          mode: px
                          value: 0
                        top:
                          mode: px
                          value: 0
                      parentId: yj4g9g6g2l
                      resizeDisabled: false
                      shouldScrollContents: true
                      top:
                        mode: gridUnit
                        value: 0
                      type: CONTAINER_WIDGET
                      widgetId: 81elrf9wvd
                      widgetName: Container3
                      width:
                        mode: gridUnit
                        value: 22
                  gridCellScrollable: false
                  gridColumns: 21
                  gridData: "{{[...updateTimeTrack.response.filter(item => item.navigator ==
                    dropdownCN.selectedOptionValue), {blank: true}]}}"
                  height:
                    mode: gridUnit
                    value: 9
                  isLoading: false
                  isSearchable: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 75
                  onCellClicked:
                    - id: 3xiw4h4knn
                  parentId: dwpvpsnarl
                  title: ""
                  top:
                    mode: gridUnit
                    value: 0
                  type: GRID_WIDGET
                  widgetId: cxj6rg4lsc
                  widgetName: timeTrackStatusGrid
                  width:
                    mode: gridUnit
                    value: 21
              collapseWhenHidden: false
              containerStyle: none
              detachFromLayout: true
              dragDisabled: true
              dynamicBindingPathList: []
              dynamicTriggerPathList: []
              gridColumns: 96
              height:
                mode: fitContent
                value: 111
              isLoading: false
              isVisible: true
              layout: FIXED_GRID
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: px
                value: 1292
              parentId: lm2jrimm2x
              top:
                mode: gridUnit
                value: 0
              type: CANVAS_WIDGET
              widgetId: dwpvpsnarl
              widgetName: Canvas1
              width:
                mode: gridUnit
                value: 96
          detachFromLayout: true
          dragDisabled: true
          dynamicBindingPathList: []
          dynamicTriggerPathList: []
          gridColumns: 96
          height:
            mode: gridUnit
            value: 113
          isLoading: false
          isVisible: true
          left:
            mode: gridUnit
            value: 0
          parentId: "0"
          shouldScrollContents: true
          top:
            mode: gridUnit
            value: 0
          type: SECTION_WIDGET
          widgetId: lm2jrimm2x
          widgetName: Section1
          width:
            mode: gridUnit
            value: 96
        - canOutsideClickClose: true
          children:
            - canExtend: true
              children:
                - canExtend: true
                  children:
                    - animateLoading: true
                      collapseWhenHidden: false
                      gridColumns: 70
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      parentId: tafzsdmatz
                      text: Slideout Title
                      textAlign: LEFT
                      textStyle: HEADING_1
                      textType: text
                      top:
                        mode: gridUnit
                        value: 0
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: nrjiot9jbj
                      widgetName: Text3
                      width:
                        mode: gridUnit
                        value: 70
                    - animateLoading: true
                      cachedColumnSettings: {}
                      collapseWhenHidden: false
                      columnOrder:
                        - photo
                        - name
                        - twitter
                        - date_joined
                        - email
                        - action
                      compactMode: SHORT
                      defaultFilters: "{}"
                      defaultSelectedRow: "0"
                      derivedColumns: {}
                      dynamicBindingPathList:
                        - key: primaryColumns.name.linkUrl
                        - key: primaryColumns.name.linkLabel
                        - key: primaryColumns.name.computedValue
                        - key: primaryColumns.name.displayedValue
                        - key: primaryColumns.twitter.computedValue
                        - key: primaryColumns.twitter.linkUrl
                        - key: primaryColumns.twitter.linkLabel
                        - key: primaryColumns.date_joined.computedValue
                        - key: primaryColumns.date_joined.linkUrl
                        - key: primaryColumns.date_joined.linkLabel
                        - key: primaryColumns.photo.computedValue
                        - key: primaryColumns.photo.linkUrl
                        - key: primaryColumns.photo.linkLabel
                        - key: primaryColumns.photo.displayedValue
                        - key: primaryColumns.email.computedValue
                        - key: primaryColumns.email.linkUrl
                        - key: primaryColumns.email.linkLabel
                        - key: primaryColumns.email.displayedValue
                        - key: primaryColumns.action.computedValue
                        - key: primaryColumns.action.linkUrl
                        - key: primaryColumns.action.linkLabel
                        - key: primaryColumns.action.buttonLabel
                        - key: primaryColumns.action.displayedValue
                      dynamicTriggerPathList:
                        - key: primaryColumns.action.onClick
                        - key: onRowClicked
                        - key: onSaveChanges
                        - key: onCancelChanges
                      gridColumns: 66
                      height:
                        mode: gridUnit
                        value: 30
                      horizontalAlignment: LEFT
                      isDownloadable: true
                      isFilterable: true
                      isLoading: false
                      isSearchable: true
                      isVisible: true
                      label: Data
                      left:
                        mode: gridUnit
                        value: 0
                      onCancelChanges:
                        - id: 1cp7733mzr
                          newWindow: true
                      onRowClicked:
                        - id: wzbhcrvvug
                          newWindow: true
                      onSaveChanges:
                        - id: efuig7lb6l
                          newWindow: true
                      pageType: NONE
                      parentId: tafzsdmatz
                      primaryColumns:
                        action:
                          buttonLabel: Approve
                          columnType: button
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: action
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 5
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: action
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          notation: standard
                          onClick:
                            - code: showAlert(currentRow.name + ' is approved!', 'success')
                              id: id0
                              newWindow: true
                              type: runJs
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        date_joined:
                          columnType: date
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: date_joined
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 2
                          inputFormat: YYYY-MM-DD
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: date joined
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          outputFormat: MM-DD-YYYY
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        email:
                          columnType: text
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: email
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 4
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: email
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        name:
                          columnType: text
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: name
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 0
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: name
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        photo:
                          columnType: image
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: photo
                          imageBorderRadius:
                            mode: "%"
                            value: 50
                          imageSize: FIXED
                          index: 3
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: photo
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        twitter:
                          columnType: link
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.twitter })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: twitter
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 1
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: twitter
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return '@' +
                            currentRow.twitter?.split('/').pop()})}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.twitter })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                      tableData: |-
                        [
                          {
                            "name": "Billie Eilish",
                            "twitter": "https://twitter.com/billieeilish",
                            "date_joined": "2019-01-06",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/billie_eilish.png",
                            "email": "bad_guy@gmail.com",
                            "action": ""
                          },
                          {
                            "name": "Thom Yorke",
                            "twitter": "https://twitter.com/thomyorke",
                            "date_joined": "2019-01-05",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/thom_yorke.png",
                            "email": "karma_police_thom@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Katy Perry",
                            "twitter": "https://twitter.com/katyperry",
                            "date_joined": "2019-01-02",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/katy_perry.png",
                            "email": "katycat@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Ryan Gosling",
                            "twitter": "https://twitter.com/RyanGosling",
                            "date_joined": "2019-01-03",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/ryan_gosling.png",
                            "email": "ryan_the_notebook@gmail.com",
                            "action": ""
                          },
                          {
                            "name": "Dua Lipa",
                            "twitter": "https://twitter.com/DUALIPA",
                            "date_joined": "2019-01-07",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/dua_lipa.png",
                            "email": "dua_levitating@yahoo.com",
                            "action": ""
                          },
                          {
                            "name": "Beyonce Knowles",
                            "twitter": "https://twitter.com/Beyonce",
                            "date_joined": "2019-01-09",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/beyonce_knowles.png",
                            "email": "beyonce_run_the_world@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Lopez Jennifer",
                            "twitter": "https://twitter.com/JLo",
                            "date_joined": "2019-01-04",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/jennifer_lopez.png",
                            "email": "jenny_from_the_block@yahoo.com",
                            "action": ""
                          }
                        ]
                      tableHeader: Users
                      textSize: PARAGRAPH
                      top:
                        mode: gridUnit
                        value: 4
                      type: TABLE_WIDGET
                      verticalAlignment: CENTER
                      widgetId: gy833b68eg
                      widgetName: Table1
                      width:
                        mode: gridUnit
                        value: 66
                    - animateLoading: true
                      chartData: |-
                        [
                          {
                            "city": "Toronto",
                            "population": 2930000,
                            "country": "Canada"
                          },
                          {
                            "city": "New York",
                            "population": 8419000,
                            "country": "USA"
                          },
                          {
                            "city": "Vancouver",
                            "population": 675218,
                            "country": "Canada"
                          },
                          {
                            "city": "San Francisco",
                            "population": 874961,
                            "country": "USA"
                          }
                        ]
                      chartDefinition: ui
                      chartType: COLUMN_CHART
                      collapseWhenHidden: false
                      columnInfo:
                        - canBeNumeric: false
                          name: city
                          type: string
                        - canBeNumeric: false
                          name: country
                          type: string
                        - canBeNumeric: true
                          name: population
                          type: number
                      dynamicBindingPathList: []
                      dynamicTriggerPathList:
                        - key: onSelectData
                      gridColumns: 35
                      groupBy:
                        field: ""
                      headerTitle: My chart
                      height:
                        mode: gridUnit
                        value: 27
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      onSelectData:
                        - id: see0pd32kq
                          newWindow: true
                      parentId: tafzsdmatz
                      plotlyChartJson:
                        data:
                          - type: bar
                            x:
                              - 1
                              - 2
                              - 3
                            y:
                              - 2
                              - 5
                              - 3
                        layout: {}
                      size:
                        field: ""
                      top:
                        mode: gridUnit
                        value: 35
                      type: CHART_WIDGET
                      widgetId: u8t4swo9hq
                      widgetName: Chart1
                      width:
                        mode: gridUnit
                        value: 35
                      x:
                        axisTitle: ""
                        dataType: auto
                        field: city
                      y:
                        axisTitle: ""
                        dataType: number
                        notation: standard
                        series:
                          - field: population
                  collapseWhenHidden: false
                  detachFromLayout: true
                  gridColumns: 80
                  height:
                    mode: fitContent
                    value: 69
                  isDisabled: false
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 0
                  minHeight:
                    mode: px
                    value: 800
                  parentId: 2404l7dsek
                  shouldScrollContents: true
                  top:
                    mode: gridUnit
                    value: 0
                  type: CANVAS_WIDGET
                  widgetId: tafzsdmatz
                  widgetName: Canvas2
                  width:
                    mode: gridUnit
                    value: 0
              collapseWhenHidden: false
              detachFromLayout: true
              dragDisabled: true
              gridColumns: 80
              height:
                mode: fitContent
                value: 71
              isLoading: false
              isVisible: true
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: px
                value: 800
              parentId: tw4avekhqd
              top:
                mode: gridUnit
                value: 0
              type: SECTION_WIDGET
              widgetId: 2404l7dsek
              widgetName: Section2
              width:
                mode: gridUnit
                value: 0
          detachFromLayout: true
          dynamicBindingPathList: []
          dynamicTriggerPathList:
            - key: onOpen
            - key: onClose
          gridColumns: 80
          hasBackdrop: true
          height:
            mode: gridUnit
            value: 69
          isLoading: false
          left:
            mode: gridUnit
            value: 0
          onClose:
            - apiNames:
                - getTimeAdherence
              id: ye0z5k41cc
              newWindow: true
              type: executeApi
          onOpen:
            - apiNames:
                - getTimeAdherence
              id: lcq1b9v970
              newWindow: true
              type: executeApi
          parentId: "0"
          shouldScrollContents: true
          top:
            mode: gridUnit
            value: 0
          type: SLIDEOUT_WIDGET
          widgetId: tw4avekhqd
          widgetName: Slideout1
          width:
            mode: gridUnit
            value: 80
        - canOutsideClickClose: true
          children:
            - canExtend: true
              children:
                - canExtend: true
                  children:
                    - animateLoading: true
                      collapseWhenHidden: true
                      gridColumns: 91
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      parentId: gvp4cuo8bl
                      text: Modal Title
                      textAlign: LEFT
                      textStyle: HEADING_2
                      textType: text
                      top:
                        mode: gridUnit
                        value: 0
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: nddxz57sh7
                      widgetName: Text4
                      width:
                        mode: gridUnit
                        value: 91
                    - animateLoading: true
                      buttonStyle: SECONDARY_BUTTON
                      collapseWhenHidden: true
                      docsUrl: https://docs.superblocks.com/components/button
                      dynamicTriggerPathList:
                        - key: onClick
                      gridColumns: 20
                      height:
                        mode: gridUnit
                        value: 3
                      iconPosition: LEFT
                      isDefaultClickDisabled: true
                      isDisabled: false
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 54
                      onClick:
                        - direction: close
                          id: kf05y1i2rm
                          name: Modal1
                          type: controlModal
                      parentId: gvp4cuo8bl
                      text: Cancel
                      top:
                        mode: gridUnit
                        value: 28
                      type: BUTTON_WIDGET
                      widgetId: bryzgal8yn
                      widgetName: Button1
                      width:
                        mode: gridUnit
                        value: 20
                    - animateLoading: true
                      buttonStyle: PRIMARY_BUTTON
                      collapseWhenHidden: true
                      docsUrl: https://docs.superblocks.com/components/button
                      gridColumns: 20
                      height:
                        mode: gridUnit
                        value: 3
                      iconPosition: LEFT
                      isDefaultClickDisabled: true
                      isDisabled: false
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 76
                      parentId: gvp4cuo8bl
                      text: Confirm
                      top:
                        mode: gridUnit
                        value: 28
                      type: BUTTON_WIDGET
                      widgetId: kn6plseaft
                      widgetName: Button2
                      width:
                        mode: gridUnit
                        value: 20
                  collapseWhenHidden: true
                  detachFromLayout: true
                  gridColumns: 96
                  height:
                    mode: fitContent
                    value: 31
                  isDisabled: false
                  isInModal: true
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 0
                  minHeight:
                    mode: px
                    value: 340
                  parentId: phbvgbs6yb
                  shouldScrollContents: true
                  top:
                    mode: gridUnit
                    value: 0
                  type: CANVAS_WIDGET
                  widgetId: gvp4cuo8bl
                  widgetName: Canvas3
                  width:
                    mode: gridUnit
                    value: 0
              collapseWhenHidden: true
              detachFromLayout: true
              dragDisabled: true
              gridColumns: 96
              height:
                mode: fitContent
                value: 33
              isLoading: false
              isVisible: true
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: px
                value: 340
              parentId: kf05y1i2rm
              top:
                mode: gridUnit
                value: 0
              type: SECTION_WIDGET
              widgetId: phbvgbs6yb
              widgetName: Section3
              width:
                mode: gridUnit
                value: 0
          detachFromLayout: true
          dynamicBindingPathList: []
          dynamicTriggerPathList:
            - key: onOpen
            - key: onClose
          gridColumns: 96
          hasBackdrop: true
          height:
            mode: gridUnit
            value: 0
          heightPreset: MEDIUM
          isLoading: false
          left:
            mode: gridUnit
            value: 0
          onClose:
            - id: 7h14jutl2h
              newWindow: true
          onOpen:
            - id: 8l7ctanz9s
              newWindow: true
          parentId: "0"
          shouldScrollContents: true
          top:
            mode: gridUnit
            value: 0
          type: MODAL_WIDGET
          widgetId: kf05y1i2rm
          widgetName: Modal1
          width:
            mode: gridUnit
            value: 96
          widthPreset: MEDIUM
        - canOutsideClickClose: true
          children:
            - canExtend: true
              children:
                - alignment: STRETCH
                  canExtend: true
                  children:
                    - appMode: EDIT
                      children:
                        - alignment: STRETCH
                          appMode: EDIT
                          canExtend: false
                          children:
                            - animateLoading: true
                              collapseWhenHidden: true
                              dynamicBindingPathList:
                                - key: text
                              dynamicTriggerPathList: []
                              gridColumns: 51
                              height:
                                mode: gridUnit
                                value: 3
                              isLoading: false
                              isVisible: true
                              left:
                                mode: gridUnit
                                value: 0
                              parentId: tnn2lo74a4
                              text: "{{MonthlyPatientLog.selectedRow.FIRST_NAME}}
                                {{MonthlyPatientLog.selectedRow.LAST_NAME}}"
                              textAlign: LEFT
                              textStyle: HEADING_1
                              textType: text
                              top:
                                mode: gridUnit
                                value: 0
                              type: TEXT_WIDGET
                              verticalAlign: AUTO
                              widgetId: ga8xfd8n28
                              widgetName: Text5
                              width:
                                mode: gridUnit
                                value: 51
                            - animateLoading: false
                              appMode: EDIT
                              backgroundColor: "{{getCurrentPanelTime.response ? '#F45252' : '#E8EAED'}}"
                              buttonStyle: PRIMARY_BUTTON
                              collapseWhenHidden: true
                              docsUrl: https://docs.superblocks.com/components/button
                              dynamicBindingPathList:
                                - key: backgroundColor
                                - key: textColor
                                - key: text
                                - key: isDisabled
                                - key: icon
                              dynamicPropertyPathList:
                                - key: backgroundColor
                                - key: textColor
                                - key: icon
                                - key: isDisabled
                              dynamicTriggerPathList:
                                - key: onClick
                              gridColumns: 9
                              height:
                                mode: gridUnit
                                value: 3
                              icon: "{{ getCurrentPanelTime.response ?  icons.stop_circle : undefined }}"
                              iconPosition: LEFT
                              isDefaultClickDisabled: true
                              isDisabled: "{{getCurrentPanelTime.response == undefined}}"
                              isLoading: false
                              isVisible: true
                              left:
                                mode: gridUnit
                                value: 68
                              onClick:
                                - apiNames:
                                    - startTimeTracked
                                  id: 0jjmohz2x9
                                  type: executeApi
                                - apiNames:
                                    - start_timer
                                  code: |-
                                    if (getCurrentPanelTime.response) {
                                    currentTrackeToStop.set(MonthlyPatientLog.selectedRow.PATIENT_INDIVIDUAL_ID);
                                    	timeTrackModal.open();
                                    } else {
                                    	getTimeTracksForNav.run();
                                    }
                                  command: start
                                  id: r54kokllvi
                                  type: runJs
                                - apiNames:
                                    - updateTimeTrack
                                  id: zea2irbf5t
                                  type: executeApi
                                - apiNames:
                                    - getCurrentPanelTime
                                  id: 4ytxr3atyr
                                  type: executeApi
                              parentId: tnn2lo74a4
                              text: '{{getCurrentPanelTime.response ? getCurrentPanelTime.response : "Track
                                Time"}}'
                              textColor: "{{getCurrentPanelTime.response ? '#FFFFFF' : '#1F2633'}}"
                              top:
                                mode: gridUnit
                                value: 0
                              type: BUTTON_WIDGET
                              widgetId: na50l0ptru
                              widgetName: track_time_btn
                              width:
                                mode: gridUnit
                                value: 9
                          collapseWhenHidden: true
                          containerStyle: none
                          detachFromLayout: true
                          distribution: TOP
                          dynamicBindingPathList: []
                          dynamicTriggerPathList: []
                          gridColumns: 48
                          height:
                            mode: fitContent
                            value: 3
                          isLoading: false
                          isVisible: true
                          layout: FIXED_GRID
                          left:
                            mode: gridUnit
                            value: 0
                          parentId: 4zrpj5zhzu
                          spacing:
                            mode: px
                            value: 12
                          top:
                            mode: gridUnit
                            value: 0
                          type: CANVAS_WIDGET
                          widgetId: tnn2lo74a4
                          widgetName: Canvas14
                          width:
                            mode: gridUnit
                            value: 48
                      collapseWhenHidden: true
                      containerStyle: card
                      dynamicBindingPathList: []
                      dynamicTriggerPathList: []
                      gridColumns: 80
                      height:
                        mode: fitContent
                        value: 5
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      parentId: unwvhxvxg3
                      shouldScrollContents: true
                      top:
                        mode: gridUnit
                        value: 0
                      type: CONTAINER_WIDGET
                      widgetId: 4zrpj5zhzu
                      widgetName: Container2
                      width:
                        mode: gridUnit
                        value: 80
                    - appMode: EDIT
                      children:
                        - appMode: EDIT
                          canExtend: true
                          children:
                            - animateLoading: true
                              cachedColumnSettings:
                                action:
                                  buttonLabel: Approve
                                  columnType: button
                                  computedValue: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: action
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: action
                                  linkLabel: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  linkUrl: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  notation: standard
                                  onClick:
                                    - code: showAlert(currentRow.name + ' is approved!', 'success')
                                      id: id0
                                      newWindow: true
                                      type: runJs
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                date_joined:
                                  columnType: date
                                  computedValue: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: date_joined
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  inputFormat: YYYY-MM-DD
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: date joined
                                  linkLabel: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  linkUrl: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                photo:
                                  columnType: image
                                  computedValue: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: photo
                                  imageBorderRadius:
                                    mode: "%"
                                    value: 50
                                  imageSize: FIXED
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: photo
                                  linkLabel: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  linkUrl: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                twitter:
                                  columnType: link
                                  computedValue: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: twitter
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: twitter
                                  linkLabel: "{{Call_table.tableDataWithInserts.map((currentRow) => { return '@' +
                                    currentRow.twitter?.split('/').pop()})}}"
                                  linkUrl: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              collapseWhenHidden: true
                              columnOrder:
                                - Agent Name
                                - Call Status
                                - Called At
                                - Caller Name
                                - Duration
                              compactMode: SHORT
                              defaultFilters: "{}"
                              defaultSelectedRow: "0"
                              derivedColumns: {}
                              dynamicBindingPathList:
                                - key: tableData
                                - key: primaryColumns['Agent Name'].computedValue
                                - key: primaryColumns['Agent Name'].linkUrl
                                - key: primaryColumns['Agent Name'].linkLabel
                                - key: primaryColumns['Call Status'].computedValue
                                - key: primaryColumns['Call Status'].linkUrl
                                - key: primaryColumns['Call Status'].linkLabel
                                - key: primaryColumns['Called At'].computedValue
                                - key: primaryColumns['Called At'].linkUrl
                                - key: primaryColumns['Called At'].linkLabel
                                - key: primaryColumns['Caller Name'].computedValue
                                - key: primaryColumns['Caller Name'].linkUrl
                                - key: primaryColumns['Caller Name'].linkLabel
                                - key: primaryColumns.Duration.computedValue
                                - key: primaryColumns.Duration.linkUrl
                                - key: primaryColumns.Duration.linkLabel
                              dynamicTriggerPathList:
                                - key: onRowClicked
                                - key: onSaveChanges
                                - key: onCancelChanges
                              gridColumns: 80
                              height:
                                mode: gridUnit
                                value: 35
                              horizontalAlignment: LEFT
                              isDownloadable: true
                              isFilterable: true
                              isLoading: false
                              isSearchable: true
                              isVisible: true
                              label: Data
                              left:
                                mode: gridUnit
                                value: 0
                              onCancelChanges:
                                - id: ynwdzw4ybb
                                  newWindow: true
                              onRowClicked:
                                - id: y6qgf1u8h0
                                  newWindow: true
                              onSaveChanges:
                                - id: ye4ob0grhp
                                  newWindow: true
                              pageType: NONE
                              parentId: ho0sbhu0r9
                              primaryColumns:
                                Agent Name:
                                  columnType: text
                                  computedValue: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Agent Name'] })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Agent Name
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Agent Name
                                  linkLabel: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Agent Name'] })}}"
                                  linkUrl: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Agent Name'] })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                Call Status:
                                  columnType: text
                                  computedValue: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Call Status'] })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Call Status
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Call Status
                                  linkLabel: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Call Status'] })}}"
                                  linkUrl: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Call Status'] })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                Called At:
                                  columnType: text
                                  computedValue: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Called At'] })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Called At
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Called At
                                  linkLabel: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Called At'] })}}"
                                  linkUrl: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Called At'] })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                Caller Name:
                                  columnType: text
                                  computedValue: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Caller Name'] })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Caller Name
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: Caller Name
                                  linkLabel: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Caller Name'] })}}"
                                  linkUrl: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow['Caller Name'] })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                Duration:
                                  columnType: text
                                  computedValue: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Duration })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Duration
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 4
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Duration
                                  linkLabel: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Duration })}}"
                                  linkUrl: "{{Call_table.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Duration })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              tableData: "{{CTM_Calls.response}}"
                              tableHeader: Touches
                              textSize: PARAGRAPH
                              top:
                                mode: gridUnit
                                value: 35
                              type: TABLE_WIDGET
                              verticalAlignment: CENTER
                              widgetId: w8sqt2p1ic
                              widgetName: Call_table
                              width:
                                mode: gridUnit
                                value: 80
                            - animateLoading: true
                              canExtend: false
                              children:
                                - canExtend: false
                                  children:
                                    - children:
                                        - canExtend: true
                                          children:
                                            - animateLoading: true
                                              collapseWhenHidden: true
                                              dateOutputFormat: YYYY-MM-DD
                                              dynamicBindingPathList:
                                                - key: text
                                              dynamicTriggerPathList: []
                                              gridColumns: 8
                                              height:
                                                mode: gridUnit
                                                value: 3
                                              isLoading: false
                                              isVisible: true
                                              left:
                                                mode: gridUnit
                                                value: 12
                                              parentId: 4f3lpp11g3
                                              text: "RPM Gateway Id: <b>{{currentCell.mx_RPM_Gateway_ID}}</>"
                                              textAlign: LEFT
                                              textStyle: NORMAL_TEXT
                                              textType: text
                                              top:
                                                mode: gridUnit
                                                value: 17
                                              type: TEXT_WIDGET
                                              verticalAlign: AUTO
                                              widgetId: ja4out84ns
                                              widgetName: Text15
                                              width:
                                                mode: gridUnit
                                                value: 8
                                            - animateLoading: true
                                              collapseWhenHidden: true
                                              dateOutputFormat: YYYY-MM-DD
                                              dynamicBindingPathList:
                                                - key: text
                                              dynamicTriggerPathList: []
                                              gridColumns: 5
                                              height:
                                                mode: gridUnit
                                                value: 3
                                              isLoading: false
                                              isVisible: true
                                              left:
                                                mode: gridUnit
                                                value: 1
                                              parentId: 4f3lpp11g3
                                              text: "Gender: <b>{{currentCell.mx_Gender}}</>"
                                              textAlign: LEFT
                                              textStyle: NORMAL_TEXT
                                              textType: text
                                              top:
                                                mode: gridUnit
                                                value: 17
                                              type: TEXT_WIDGET
                                              verticalAlign: AUTO
                                              widgetId: 7u5wntm3o6
                                              widgetName: Text14
                                              width:
                                                mode: gridUnit
                                                value: 5
                                            - animateLoading: true
                                              collapseWhenHidden: true
                                              dateOutputFormat: YYYY-MM-DD
                                              dynamicBindingPathList: []
                                              dynamicTriggerPathList: []
                                              gridColumns: 2
                                              height:
                                                mode: gridUnit
                                                value: 3
                                              isLoading: false
                                              isVisible: true
                                              left:
                                                mode: gridUnit
                                                value: 12
                                              parentId: 4f3lpp11g3
                                              text: "Birthday: "
                                              textAlign: LEFT
                                              textStyle: NORMAL_TEXT
                                              textType: text
                                              top:
                                                mode: gridUnit
                                                value: 9
                                              type: TEXT_WIDGET
                                              verticalAlign: AUTO
                                              widgetId: qbb2w134we
                                              widgetName: Text13
                                              width:
                                                mode: gridUnit
                                                value: 2
                                            - animateLoading: true
                                              collapseWhenHidden: true
                                              dateOutputFormat: YYYY-MM-DD
                                              dynamicBindingPathList:
                                                - key: text
                                              dynamicPropertyPathList: []
                                              dynamicTriggerPathList: []
                                              gridColumns: 3
                                              height:
                                                mode: gridUnit
                                                value: 3
                                              iconPosition: LEFT
                                              isLoading: false
                                              isVisible: true
                                              left:
                                                mode: gridUnit
                                                value: 14
                                              parentId: 4f3lpp11g3
                                              text: "{{currentCell.mx_DOB}}"
                                              textAlign: LEFT
                                              textColor: ""
                                              textStyle: LABEL
                                              textType: date
                                              top:
                                                mode: gridUnit
                                                value: 9
                                              type: TEXT_WIDGET
                                              verticalAlign: AUTO
                                              widgetId: ow9h6zmtkj
                                              widgetName: Text12
                                              width:
                                                mode: gridUnit
                                                value: 3
                                            - animateLoading: true
                                              collapseWhenHidden: true
                                              dynamicBindingPathList:
                                                - key: text
                                              dynamicTriggerPathList: []
                                              gridColumns: 10
                                              height:
                                                mode: gridUnit
                                                value: 3
                                              isLoading: false
                                              isVisible: true
                                              left:
                                                mode: gridUnit
                                                value: 12
                                              parentId: 4f3lpp11g3
                                              text: "Mobile: <b>{{currentCell.Mobile}}</b>"
                                              textAlign: LEFT
                                              textStyle: NORMAL_TEXT
                                              textType: text
                                              top:
                                                mode: gridUnit
                                                value: 13
                                              type: TEXT_WIDGET
                                              verticalAlign: AUTO
                                              widgetId: dfwrv02794
                                              widgetName: Text11
                                              width:
                                                mode: gridUnit
                                                value: 10
                                            - animateLoading: true
                                              collapseWhenHidden: true
                                              dynamicBindingPathList:
                                                - key: text
                                              dynamicTriggerPathList: []
                                              gridColumns: 10
                                              height:
                                                mode: gridUnit
                                                value: 3
                                              isLoading: false
                                              isVisible: true
                                              left:
                                                mode: gridUnit
                                                value: 1
                                              parentId: 4f3lpp11g3
                                              text: "Phone: <b>{{currentCell.Phone}}</b>"
                                              textAlign: LEFT
                                              textStyle: NORMAL_TEXT
                                              textType: text
                                              top:
                                                mode: gridUnit
                                                value: 13
                                              type: TEXT_WIDGET
                                              verticalAlign: AUTO
                                              widgetId: 0i7e9xkp1z
                                              widgetName: Text10
                                              width:
                                                mode: gridUnit
                                                value: 10
                                            - animateLoading: true
                                              collapseWhenHidden: true
                                              dynamicBindingPathList:
                                                - key: text
                                              dynamicTriggerPathList: []
                                              gridColumns: 10
                                              height:
                                                mode: gridUnit
                                                value: 3
                                              isLoading: false
                                              isVisible: true
                                              left:
                                                mode: gridUnit
                                                value: 1
                                              parentId: 4f3lpp11g3
                                              text: "Email: <b>{{currentCell.EmailAddress}}</b>"
                                              textAlign: LEFT
                                              textStyle: NORMAL_TEXT
                                              textType: text
                                              top:
                                                mode: gridUnit
                                                value: 9
                                              type: TEXT_WIDGET
                                              verticalAlign: AUTO
                                              widgetId: 2dts7qoiuw
                                              widgetName: Text9
                                              width:
                                                mode: gridUnit
                                                value: 10
                                            - animateLoading: true
                                              collapseWhenHidden: true
                                              dynamicBindingPathList:
                                                - key: text
                                              dynamicTriggerPathList: []
                                              gridColumns: 10
                                              height:
                                                mode: gridUnit
                                                value: 3
                                              isLoading: false
                                              isVisible: true
                                              left:
                                                mode: gridUnit
                                                value: 1
                                              parentId: 4f3lpp11g3
                                              text: Address:<b> {{currentCell.mx_Street1}}</b>
                                              textAlign: LEFT
                                              textStyle: NORMAL_TEXT
                                              textType: text
                                              top:
                                                mode: gridUnit
                                                value: 5
                                              type: TEXT_WIDGET
                                              verticalAlign: AUTO
                                              widgetId: fzzy72aulx
                                              widgetName: Text8
                                              width:
                                                mode: gridUnit
                                                value: 10
                                            - animateLoading: true
                                              collapseWhenHidden: true
                                              dynamicBindingPathList:
                                                - key: text
                                              dynamicTriggerPathList: []
                                              gridColumns: 7
                                              height:
                                                mode: gridUnit
                                                value: 3
                                              isLoading: false
                                              isVisible: true
                                              left:
                                                mode: gridUnit
                                                value: 12
                                              parentId: 4f3lpp11g3
                                              text: "Last: <b>{{currentCell.LastName}}</b>"
                                              textAlign: LEFT
                                              textStyle: NORMAL_TEXT
                                              textType: text
                                              top:
                                                mode: gridUnit
                                                value: 1
                                              type: TEXT_WIDGET
                                              verticalAlign: AUTO
                                              widgetId: s1i1pq54r0
                                              widgetName: Text7
                                              width:
                                                mode: gridUnit
                                                value: 7
                                            - animateLoading: true
                                              collapseWhenHidden: true
                                              dynamicBindingPathList:
                                                - key: text
                                              dynamicTriggerPathList: []
                                              gridColumns: 6
                                              height:
                                                mode: gridUnit
                                                value: 3
                                              isLoading: false
                                              isVisible: true
                                              left:
                                                mode: gridUnit
                                                value: 1
                                              parentId: 4f3lpp11g3
                                              text: "First: <b>{{currentCell.FirstName}}</b>"
                                              textAlign: LEFT
                                              textStyle: NORMAL_TEXT
                                              textType: text
                                              top:
                                                mode: gridUnit
                                                value: 1
                                              type: TEXT_WIDGET
                                              verticalAlign: AUTO
                                              widgetId: oh9sbhewf8
                                              widgetName: Text6
                                              width:
                                                mode: gridUnit
                                                value: 6
                                          collapseWhenHidden: true
                                          containerStyle: none
                                          detachFromLayout: true
                                          disablePropertyPane: true
                                          dragDisabled: true
                                          gridColumns: 27
                                          height:
                                            mode: gridUnit
                                            value: 20
                                          ignoreCollision: true
                                          isLoading: false
                                          isVisible: true
                                          left:
                                            mode: gridUnit
                                            value: 0
                                          openParentPropertyPane: true
                                          parentId: wije1kx6mb
                                          resizeDisabled: true
                                          top:
                                            mode: gridUnit
                                            value: 0
                                          type: CANVAS_WIDGET
                                          widgetId: 4f3lpp11g3
                                          widgetName: Canvas7
                                          width:
                                            mode: gridUnit
                                            value: 27
                                      collapseWhenHidden: true
                                      containerStyle: none
                                      disablePropertyPane: true
                                      disallowCopy: true
                                      dragDisabled: true
                                      gridColumns: 27
                                      height:
                                        mode: gridUnit
                                        value: 24
                                      isDeletable: false
                                      isLoading: false
                                      isVisible: true
                                      left:
                                        mode: gridUnit
                                        value: 0
                                      openParentPropertyPane: true
                                      padding:
                                        bottom:
                                          mode: px
                                          value: 0
                                        left:
                                          mode: px
                                          value: 0
                                        right:
                                          mode: px
                                          value: 0
                                        top:
                                          mode: px
                                          value: 0
                                      parentId: ct9wl42cvf
                                      resizeDisabled: false
                                      shouldScrollContents: true
                                      top:
                                        mode: gridUnit
                                        value: 0
                                      type: CONTAINER_WIDGET
                                      widgetId: wije1kx6mb
                                      widgetName: Container1
                                      width:
                                        mode: gridUnit
                                        value: 27
                                  collapseWhenHidden: true
                                  containerStyle: none
                                  detachFromLayout: true
                                  disablePropertyPane: true
                                  dropDisabled: true
                                  gridColumns: 80
                                  height:
                                    mode: gridUnit
                                    value: 31
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 0
                                  openParentPropertyPane: true
                                  padding:
                                    bottom:
                                      mode: px
                                      value: 0
                                    left:
                                      mode: px
                                      value: 0
                                    right:
                                      mode: px
                                      value: 0
                                    top:
                                      mode: px
                                      value: 0
                                  parentId: tu2ck6i3me
                                  resizeDisabled: true
                                  top:
                                    mode: gridUnit
                                    value: 0
                                  type: CANVAS_WIDGET
                                  widgetId: ct9wl42cvf
                                  widgetName: Canvas6
                                  width:
                                    mode: gridUnit
                                    value: 80
                              collapseWhenHidden: true
                              columnCount: 1
                              containerStyle: none
                              dynamicBindingPathList:
                                - key: gridData
                                - key: gridBindings.Text6.textStyle
                                - key: gridBindings.Text12.textType
                                - key: gridBindings.Text13.text
                                - key: gridBindings.Text13.textType
                                - key: gridBindings.Text12.iconPosition
                                - key: gridBindings.Text12.dateOutputFormat
                                - key: gridBindings.Text12.textStyle
                                - key: gridBindings.Text15.text
                                - key: gridBindings.Text6.text
                                - key: gridBindings.Text7.text
                                - key: gridBindings.Text8.text
                                - key: gridBindings.Text9.text
                                - key: gridBindings.Text12.text
                                - key: gridBindings.Text10.text
                                - key: gridBindings.Text14.text
                                - key: gridBindings.Text11.text
                                - key: gridBindings.Text15.text
                                - key: gridBindings.Text14.text
                                - key: gridBindings.Text12.text
                                - key: gridBindings.Text11.text
                                - key: gridBindings.Text10.text
                                - key: gridBindings.Text9.text
                                - key: gridBindings.Text8.text
                                - key: gridBindings.Text7.text
                                - key: gridBindings.Text6.text
                              dynamicTriggerPathList:
                                - key: onCellClicked
                              enhancements: true
                              gridBindings:
                                Canvas6:
                                  canExtend: false
                                  children:
                                    - wije1kx6mb
                                  collapseWhenHidden: true
                                  containerStyle: none
                                  detachFromLayout: true
                                  disablePropertyPane: true
                                  dropDisabled: true
                                  gridColumns: 80
                                  height:
                                    mode: gridUnit
                                    value: 31
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 0
                                  openParentPropertyPane: true
                                  padding:
                                    bottom:
                                      mode: px
                                      value: 0
                                    left:
                                      mode: px
                                      value: 0
                                    right:
                                      mode: px
                                      value: 0
                                    top:
                                      mode: px
                                      value: 0
                                  parentId: tu2ck6i3me
                                  resizeDisabled: true
                                  top:
                                    mode: gridUnit
                                    value: 0
                                  type: CANVAS_WIDGET
                                  widgetId: ct9wl42cvf
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Canvas6
                                  width:
                                    mode: gridUnit
                                    value: 80
                                Canvas7:
                                  canExtend: true
                                  children:
                                    - ja4out84ns
                                    - 7u5wntm3o6
                                    - qbb2w134we
                                    - ow9h6zmtkj
                                    - dfwrv02794
                                    - 0i7e9xkp1z
                                    - 2dts7qoiuw
                                    - fzzy72aulx
                                    - s1i1pq54r0
                                    - oh9sbhewf8
                                  collapseWhenHidden: true
                                  containerStyle: none
                                  detachFromLayout: true
                                  disablePropertyPane: true
                                  dragDisabled: true
                                  gridColumns: 27
                                  height:
                                    mode: gridUnit
                                    value: 20
                                  ignoreCollision: true
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 0
                                  openParentPropertyPane: true
                                  parentId: wije1kx6mb
                                  resizeDisabled: true
                                  top:
                                    mode: gridUnit
                                    value: 0
                                  type: CANVAS_WIDGET
                                  widgetId: 4f3lpp11g3
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Canvas7
                                  width:
                                    mode: gridUnit
                                    value: 27
                                Container1:
                                  children:
                                    - 4f3lpp11g3
                                  collapseWhenHidden: true
                                  containerStyle: none
                                  disablePropertyPane: true
                                  disallowCopy: true
                                  dragDisabled: true
                                  gridColumns: 27
                                  height:
                                    mode: gridUnit
                                    value: 24
                                  isDeletable: false
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 0
                                  openParentPropertyPane: true
                                  padding:
                                    bottom:
                                      mode: px
                                      value: 0
                                    left:
                                      mode: px
                                      value: 0
                                    right:
                                      mode: px
                                      value: 0
                                    top:
                                      mode: px
                                      value: 0
                                  parentId: ct9wl42cvf
                                  resizeDisabled: false
                                  shouldScrollContents: true
                                  top:
                                    mode: gridUnit
                                    value: 0
                                  type: CONTAINER_WIDGET
                                  widgetId: wije1kx6mb
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Container1
                                  width:
                                    mode: gridUnit
                                    value: 27
                                Text10:
                                  animateLoading: true
                                  collapseWhenHidden: true
                                  dynamicBindingPathList:
                                    - key: text
                                  dynamicTriggerPathList: []
                                  gridColumns: 10
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 1
                                  parentId: 4f3lpp11g3
                                  text: "{{Grid1.gridData.map((currentCell) => 'Phone: <b>' + currentCell.Phone +
                                    '</b>')}}"
                                  textAlign: LEFT
                                  textStyle: NORMAL_TEXT
                                  textType: text
                                  top:
                                    mode: gridUnit
                                    value: 13
                                  type: TEXT_WIDGET
                                  verticalAlign: AUTO
                                  widgetId: 0i7e9xkp1z
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Text10
                                  width:
                                    mode: gridUnit
                                    value: 10
                                Text11:
                                  animateLoading: true
                                  collapseWhenHidden: true
                                  dynamicBindingPathList:
                                    - key: text
                                  dynamicTriggerPathList: []
                                  gridColumns: 10
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 12
                                  parentId: 4f3lpp11g3
                                  text: "{{Grid1.gridData.map((currentCell) => 'Mobile: <b>' + currentCell.Mobile
                                    + '</b>')}}"
                                  textAlign: LEFT
                                  textStyle: NORMAL_TEXT
                                  textType: text
                                  top:
                                    mode: gridUnit
                                    value: 13
                                  type: TEXT_WIDGET
                                  verticalAlign: AUTO
                                  widgetId: dfwrv02794
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Text11
                                  width:
                                    mode: gridUnit
                                    value: 10
                                Text12:
                                  animateLoading: true
                                  collapseWhenHidden: true
                                  dateOutputFormat: YYYY-MM-DD
                                  dynamicBindingPathList:
                                    - key: text
                                  dynamicPropertyPathList: []
                                  dynamicTriggerPathList: []
                                  gridColumns: 3
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  iconPosition: LEFT
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 14
                                  parentId: 4f3lpp11g3
                                  text: "{{Grid1.gridData.map((currentCell) => currentCell.mx_DOB)}}"
                                  textAlign: LEFT
                                  textColor: ""
                                  textStyle: LABEL
                                  textType: date
                                  top:
                                    mode: gridUnit
                                    value: 9
                                  type: TEXT_WIDGET
                                  verticalAlign: AUTO
                                  widgetId: ow9h6zmtkj
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Text12
                                  width:
                                    mode: gridUnit
                                    value: 3
                                Text13:
                                  animateLoading: true
                                  collapseWhenHidden: true
                                  dateOutputFormat: YYYY-MM-DD
                                  dynamicBindingPathList: []
                                  dynamicTriggerPathList: []
                                  gridColumns: 2
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 12
                                  parentId: 4f3lpp11g3
                                  text: "Birthday:"
                                  textAlign: LEFT
                                  textStyle: NORMAL_TEXT
                                  textType: text
                                  top:
                                    mode: gridUnit
                                    value: 9
                                  type: TEXT_WIDGET
                                  verticalAlign: AUTO
                                  widgetId: qbb2w134we
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Text13
                                  width:
                                    mode: gridUnit
                                    value: 2
                                Text14:
                                  animateLoading: true
                                  collapseWhenHidden: true
                                  dateOutputFormat: YYYY-MM-DD
                                  dynamicBindingPathList:
                                    - key: text
                                  dynamicTriggerPathList: []
                                  gridColumns: 5
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 1
                                  parentId: 4f3lpp11g3
                                  text: "{{Grid1.gridData.map((currentCell) => 'Gender: <b>' +
                                    currentCell.mx_Gender + '</>')}}"
                                  textAlign: LEFT
                                  textStyle: NORMAL_TEXT
                                  textType: text
                                  top:
                                    mode: gridUnit
                                    value: 17
                                  type: TEXT_WIDGET
                                  verticalAlign: AUTO
                                  widgetId: 7u5wntm3o6
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Text14
                                  width:
                                    mode: gridUnit
                                    value: 5
                                Text15:
                                  animateLoading: true
                                  collapseWhenHidden: true
                                  dateOutputFormat: YYYY-MM-DD
                                  dynamicBindingPathList:
                                    - key: text
                                  dynamicTriggerPathList: []
                                  gridColumns: 8
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 12
                                  parentId: 4f3lpp11g3
                                  text: "{{Grid1.gridData.map((currentCell) => 'RPM Gateway Id: <b>' +
                                    currentCell.mx_RPM_Gateway_ID + '</>')}}"
                                  textAlign: LEFT
                                  textStyle: NORMAL_TEXT
                                  textType: text
                                  top:
                                    mode: gridUnit
                                    value: 17
                                  type: TEXT_WIDGET
                                  verticalAlign: AUTO
                                  widgetId: ja4out84ns
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Text15
                                  width:
                                    mode: gridUnit
                                    value: 8
                                Text6:
                                  animateLoading: true
                                  collapseWhenHidden: true
                                  dynamicBindingPathList:
                                    - key: text
                                  dynamicTriggerPathList: []
                                  gridColumns: 6
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 1
                                  parentId: 4f3lpp11g3
                                  text: "{{Grid1.gridData.map((currentCell) => 'First: <b>' +
                                    currentCell.FirstName + '</b>')}}"
                                  textAlign: LEFT
                                  textStyle: NORMAL_TEXT
                                  textType: text
                                  top:
                                    mode: gridUnit
                                    value: 1
                                  type: TEXT_WIDGET
                                  verticalAlign: AUTO
                                  widgetId: oh9sbhewf8
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Text6
                                  width:
                                    mode: gridUnit
                                    value: 6
                                Text7:
                                  animateLoading: true
                                  collapseWhenHidden: true
                                  dynamicBindingPathList:
                                    - key: text
                                  dynamicTriggerPathList: []
                                  gridColumns: 7
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 12
                                  parentId: 4f3lpp11g3
                                  text: "{{Grid1.gridData.map((currentCell) => 'Last: <b>' + currentCell.LastName
                                    + '</b>')}}"
                                  textAlign: LEFT
                                  textStyle: NORMAL_TEXT
                                  textType: text
                                  top:
                                    mode: gridUnit
                                    value: 1
                                  type: TEXT_WIDGET
                                  verticalAlign: AUTO
                                  widgetId: s1i1pq54r0
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Text7
                                  width:
                                    mode: gridUnit
                                    value: 7
                                Text8:
                                  animateLoading: true
                                  collapseWhenHidden: true
                                  dynamicBindingPathList:
                                    - key: text
                                  dynamicTriggerPathList: []
                                  gridColumns: 10
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 1
                                  parentId: 4f3lpp11g3
                                  text: "{{Grid1.gridData.map((currentCell) => 'Address:<b> ' +
                                    currentCell.mx_Street1 + '</b>')}}"
                                  textAlign: LEFT
                                  textStyle: NORMAL_TEXT
                                  textType: text
                                  top:
                                    mode: gridUnit
                                    value: 5
                                  type: TEXT_WIDGET
                                  verticalAlign: AUTO
                                  widgetId: fzzy72aulx
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Text8
                                  width:
                                    mode: gridUnit
                                    value: 10
                                Text9:
                                  animateLoading: true
                                  collapseWhenHidden: true
                                  dynamicBindingPathList:
                                    - key: text
                                  dynamicTriggerPathList: []
                                  gridColumns: 10
                                  height:
                                    mode: gridUnit
                                    value: 3
                                  isLoading: false
                                  isVisible: true
                                  left:
                                    mode: gridUnit
                                    value: 1
                                  parentId: 4f3lpp11g3
                                  text: "{{Grid1.gridData.map((currentCell) => 'Email: <b>' +
                                    currentCell.EmailAddress + '</b>')}}"
                                  textAlign: LEFT
                                  textStyle: NORMAL_TEXT
                                  textType: text
                                  top:
                                    mode: gridUnit
                                    value: 9
                                  type: TEXT_WIDGET
                                  verticalAlign: AUTO
                                  widgetId: 2dts7qoiuw
                                  widgetLastChange: 2024-04-22T09:33:16.659Z
                                  widgetName: Text9
                                  width:
                                    mode: gridUnit
                                    value: 10
                              gridCellScrollable: false
                              gridColumns: 80
                              gridData: "{{getDetailFromLSQ.response ? getDetailFromLSQ.response : []}}"
                              height:
                                mode: gridUnit
                                value: 31
                              isLoading: false
                              isSearchable: false
                              isVisible: true
                              left:
                                mode: gridUnit
                                value: 0
                              onCellClicked:
                                - id: xjq57nhfzq
                                  newWindow: true
                              parentId: ho0sbhu0r9
                              title: Patient Member Information
                              top:
                                mode: gridUnit
                                value: 3
                              type: GRID_WIDGET
                              widgetId: tu2ck6i3me
                              widgetName: Grid1
                              width:
                                mode: gridUnit
                                value: 80
                          collapseWhenHidden: false
                          detachFromLayout: true
                          dynamicBindingPathList: []
                          dynamicTriggerPathList: []
                          gridColumns: 80
                          height:
                            mode: gridUnit
                            value: 70
                          isLoading: false
                          isVisible: true
                          left:
                            mode: gridUnit
                            value: 0
                          parentColumnSpace: 14.6
                          parentId: okw62rdr5g
                          parentRowSpace: 1
                          tabId: tab1
                          tabName: Tab 1
                          top:
                            mode: gridUnit
                            value: 0
                          type: CANVAS_WIDGET
                          widgetId: ho0sbhu0r9
                          widgetName: Canvas8
                          width:
                            mode: gridUnit
                            value: 80
                        - appMode: EDIT
                          canExtend: true
                          children:
                            - animateLoading: true
                              appMode: EDIT
                              chartData: "{{getBloodPressureList.response}}"
                              chartDefinition: plotly
                              chartType: SCATTER_CHART
                              collapseWhenHidden: true
                              columnInfo:
                                - canBeNumeric: true
                                  name: Diastolic
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_DOB
                                  type: date
                                - canBeNumeric: false
                                  name: PATIENT_FIRST_NAME
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_INDIVIDUAL_ID
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_LAST_NAME
                                  type: string
                                - canBeNumeric: false
                                  name: READING_DEVICE_AND_TYPE
                                  type: string
                                - canBeNumeric: false
                                  name: READING_ID
                                  type: date
                                - canBeNumeric: false
                                  name: READING_SOURCE
                                  type: string
                                - canBeNumeric: false
                                  name: READING_TIME
                                  type: date
                                - canBeNumeric: false
                                  name: READING_TYPE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE_1
                                  type: number
                                - canBeNumeric: true
                                  name: READING_VALUE_2
                                  type: number
                                - canBeNumeric: true
                                  name: Systolic
                                  type: string
                              dynamicBindingPathList:
                                - key: chartData
                                - key: plotlyChartJson
                              dynamicPropertyPathList: []
                              dynamicTriggerPathList:
                                - key: onSelectData
                              gridColumns: 40
                              groupBy:
                                field: ""
                              headerTitle: ""
                              height:
                                mode: gridUnit
                                value: 30
                              isLoading: false
                              isVisible: true
                              left:
                                mode: gridUnit
                                value: 40
                              onSelectData:
                                - id: u8vrhaa2a3
                                  newWindow: true
                              parentId: 8yskkzfui3
                              plotlyChartJson: "{{getBloodPressureDiastolicPlotly.response}}"
                              plotlyChartLayout: ""
                              size:
                                field: ""
                              top:
                                mode: gridUnit
                                value: 43
                              type: CHART_WIDGET
                              widgetId: 6owequjmxz
                              widgetName: Chart7
                              width:
                                mode: gridUnit
                                value: 40
                              x:
                                axisTitle: ""
                                dataType: temporal
                                field: READING_TIME
                                timeUnit: yearmonthdate
                              y:
                                axisTitle: ""
                                dataType: number
                                notation: standard
                                series:
                                  - field: Diastolic
                                  - field: Systolic
                            - animateLoading: true
                              appMode: EDIT
                              cachedColumnSettings:
                                action:
                                  buttonLabel: Approve
                                  columnType: button
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: action
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: action
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  notation: standard
                                  onClick:
                                    - code: showAlert(currentRow.name + ' is approved!', 'success')
                                      id: id0
                                      newWindow: true
                                      type: runJs
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                date_joined:
                                  columnType: date
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: date_joined
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  inputFormat: YYYY-MM-DD
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: date joined
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                photo:
                                  columnType: image
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: photo
                                  imageBorderRadius:
                                    mode: "%"
                                    value: 50
                                  imageSize: FIXED
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: photo
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                twitter:
                                  columnType: link
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: twitter
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: twitter
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return '@' +
                                    currentRow.twitter?.split('/').pop()})}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              collapseWhenHidden: true
                              columnOrder:
                                - READING_TIME
                                - READING_SOURCE
                                - READING_VALUE
                                - READING_DEVICE_AND_TYPE
                                - PATIENT_DOB
                                - PATIENT_FIRST_NAME
                                - PATIENT_INDIVIDUAL_ID
                                - PATIENT_LAST_NAME
                                - READING_ID
                                - READING_TYPE
                                - Diastolic
                                - READING_VALUE_1
                                - Systolic
                                - READING_VALUE_2
                              columnSizeMap:
                                Diastolic: 79
                                READING_SOURCE: 106
                                READING_TIME: 158.58076923076925
                              compactMode: SHORT
                              configuredPageSize: 10
                              defaultFilters: "{}"
                              defaultSelectedRow: "0"
                              defaultSort:
                                column: READING_TIME
                              derivedColumns: {}
                              dynamicBindingPathList:
                                - key: tableData
                                - key: primaryColumns.PATIENT_DOB.computedValue
                                - key: primaryColumns.PATIENT_DOB.linkUrl
                                - key: primaryColumns.PATIENT_DOB.linkLabel
                                - key: primaryColumns.PATIENT_FIRST_NAME.computedValue
                                - key: primaryColumns.PATIENT_FIRST_NAME.linkUrl
                                - key: primaryColumns.PATIENT_FIRST_NAME.linkLabel
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.computedValue
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkUrl
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkLabel
                                - key: primaryColumns.PATIENT_LAST_NAME.computedValue
                                - key: primaryColumns.PATIENT_LAST_NAME.linkUrl
                                - key: primaryColumns.PATIENT_LAST_NAME.linkLabel
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.computedValue
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.linkUrl
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.linkLabel
                                - key: primaryColumns.READING_ID.computedValue
                                - key: primaryColumns.READING_ID.linkUrl
                                - key: primaryColumns.READING_ID.linkLabel
                                - key: primaryColumns.READING_SOURCE.computedValue
                                - key: primaryColumns.READING_SOURCE.linkUrl
                                - key: primaryColumns.READING_SOURCE.linkLabel
                                - key: primaryColumns.READING_TIME.computedValue
                                - key: primaryColumns.READING_TIME.linkUrl
                                - key: primaryColumns.READING_TIME.linkLabel
                                - key: primaryColumns.READING_TYPE.computedValue
                                - key: primaryColumns.READING_TYPE.linkUrl
                                - key: primaryColumns.READING_TYPE.linkLabel
                                - key: primaryColumns.READING_VALUE.computedValue
                                - key: primaryColumns.READING_VALUE.linkUrl
                                - key: primaryColumns.READING_VALUE.linkLabel
                                - key: primaryColumns.Diastolic.computedValue
                                - key: primaryColumns.Diastolic.linkUrl
                                - key: primaryColumns.Diastolic.linkLabel
                                - key: primaryColumns.Systolic.computedValue
                                - key: primaryColumns.Systolic.linkUrl
                                - key: primaryColumns.Systolic.linkLabel
                                - key: primaryColumns.READING_VALUE_1.computedValue
                                - key: primaryColumns.READING_VALUE_1.linkUrl
                                - key: primaryColumns.READING_VALUE_1.linkLabel
                                - key: primaryColumns.READING_VALUE_2.computedValue
                                - key: primaryColumns.READING_VALUE_2.linkUrl
                                - key: primaryColumns.READING_VALUE_2.linkLabel
                              dynamicTriggerPathList:
                                - key: onRowClicked
                                - key: onSaveChanges
                                - key: onCancelChanges
                              gridColumns: 80
                              height:
                                mode: gridUnit
                                value: 42
                              horizontalAlignment: LEFT
                              isDownloadable: true
                              isFilterable: true
                              isLoading: false
                              isSearchable: true
                              isVisible: true
                              label: Data
                              left:
                                mode: gridUnit
                                value: 0
                              onCancelChanges:
                                - id: 6wgibaz5wn
                                  newWindow: true
                              onRowClicked:
                                - id: uogiv4m5gj
                                  newWindow: true
                              onSaveChanges:
                                - id: x34sgmr01x
                                  newWindow: true
                              pageType: NONE
                              parentId: 8yskkzfui3
                              primaryColumns:
                                Diastolic:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Diastolic
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Diastolic(mmHG)
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_DOB:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_DOB
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_DOB
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_FIRST_NAME:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_FIRST_NAME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_FIRST_NAME
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_INDIVIDUAL_ID:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_INDIVIDUAL_ID
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_INDIVIDUAL_ID
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_LAST_NAME:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_LAST_NAME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_LAST_NAME
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_DEVICE_AND_TYPE:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_DEVICE_AND_TYPE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 4
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_DEVICE_AND_TYPE
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_ID:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_ID
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_ID
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_SOURCE:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_SOURCE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 6
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: SOURCE
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_TIME:
                                  columnType: date
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_TIME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 7
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: DATE & TIME
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY HH:mm:ss
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_TYPE:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_TYPE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 8
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_TYPE
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 9
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_VALUE
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE_1:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE_1
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 11
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_VALUE_1
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE_2:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE_2
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 12
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_VALUE_2
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                Systolic:
                                  columnType: text
                                  computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Systolic
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 11
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Systolic(mmHG)
                                  linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              tableData: "{{getBloodPressureList.response}}"
                              tableHeader: Blood Pressure
                              textSize: PARAGRAPH
                              top:
                                mode: gridUnit
                                value: 0
                              type: TABLE_WIDGET
                              verticalAlignment: CENTER
                              widgetId: xhnq873xml
                              widgetName: Table2
                              width:
                                mode: gridUnit
                                value: 80
                            - animateLoading: true
                              appMode: EDIT
                              chartData: "{{getBloodPressureList.response}}"
                              chartDefinition: plotly
                              chartType: SCATTER_CHART
                              collapseWhenHidden: true
                              columnInfo:
                                - canBeNumeric: true
                                  name: Diastolic
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_DOB
                                  type: date
                                - canBeNumeric: false
                                  name: PATIENT_FIRST_NAME
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_INDIVIDUAL_ID
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_LAST_NAME
                                  type: string
                                - canBeNumeric: false
                                  name: READING_DEVICE_AND_TYPE
                                  type: string
                                - canBeNumeric: false
                                  name: READING_ID
                                  type: date
                                - canBeNumeric: false
                                  name: READING_SOURCE
                                  type: string
                                - canBeNumeric: false
                                  name: READING_TIME
                                  type: date
                                - canBeNumeric: false
                                  name: READING_TYPE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE_1
                                  type: number
                                - canBeNumeric: true
                                  name: READING_VALUE_2
                                  type: number
                                - canBeNumeric: true
                                  name: Systolic
                                  type: string
                              dynamicBindingPathList:
                                - key: chartData
                                - key: plotlyChartJson
                              dynamicPropertyPathList: []
                              dynamicTriggerPathList:
                                - key: onSelectData
                              gridColumns: 39
                              groupBy:
                                field: ""
                              headerTitle: ""
                              height:
                                mode: gridUnit
                                value: 30
                              isLoading: false
                              isVisible: true
                              left:
                                mode: gridUnit
                                value: 0
                              onSelectData:
                                - id: u8vrhaa2a3
                                  newWindow: true
                              parentId: 8yskkzfui3
                              plotlyChartJson: "{{getBloodPressureSystolicPlotly.response}}"
                              plotlyChartLayout: ""
                              size:
                                field: ""
                              top:
                                mode: gridUnit
                                value: 43
                              type: CHART_WIDGET
                              widgetId: 6a95cme84z
                              widgetName: Chart2
                              width:
                                mode: gridUnit
                                value: 39
                              x:
                                axisTitle: ""
                                dataType: temporal
                                field: READING_TIME
                                timeUnit: yearmonthdate
                              y:
                                axisTitle: ""
                                dataType: number
                                notation: standard
                                series:
                                  - field: Diastolic
                                  - field: Systolic
                          collapseWhenHidden: false
                          detachFromLayout: true
                          dynamicBindingPathList: []
                          dynamicTriggerPathList: []
                          gridColumns: 80
                          height:
                            mode: gridUnit
                            value: 73
                          isLoading: false
                          isVisible: true
                          left:
                            mode: gridUnit
                            value: 0
                          parentColumnSpace: 14.6
                          parentId: okw62rdr5g
                          parentRowSpace: 1
                          tabId: tab2
                          tabName: Tab 2
                          top:
                            mode: gridUnit
                            value: 0
                          type: CANVAS_WIDGET
                          widgetId: 8yskkzfui3
                          widgetName: Canvas9
                          width:
                            mode: gridUnit
                            value: 80
                        - appMode: EDIT
                          canExtend: true
                          children:
                            - animateLoading: true
                              appMode: EDIT
                              chartData: "{{getOxygenSaturationList.response}}"
                              chartDefinition: ui
                              chartType: SCATTER_CHART
                              collapseWhenHidden: true
                              columnInfo:
                                - canBeNumeric: false
                                  name: PATIENT_DOB
                                  type: date
                                - canBeNumeric: false
                                  name: PATIENT_FIRST_NAME
                                  type: string
                                - canBeNumeric: true
                                  name: PATIENT_INDIVIDUAL_ID
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_LAST_NAME
                                  type: string
                                - canBeNumeric: false
                                  name: READING_DEVICE_AND_TYPE
                                  type: string
                                - name: READING_ID
                                - canBeNumeric: false
                                  name: READING_SOURCE
                                  type: string
                                - canBeNumeric: false
                                  name: READING_TIME
                                  type: date
                                - canBeNumeric: false
                                  name: READING_TYPE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE_1
                                  type: number
                                - canBeNumeric: true
                                  name: READING_VALUE_2
                                  type: number
                              dynamicBindingPathList:
                                - key: chartData
                              dynamicPropertyPathList: []
                              dynamicTriggerPathList:
                                - key: onSelectData
                              gridColumns: 80
                              groupBy:
                                field: ""
                              headerTitle: ""
                              height:
                                mode: gridUnit
                                value: 30
                              isLoading: false
                              isVisible: true
                              left:
                                mode: gridUnit
                                value: 0
                              onSelectData:
                                - id: u8vrhaa2a3
                                  newWindow: true
                              parentId: s0jsqlsyr6
                              plotlyChartJson:
                                data:
                                  - type: bar
                                    x:
                                      - 1
                                      - 2
                                      - 3
                                    y:
                                      - 2
                                      - 5
                                      - 3
                                layout: {}
                              size:
                                field: ""
                              top:
                                mode: gridUnit
                                value: 46
                              type: CHART_WIDGET
                              widgetId: 28yreh6a1c
                              widgetName: Chart3
                              width:
                                mode: gridUnit
                                value: 80
                              x:
                                axisTitle: ""
                                dataType: temporal
                                field: READING_TIME
                              y:
                                axisTitle: ""
                                dataType: number
                                maximumFractionDigits: ""
                                notation: standard
                                series:
                                  - field: READING_VALUE
                                  - field: Systolic
                            - animateLoading: true
                              appMode: EDIT
                              cachedColumnSettings:
                                Diastolic:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Diastolic
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Diastolic(mmHG)
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                Systolic:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Systolic
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 11
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Systolic(mmHG)
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                action:
                                  buttonLabel: Approve
                                  columnType: button
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: action
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: action
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  notation: standard
                                  onClick:
                                    - code: showAlert(currentRow.name + ' is approved!', 'success')
                                      id: id0
                                      newWindow: true
                                      type: runJs
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                date_joined:
                                  columnType: date
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: date_joined
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  inputFormat: YYYY-MM-DD
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: date joined
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                photo:
                                  columnType: image
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: photo
                                  imageBorderRadius:
                                    mode: "%"
                                    value: 50
                                  imageSize: FIXED
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: photo
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                twitter:
                                  columnType: link
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: twitter
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: twitter
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return '@' +
                                    currentRow.twitter?.split('/').pop()})}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              collapseWhenHidden: true
                              columnOrder:
                                - READING_TIME
                                - READING_VALUE
                                - READING_SOURCE
                                - READING_DEVICE_AND_TYPE
                                - PATIENT_DOB
                                - PATIENT_FIRST_NAME
                                - PATIENT_INDIVIDUAL_ID
                                - PATIENT_LAST_NAME
                                - READING_ID
                                - READING_TYPE
                                - READING_VALUE_1
                                - READING_VALUE_2
                              columnSizeMap:
                                Diastolic: 79
                                READING_SOURCE: 106
                                READING_TIME: 158.58076923076925
                              compactMode: SHORT
                              configuredPageSize: 10
                              defaultFilters: "{}"
                              defaultSelectedRow: "0"
                              defaultSort:
                                column: READING_TIME
                              derivedColumns: {}
                              dynamicBindingPathList:
                                - key: primaryColumns.PATIENT_DOB.computedValue
                                - key: primaryColumns.PATIENT_DOB.linkUrl
                                - key: primaryColumns.PATIENT_DOB.linkLabel
                                - key: primaryColumns.PATIENT_FIRST_NAME.computedValue
                                - key: primaryColumns.PATIENT_FIRST_NAME.linkUrl
                                - key: primaryColumns.PATIENT_FIRST_NAME.linkLabel
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.computedValue
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkUrl
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkLabel
                                - key: primaryColumns.PATIENT_LAST_NAME.computedValue
                                - key: primaryColumns.PATIENT_LAST_NAME.linkUrl
                                - key: primaryColumns.PATIENT_LAST_NAME.linkLabel
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.computedValue
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.linkUrl
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.linkLabel
                                - key: primaryColumns.READING_ID.computedValue
                                - key: primaryColumns.READING_ID.linkUrl
                                - key: primaryColumns.READING_ID.linkLabel
                                - key: primaryColumns.READING_SOURCE.computedValue
                                - key: primaryColumns.READING_SOURCE.linkUrl
                                - key: primaryColumns.READING_SOURCE.linkLabel
                                - key: primaryColumns.READING_TIME.computedValue
                                - key: primaryColumns.READING_TIME.linkUrl
                                - key: primaryColumns.READING_TIME.linkLabel
                                - key: primaryColumns.READING_TYPE.computedValue
                                - key: primaryColumns.READING_TYPE.linkUrl
                                - key: primaryColumns.READING_TYPE.linkLabel
                                - key: primaryColumns.READING_VALUE.computedValue
                                - key: primaryColumns.READING_VALUE.linkUrl
                                - key: primaryColumns.READING_VALUE.linkLabel
                                - key: tableData
                                - key: primaryColumns.READING_VALUE_1.computedValue
                                - key: primaryColumns.READING_VALUE_1.linkUrl
                                - key: primaryColumns.READING_VALUE_1.linkLabel
                                - key: primaryColumns.READING_VALUE_2.computedValue
                                - key: primaryColumns.READING_VALUE_2.linkUrl
                                - key: primaryColumns.READING_VALUE_2.linkLabel
                              dynamicTriggerPathList:
                                - key: onRowClicked
                                - key: onSaveChanges
                                - key: onCancelChanges
                              gridColumns: 80
                              height:
                                mode: gridUnit
                                value: 45
                              horizontalAlignment: LEFT
                              isDownloadable: true
                              isFilterable: true
                              isLoading: false
                              isSearchable: true
                              isVisible: true
                              label: Data
                              left:
                                mode: gridUnit
                                value: 0
                              onCancelChanges:
                                - id: 6wgibaz5wn
                                  newWindow: true
                              onRowClicked:
                                - id: uogiv4m5gj
                                  newWindow: true
                              onSaveChanges:
                                - id: x34sgmr01x
                                  newWindow: true
                              pageType: NONE
                              parentId: s0jsqlsyr6
                              primaryColumns:
                                PATIENT_DOB:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_DOB
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_DOB
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_FIRST_NAME:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_FIRST_NAME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_FIRST_NAME
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_INDIVIDUAL_ID:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_INDIVIDUAL_ID
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_INDIVIDUAL_ID
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_LAST_NAME:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_LAST_NAME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_LAST_NAME
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_DEVICE_AND_TYPE:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_DEVICE_AND_TYPE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 4
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_DEVICE_AND_TYPE
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_ID:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_ID
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_ID
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_SOURCE:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_SOURCE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 6
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: SOURCE
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_TIME:
                                  columnType: date
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_TIME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 7
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: DATE & TIME
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY HH:mm:ss
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_TYPE:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_TYPE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 8
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_TYPE
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 9
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Value(%)
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE_1:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE_1
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 10
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_VALUE_1
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE_2:
                                  columnType: text
                                  computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE_2
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 11
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_VALUE_2
                                  linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              tableData: "{{getOxygenSaturationList.response}}"
                              tableHeader: Oxygen Saturation
                              textSize: PARAGRAPH
                              top:
                                mode: gridUnit
                                value: 0
                              type: TABLE_WIDGET
                              verticalAlignment: CENTER
                              widgetId: izb9q99t0j
                              widgetName: Table3
                              width:
                                mode: gridUnit
                                value: 80
                          collapseWhenHidden: true
                          containerStyle: none
                          detachFromLayout: true
                          dynamicBindingPathList: []
                          dynamicTriggerPathList: []
                          gridColumns: 80
                          height:
                            mode: gridUnit
                            value: 76
                          isLoading: false
                          isVisible: true
                          left:
                            mode: gridUnit
                            value: 0
                          parentId: okw62rdr5g
                          tabId: tabtv6moxoj1c
                          tabName: Tab 1
                          top:
                            mode: gridUnit
                            value: 0
                          type: CANVAS_WIDGET
                          widgetId: s0jsqlsyr6
                          widgetName: Canvas10
                          width:
                            mode: gridUnit
                            value: 80
                        - appMode: EDIT
                          canExtend: false
                          children:
                            - animateLoading: true
                              appMode: EDIT
                              chartData: "{{getWeightList.response}}"
                              chartDefinition: ui
                              chartType: SCATTER_CHART
                              collapseWhenHidden: true
                              columnInfo:
                                - canBeNumeric: false
                                  name: PATIENT_DOB
                                  type: date
                                - canBeNumeric: false
                                  name: PATIENT_FIRST_NAME
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_INDIVIDUAL_ID
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_LAST_NAME
                                  type: string
                                - canBeNumeric: false
                                  name: READING_DEVICE_AND_TYPE
                                  type: string
                                - name: READING_ID
                                - canBeNumeric: false
                                  name: READING_SOURCE
                                  type: string
                                - canBeNumeric: false
                                  name: READING_TIME
                                  type: date
                                - canBeNumeric: false
                                  name: READING_TYPE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE_1
                                  type: number
                                - canBeNumeric: true
                                  name: READING_VALUE_2
                                  type: number
                              dynamicBindingPathList:
                                - key: chartData
                              dynamicPropertyPathList: []
                              dynamicTriggerPathList:
                                - key: onSelectData
                              gridColumns: 80
                              groupBy:
                                field: ""
                              headerTitle: ""
                              height:
                                mode: gridUnit
                                value: 30
                              isLoading: false
                              isVisible: true
                              left:
                                mode: gridUnit
                                value: 0
                              onSelectData:
                                - id: u8vrhaa2a3
                                  newWindow: true
                              parentId: ffcd90m1xq
                              plotlyChartJson:
                                data:
                                  - type: bar
                                    x:
                                      - 1
                                      - 2
                                      - 3
                                    y:
                                      - 2
                                      - 5
                                      - 3
                                layout: {}
                              size:
                                field: ""
                              top:
                                mode: gridUnit
                                value: 46
                              type: CHART_WIDGET
                              widgetId: 4hmea81rcd
                              widgetName: Chart4
                              width:
                                mode: gridUnit
                                value: 80
                              x:
                                axisTitle: ""
                                dataType: temporal
                                field: READING_TIME
                                timeUnit: yearmonthdate
                              y:
                                axisTitle: ""
                                dataType: number
                                maximumFractionDigits: ""
                                notation: standard
                                series:
                                  - field: READING_VALUE_1
                            - animateLoading: true
                              appMode: EDIT
                              cachedColumnSettings:
                                Diastolic:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Diastolic
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Diastolic(mmHG)
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                Systolic:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Systolic
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 11
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Systolic(mmHG)
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                action:
                                  buttonLabel: Approve
                                  columnType: button
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: action
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: action
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  notation: standard
                                  onClick:
                                    - code: showAlert(currentRow.name + ' is approved!', 'success')
                                      id: id0
                                      newWindow: true
                                      type: runJs
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                date_joined:
                                  columnType: date
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: date_joined
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  inputFormat: YYYY-MM-DD
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: date joined
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                photo:
                                  columnType: image
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: photo
                                  imageBorderRadius:
                                    mode: "%"
                                    value: 50
                                  imageSize: FIXED
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: photo
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                twitter:
                                  columnType: link
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: twitter
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: twitter
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return '@' +
                                    currentRow.twitter?.split('/').pop()})}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              collapseWhenHidden: true
                              columnOrder:
                                - READING_TIME
                                - READING_VALUE
                                - READING_SOURCE
                                - READING_DEVICE_AND_TYPE
                                - PATIENT_DOB
                                - PATIENT_FIRST_NAME
                                - PATIENT_INDIVIDUAL_ID
                                - PATIENT_LAST_NAME
                                - READING_ID
                                - READING_TYPE
                                - READING_VALUE_1
                                - READING_VALUE_2
                              columnSizeMap:
                                Diastolic: 79
                                READING_SOURCE: 106
                                READING_TIME: 158.58076923076925
                              compactMode: SHORT
                              configuredPageSize: 10
                              defaultFilters: "{}"
                              defaultSelectedRow: "0"
                              defaultSort:
                                column: READING_TIME
                              derivedColumns: {}
                              dynamicBindingPathList:
                                - key: primaryColumns.PATIENT_DOB.computedValue
                                - key: primaryColumns.PATIENT_DOB.linkUrl
                                - key: primaryColumns.PATIENT_DOB.linkLabel
                                - key: primaryColumns.PATIENT_FIRST_NAME.computedValue
                                - key: primaryColumns.PATIENT_FIRST_NAME.linkUrl
                                - key: primaryColumns.PATIENT_FIRST_NAME.linkLabel
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.computedValue
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkUrl
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkLabel
                                - key: primaryColumns.PATIENT_LAST_NAME.computedValue
                                - key: primaryColumns.PATIENT_LAST_NAME.linkUrl
                                - key: primaryColumns.PATIENT_LAST_NAME.linkLabel
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.computedValue
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.linkUrl
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.linkLabel
                                - key: primaryColumns.READING_ID.computedValue
                                - key: primaryColumns.READING_ID.linkUrl
                                - key: primaryColumns.READING_ID.linkLabel
                                - key: primaryColumns.READING_SOURCE.computedValue
                                - key: primaryColumns.READING_SOURCE.linkUrl
                                - key: primaryColumns.READING_SOURCE.linkLabel
                                - key: primaryColumns.READING_TIME.computedValue
                                - key: primaryColumns.READING_TIME.linkUrl
                                - key: primaryColumns.READING_TIME.linkLabel
                                - key: primaryColumns.READING_TYPE.computedValue
                                - key: primaryColumns.READING_TYPE.linkUrl
                                - key: primaryColumns.READING_TYPE.linkLabel
                                - key: primaryColumns.READING_VALUE.computedValue
                                - key: primaryColumns.READING_VALUE.linkUrl
                                - key: primaryColumns.READING_VALUE.linkLabel
                                - key: tableData
                                - key: primaryColumns.READING_VALUE_1.computedValue
                                - key: primaryColumns.READING_VALUE_1.linkUrl
                                - key: primaryColumns.READING_VALUE_1.linkLabel
                                - key: primaryColumns.READING_VALUE_2.computedValue
                                - key: primaryColumns.READING_VALUE_2.linkUrl
                                - key: primaryColumns.READING_VALUE_2.linkLabel
                              dynamicTriggerPathList:
                                - key: onRowClicked
                                - key: onSaveChanges
                                - key: onCancelChanges
                              gridColumns: 80
                              height:
                                mode: gridUnit
                                value: 45
                              horizontalAlignment: LEFT
                              isDownloadable: true
                              isFilterable: true
                              isLoading: false
                              isSearchable: true
                              isVisible: true
                              label: Data
                              left:
                                mode: gridUnit
                                value: 0
                              onCancelChanges:
                                - id: 6wgibaz5wn
                                  newWindow: true
                              onRowClicked:
                                - id: uogiv4m5gj
                                  newWindow: true
                              onSaveChanges:
                                - id: x34sgmr01x
                                  newWindow: true
                              pageType: NONE
                              parentId: ffcd90m1xq
                              primaryColumns:
                                PATIENT_DOB:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_DOB
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_DOB
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_FIRST_NAME:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_FIRST_NAME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_FIRST_NAME
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_INDIVIDUAL_ID:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_INDIVIDUAL_ID
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_INDIVIDUAL_ID
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_LAST_NAME:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_LAST_NAME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_LAST_NAME
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_DEVICE_AND_TYPE:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_DEVICE_AND_TYPE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 4
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_DEVICE_AND_TYPE
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_ID:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_ID
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_ID
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_SOURCE:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_SOURCE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 6
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: SOURCE
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_TIME:
                                  columnType: date
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_TIME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 7
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: DATE & TIME
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY HH:mm:ss
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_TYPE:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_TYPE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 8
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_TYPE
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 9
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: Value(%)
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE_1:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE_1
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 10
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Value(lbs)
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE_2:
                                  columnType: text
                                  computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE_2
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 11
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_VALUE_2
                                  linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              tableData: "{{getWeightList.response}}"
                              tableHeader: Weight
                              textSize: PARAGRAPH
                              top:
                                mode: gridUnit
                                value: 0
                              type: TABLE_WIDGET
                              verticalAlignment: CENTER
                              widgetId: s6cbinxb33
                              widgetName: Table4
                              width:
                                mode: gridUnit
                                value: 80
                          collapseWhenHidden: true
                          containerStyle: none
                          detachFromLayout: true
                          gridColumns: 80
                          height:
                            mode: gridUnit
                            value: 76
                          isLoading: false
                          isVisible: true
                          left:
                            mode: gridUnit
                            value: 0
                          parentId: okw62rdr5g
                          tabId: tabfthmitte6h
                          tabName: Tab 1
                          top:
                            mode: gridUnit
                            value: 0
                          type: CANVAS_WIDGET
                          widgetId: ffcd90m1xq
                          widgetName: Canvas11
                          width:
                            mode: gridUnit
                            value: 80
                        - appMode: EDIT
                          canExtend: false
                          children:
                            - animateLoading: true
                              appMode: EDIT
                              chartData: "{{getPulseList.response}}"
                              chartDefinition: ui
                              chartType: SCATTER_CHART
                              collapseWhenHidden: true
                              columnInfo:
                                - canBeNumeric: false
                                  name: PATIENT_DOB
                                  type: date
                                - canBeNumeric: false
                                  name: PATIENT_FIRST_NAME
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_INDIVIDUAL_ID
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_LAST_NAME
                                  type: string
                                - canBeNumeric: false
                                  name: READING_DEVICE_AND_TYPE
                                  type: string
                                - name: READING_ID
                                - canBeNumeric: false
                                  name: READING_SOURCE
                                  type: string
                                - canBeNumeric: false
                                  name: READING_TIME
                                  type: date
                                - canBeNumeric: false
                                  name: READING_TYPE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE_1
                                  type: number
                                - canBeNumeric: true
                                  name: READING_VALUE_2
                                  type: number
                              dynamicBindingPathList:
                                - key: chartData
                              dynamicPropertyPathList: []
                              dynamicTriggerPathList:
                                - key: onSelectData
                              gridColumns: 80
                              groupBy:
                                field: ""
                              headerTitle: ""
                              height:
                                mode: gridUnit
                                value: 30
                              isLoading: false
                              isVisible: true
                              left:
                                mode: gridUnit
                                value: 0
                              onSelectData:
                                - id: u8vrhaa2a3
                                  newWindow: true
                              parentId: cnrybuvwyz
                              plotlyChartJson:
                                data:
                                  - type: bar
                                    x:
                                      - 1
                                      - 2
                                      - 3
                                    y:
                                      - 2
                                      - 5
                                      - 3
                                layout: {}
                              size:
                                field: ""
                              top:
                                mode: gridUnit
                                value: 46
                              type: CHART_WIDGET
                              widgetId: pbch96jsag
                              widgetName: Chart5
                              width:
                                mode: gridUnit
                                value: 80
                              x:
                                axisTitle: ""
                                dataType: temporal
                                field: READING_TIME
                                timeUnit: yearmonthdate
                              y:
                                axisTitle: ""
                                dataType: number
                                maximumFractionDigits: ""
                                notation: standard
                                series:
                                  - field: READING_VALUE
                            - animateLoading: true
                              appMode: EDIT
                              cachedColumnSettings:
                                Diastolic:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Diastolic
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Diastolic(mmHG)
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                Systolic:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Systolic
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 11
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Systolic(mmHG)
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                action:
                                  buttonLabel: Approve
                                  columnType: button
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: action
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: action
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  notation: standard
                                  onClick:
                                    - code: showAlert(currentRow.name + ' is approved!', 'success')
                                      id: id0
                                      newWindow: true
                                      type: runJs
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                date_joined:
                                  columnType: date
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: date_joined
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  inputFormat: YYYY-MM-DD
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: date joined
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                photo:
                                  columnType: image
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: photo
                                  imageBorderRadius:
                                    mode: "%"
                                    value: 50
                                  imageSize: FIXED
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: photo
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                twitter:
                                  columnType: link
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: twitter
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: twitter
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return '@' +
                                    currentRow.twitter?.split('/').pop()})}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              collapseWhenHidden: true
                              columnOrder:
                                - READING_TIME
                                - READING_VALUE
                                - READING_SOURCE
                                - READING_DEVICE_AND_TYPE
                                - PATIENT_DOB
                                - PATIENT_FIRST_NAME
                                - PATIENT_INDIVIDUAL_ID
                                - PATIENT_LAST_NAME
                                - READING_ID
                                - READING_TYPE
                                - READING_VALUE_1
                                - READING_VALUE_2
                              columnSizeMap:
                                Diastolic: 79
                                READING_SOURCE: 106
                                READING_TIME: 158.58076923076925
                              compactMode: SHORT
                              configuredPageSize: 10
                              defaultFilters: "{}"
                              defaultSelectedRow: "0"
                              defaultSort:
                                column: READING_TIME
                              derivedColumns: {}
                              dynamicBindingPathList:
                                - key: primaryColumns.PATIENT_DOB.computedValue
                                - key: primaryColumns.PATIENT_DOB.linkUrl
                                - key: primaryColumns.PATIENT_DOB.linkLabel
                                - key: primaryColumns.PATIENT_FIRST_NAME.computedValue
                                - key: primaryColumns.PATIENT_FIRST_NAME.linkUrl
                                - key: primaryColumns.PATIENT_FIRST_NAME.linkLabel
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.computedValue
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkUrl
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkLabel
                                - key: primaryColumns.PATIENT_LAST_NAME.computedValue
                                - key: primaryColumns.PATIENT_LAST_NAME.linkUrl
                                - key: primaryColumns.PATIENT_LAST_NAME.linkLabel
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.computedValue
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.linkUrl
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.linkLabel
                                - key: primaryColumns.READING_ID.computedValue
                                - key: primaryColumns.READING_ID.linkUrl
                                - key: primaryColumns.READING_ID.linkLabel
                                - key: primaryColumns.READING_SOURCE.computedValue
                                - key: primaryColumns.READING_SOURCE.linkUrl
                                - key: primaryColumns.READING_SOURCE.linkLabel
                                - key: primaryColumns.READING_TIME.computedValue
                                - key: primaryColumns.READING_TIME.linkUrl
                                - key: primaryColumns.READING_TIME.linkLabel
                                - key: primaryColumns.READING_TYPE.computedValue
                                - key: primaryColumns.READING_TYPE.linkUrl
                                - key: primaryColumns.READING_TYPE.linkLabel
                                - key: primaryColumns.READING_VALUE.computedValue
                                - key: primaryColumns.READING_VALUE.linkUrl
                                - key: primaryColumns.READING_VALUE.linkLabel
                                - key: tableData
                                - key: primaryColumns.READING_VALUE_1.computedValue
                                - key: primaryColumns.READING_VALUE_1.linkUrl
                                - key: primaryColumns.READING_VALUE_1.linkLabel
                                - key: primaryColumns.READING_VALUE_2.computedValue
                                - key: primaryColumns.READING_VALUE_2.linkUrl
                                - key: primaryColumns.READING_VALUE_2.linkLabel
                              dynamicTriggerPathList:
                                - key: onRowClicked
                                - key: onSaveChanges
                                - key: onCancelChanges
                              gridColumns: 80
                              height:
                                mode: gridUnit
                                value: 45
                              horizontalAlignment: LEFT
                              isDownloadable: true
                              isFilterable: true
                              isLoading: false
                              isSearchable: true
                              isVisible: true
                              label: Data
                              left:
                                mode: gridUnit
                                value: 0
                              onCancelChanges:
                                - id: 6wgibaz5wn
                                  newWindow: true
                              onRowClicked:
                                - id: uogiv4m5gj
                                  newWindow: true
                              onSaveChanges:
                                - id: x34sgmr01x
                                  newWindow: true
                              pageType: NONE
                              parentId: cnrybuvwyz
                              primaryColumns:
                                PATIENT_DOB:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_DOB
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_DOB
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_FIRST_NAME:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_FIRST_NAME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_FIRST_NAME
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_INDIVIDUAL_ID:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_INDIVIDUAL_ID
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_INDIVIDUAL_ID
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_LAST_NAME:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_LAST_NAME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_LAST_NAME
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_DEVICE_AND_TYPE:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_DEVICE_AND_TYPE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 4
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_DEVICE_AND_TYPE
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_ID:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_ID
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_ID
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_SOURCE:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_SOURCE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 6
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: SOURCE
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_TIME:
                                  columnType: date
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_TIME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 7
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: DATE & TIME
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY HH:mm:ss
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_TYPE:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_TYPE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 8
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_TYPE
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 9
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: Value(%)
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE_1:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE_1
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 10
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Value(bpm))
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE_2:
                                  columnType: text
                                  computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE_2
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 11
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_VALUE_2
                                  linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              tableData: "{{getPulseList.response}}"
                              tableHeader: Heart Rate
                              textSize: PARAGRAPH
                              top:
                                mode: gridUnit
                                value: 0
                              type: TABLE_WIDGET
                              verticalAlignment: CENTER
                              widgetId: ofh7k5sdof
                              widgetName: Table5
                              width:
                                mode: gridUnit
                                value: 80
                          collapseWhenHidden: true
                          containerStyle: none
                          detachFromLayout: true
                          gridColumns: 80
                          height:
                            mode: gridUnit
                            value: 76
                          isLoading: false
                          isVisible: true
                          left:
                            mode: gridUnit
                            value: 0
                          parentId: okw62rdr5g
                          tabId: tabycze0466zl
                          tabName: Tab 1
                          top:
                            mode: gridUnit
                            value: 0
                          type: CANVAS_WIDGET
                          widgetId: cnrybuvwyz
                          widgetName: Canvas12
                          width:
                            mode: gridUnit
                            value: 80
                        - appMode: EDIT
                          canExtend: false
                          children:
                            - animateLoading: true
                              appMode: EDIT
                              chartData: "{{getBloodGlucoseList.response}}"
                              chartDefinition: ui
                              chartType: SCATTER_CHART
                              collapseWhenHidden: true
                              columnInfo:
                                - canBeNumeric: false
                                  name: PATIENT_DOB
                                  type: date
                                - canBeNumeric: false
                                  name: PATIENT_FIRST_NAME
                                  type: string
                                - canBeNumeric: true
                                  name: PATIENT_INDIVIDUAL_ID
                                  type: string
                                - canBeNumeric: false
                                  name: PATIENT_LAST_NAME
                                  type: string
                                - canBeNumeric: false
                                  name: READING_DEVICE_AND_TYPE
                                  type: string
                                - name: READING_ID
                                - canBeNumeric: false
                                  name: READING_SOURCE
                                  type: string
                                - canBeNumeric: false
                                  name: READING_TIME
                                  type: date
                                - canBeNumeric: false
                                  name: READING_TYPE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE
                                  type: string
                                - canBeNumeric: true
                                  name: READING_VALUE_1
                                  type: number
                                - canBeNumeric: true
                                  name: READING_VALUE_2
                                  type: number
                              dynamicBindingPathList:
                                - key: chartData
                              dynamicPropertyPathList: []
                              dynamicTriggerPathList:
                                - key: onSelectData
                              gridColumns: 80
                              groupBy:
                                field: ""
                              headerTitle: ""
                              height:
                                mode: gridUnit
                                value: 30
                              isLoading: false
                              isVisible: true
                              left:
                                mode: gridUnit
                                value: 0
                              onSelectData:
                                - id: u8vrhaa2a3
                                  newWindow: true
                              parentId: bc9cwyz9kj
                              plotlyChartJson:
                                data:
                                  - type: bar
                                    x:
                                      - 1
                                      - 2
                                      - 3
                                    y:
                                      - 2
                                      - 5
                                      - 3
                                layout: {}
                              size:
                                field: ""
                              top:
                                mode: gridUnit
                                value: 46
                              type: CHART_WIDGET
                              widgetId: m4ffr0cyzd
                              widgetName: Chart6
                              width:
                                mode: gridUnit
                                value: 80
                              x:
                                axisTitle: ""
                                dataType: temporal
                                field: READING_TIME
                                timeUnit: yearmonthdate
                              y:
                                axisTitle: ""
                                dataType: number
                                maximumFractionDigits: ""
                                notation: standard
                                series:
                                  - field: READING_VALUE
                            - animateLoading: true
                              appMode: EDIT
                              cachedColumnSettings:
                                Diastolic:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Diastolic
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Diastolic(mmHG)
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Diastolic })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                Systolic:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: Systolic
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 11
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Systolic(mmHG)
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.Systolic })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                action:
                                  buttonLabel: Approve
                                  columnType: button
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: action
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: action
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.action })}}"
                                  notation: standard
                                  onClick:
                                    - code: showAlert(currentRow.name + ' is approved!', 'success')
                                      id: id0
                                      newWindow: true
                                      type: runJs
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                date_joined:
                                  columnType: date
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: date_joined
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  inputFormat: YYYY-MM-DD
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: date joined
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.date_joined })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                photo:
                                  columnType: image
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: photo
                                  imageBorderRadius:
                                    mode: "%"
                                    value: 50
                                  imageSize: FIXED
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: photo
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.photo })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                twitter:
                                  columnType: link
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: twitter
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: twitter
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return '@' +
                                    currentRow.twitter?.split('/').pop()})}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.twitter })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              collapseWhenHidden: true
                              columnOrder:
                                - READING_TIME
                                - READING_VALUE
                                - READING_SOURCE
                                - READING_DEVICE_AND_TYPE
                                - PATIENT_DOB
                                - PATIENT_FIRST_NAME
                                - PATIENT_INDIVIDUAL_ID
                                - PATIENT_LAST_NAME
                                - READING_ID
                                - READING_TYPE
                                - READING_VALUE_1
                                - READING_VALUE_2
                              columnSizeMap:
                                Diastolic: 79
                                READING_SOURCE: 106
                                READING_TIME: 158.58076923076925
                              compactMode: SHORT
                              configuredPageSize: 10
                              defaultFilters: "{}"
                              defaultSelectedRow: "0"
                              defaultSort:
                                column: READING_TIME
                              derivedColumns: {}
                              dynamicBindingPathList:
                                - key: primaryColumns.PATIENT_DOB.computedValue
                                - key: primaryColumns.PATIENT_DOB.linkUrl
                                - key: primaryColumns.PATIENT_DOB.linkLabel
                                - key: primaryColumns.PATIENT_FIRST_NAME.computedValue
                                - key: primaryColumns.PATIENT_FIRST_NAME.linkUrl
                                - key: primaryColumns.PATIENT_FIRST_NAME.linkLabel
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.computedValue
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkUrl
                                - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkLabel
                                - key: primaryColumns.PATIENT_LAST_NAME.computedValue
                                - key: primaryColumns.PATIENT_LAST_NAME.linkUrl
                                - key: primaryColumns.PATIENT_LAST_NAME.linkLabel
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.computedValue
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.linkUrl
                                - key: primaryColumns.READING_DEVICE_AND_TYPE.linkLabel
                                - key: primaryColumns.READING_ID.computedValue
                                - key: primaryColumns.READING_ID.linkUrl
                                - key: primaryColumns.READING_ID.linkLabel
                                - key: primaryColumns.READING_SOURCE.computedValue
                                - key: primaryColumns.READING_SOURCE.linkUrl
                                - key: primaryColumns.READING_SOURCE.linkLabel
                                - key: primaryColumns.READING_TIME.computedValue
                                - key: primaryColumns.READING_TIME.linkUrl
                                - key: primaryColumns.READING_TIME.linkLabel
                                - key: primaryColumns.READING_TYPE.computedValue
                                - key: primaryColumns.READING_TYPE.linkUrl
                                - key: primaryColumns.READING_TYPE.linkLabel
                                - key: primaryColumns.READING_VALUE.computedValue
                                - key: primaryColumns.READING_VALUE.linkUrl
                                - key: primaryColumns.READING_VALUE.linkLabel
                                - key: tableData
                                - key: primaryColumns.READING_VALUE_1.computedValue
                                - key: primaryColumns.READING_VALUE_1.linkUrl
                                - key: primaryColumns.READING_VALUE_1.linkLabel
                                - key: primaryColumns.READING_VALUE_2.computedValue
                                - key: primaryColumns.READING_VALUE_2.linkUrl
                                - key: primaryColumns.READING_VALUE_2.linkLabel
                              dynamicTriggerPathList:
                                - key: onRowClicked
                                - key: onSaveChanges
                                - key: onCancelChanges
                              gridColumns: 80
                              height:
                                mode: gridUnit
                                value: 45
                              horizontalAlignment: LEFT
                              isDownloadable: true
                              isFilterable: true
                              isLoading: false
                              isSearchable: true
                              isVisible: true
                              label: Data
                              left:
                                mode: gridUnit
                                value: 0
                              onCancelChanges:
                                - id: 6wgibaz5wn
                                  newWindow: true
                              onRowClicked:
                                - id: uogiv4m5gj
                                  newWindow: true
                              onSaveChanges:
                                - id: x34sgmr01x
                                  newWindow: true
                              pageType: NONE
                              parentId: bc9cwyz9kj
                              primaryColumns:
                                PATIENT_DOB:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_DOB
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 0
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_DOB
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_DOB })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_FIRST_NAME:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_FIRST_NAME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 1
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_FIRST_NAME
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_FIRST_NAME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_INDIVIDUAL_ID:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_INDIVIDUAL_ID
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 2
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_INDIVIDUAL_ID
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_INDIVIDUAL_ID })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                PATIENT_LAST_NAME:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: PATIENT_LAST_NAME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 3
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: PATIENT_LAST_NAME
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.PATIENT_LAST_NAME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_DEVICE_AND_TYPE:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_DEVICE_AND_TYPE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 4
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_DEVICE_AND_TYPE
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_DEVICE_AND_TYPE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_ID:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_ID
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 5
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_ID
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_ID })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_SOURCE:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_SOURCE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 6
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: SOURCE
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_SOURCE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_TIME:
                                  columnType: date
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_TIME
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 7
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: DATE & TIME
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TIME })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  outputFormat: MM-DD-YYYY HH:mm:ss
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_TYPE:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_TYPE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 8
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_TYPE
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_TYPE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 9
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: Value(mg/dL)
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE_1:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE_1
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 10
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: true
                                  label: Value(bpm))
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_1 })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                                READING_VALUE_2:
                                  columnType: text
                                  computedValue: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  enableFilter: true
                                  enableSort: true
                                  headerIcon: ""
                                  headerIconPosition: LEFT
                                  horizontalAlignment: LEFT
                                  id: READING_VALUE_2
                                  imageBorderRadius:
                                    mode: px
                                    value: 0
                                  imageSize: FIT
                                  index: 11
                                  isDerived: false
                                  isEditableOnInsertion: true
                                  isVisible: false
                                  label: READING_VALUE_2
                                  linkLabel: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  linkUrl: "{{Table6.tableDataWithInserts.map((currentRow) => { return
                                    currentRow.READING_VALUE_2 })}}"
                                  notation: standard
                                  openImageUrl: true
                                  openInNewTab: true
                                  tagDisplayConfig: {}
                                  textSize: PARAGRAPH
                                  useLabelAsDisplayValue: true
                                  verticalAlignment: CENTER
                                  width: 150
                              tableData: "{{getBloodGlucoseList.response}}"
                              tableHeader: Blood Glucose
                              textSize: PARAGRAPH
                              top:
                                mode: gridUnit
                                value: 0
                              type: TABLE_WIDGET
                              verticalAlignment: CENTER
                              widgetId: 7lbn7xmtga
                              widgetName: Table6
                              width:
                                mode: gridUnit
                                value: 80
                          collapseWhenHidden: true
                          containerStyle: none
                          detachFromLayout: true
                          gridColumns: 80
                          height:
                            mode: gridUnit
                            value: 76
                          isLoading: false
                          isVisible: true
                          left:
                            mode: gridUnit
                            value: 0
                          parentId: okw62rdr5g
                          tabId: tabq0cmzmr43x
                          tabName: Tab 1
                          top:
                            mode: gridUnit
                            value: 0
                          type: CANVAS_WIDGET
                          widgetId: bc9cwyz9kj
                          widgetName: Canvas13
                          width:
                            mode: gridUnit
                            value: 80
                      collapseWhenHidden: true
                      defaultTab: Patient Detail
                      dynamicBindingPathList: []
                      dynamicTriggerPathList:
                        - key: onTabSelected
                      gridColumns: 80
                      height:
                        mode: gridUnit
                        value: 78
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      onTabSelected:
                        - id: fx8ia5ak92
                          newWindow: true
                      parentId: unwvhxvxg3
                      shouldScrollContents: true
                      shouldShowTabs: true
                      tabs:
                        - id: tab1
                          label: Patient Detail
                          widgetId: ho0sbhu0r9
                        - id: tab2
                          label: Blood Pressure
                          widgetId: 8yskkzfui3
                        - id: tabtv6moxoj1c
                          label: Oxygen Saturation
                          widgetId: s0jsqlsyr6
                        - id: tabfthmitte6h
                          label: Weight
                          widgetId: ffcd90m1xq
                        - id: tabycze0466zl
                          label: Heart Rate
                          widgetId: cnrybuvwyz
                        - id: tabq0cmzmr43x
                          label: Blood Glucose
                          widgetId: bc9cwyz9kj
                      top:
                        mode: gridUnit
                        value: 8
                      type: TABS_WIDGET
                      widgetId: okw62rdr5g
                      widgetName: Tabs1
                      width:
                        mode: gridUnit
                        value: 80
                  collapseWhenHidden: true
                  detachFromLayout: true
                  distribution: TOP
                  dynamicBindingPathList: []
                  dynamicTriggerPathList: []
                  gridColumns: 80
                  height:
                    mode: fitContent
                    value: 84
                  isDisabled: false
                  isLoading: false
                  isVisible: true
                  layout: VSTACK
                  left:
                    mode: gridUnit
                    value: 0
                  minHeight:
                    mode: gridUnit
                    value: 71
                  parentId: wozrx021tq
                  shouldScrollContents: true
                  spacing:
                    mode: px
                    value: 12
                  top:
                    mode: gridUnit
                    value: 0
                  type: CANVAS_WIDGET
                  widgetId: unwvhxvxg3
                  widgetName: Canvas4
                  width:
                    mode: gridUnit
                    value: 80
              collapseWhenHidden: true
              detachFromLayout: true
              dragDisabled: true
              dynamicBindingPathList: []
              dynamicTriggerPathList: []
              gridColumns: 80
              height:
                mode: fitContent
                value: 86
              isLoading: false
              isVisible: true
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: gridUnit
                value: 37
              parentId: pejhx1pa8s
              top:
                mode: gridUnit
                value: 0
              type: SECTION_WIDGET
              widgetId: wozrx021tq
              widgetName: Section4
              width:
                mode: gridUnit
                value: 80
          detachFromLayout: true
          dynamicBindingPathList: []
          dynamicTriggerPathList:
            - key: onOpen
            - key: onClose
          gridColumns: 80
          hasBackdrop: true
          height:
            mode: gridUnit
            value: 69
          isLoading: false
          left:
            mode: gridUnit
            value: 0
          onClose:
            - id: frctusqy6e
          onOpen:
            - apiNames:
                - getCurrentPanelTime
              id: 8qa0y5ekpb
              type: executeApi
            - apiNames:
                - getDetailFromLSQ
              id: nxhetlpwia
              newWindow: true
              type: executeApi
            - apiNames:
                - CTM_Calls
              id: rrf8m3mu0g
              newWindow: true
              type: executeApi
            - apiNames:
                - getReadingLogs
              id: ol8l063p0s
              newWindow: true
              type: executeApi
            - apiNames:
                - getBloodPressureList
              id: fxh5d9f2g7
              newWindow: true
              type: executeApi
            - apiNames:
                - getBloodPressureSystolicPlotly
              id: jzpyljm6tq
              newWindow: true
              type: executeApi
            - apiNames:
                - getBloodPressureDiastolicPlotly
              id: 46wnshk2ii
              newWindow: true
              type: executeApi
            - apiNames:
                - getOxygenSaturationList
              id: 6bmhktc2iv
              newWindow: true
              type: executeApi
            - apiNames:
                - getPulseList
              id: 7ckzrydl6r
              newWindow: true
              type: executeApi
            - apiNames:
                - getWeightList
              id: fgrpdrxrj2
              newWindow: true
              type: executeApi
            - apiNames:
                - getBloodGlucoseList
              id: 8qw7nexig0
              newWindow: true
              type: executeApi
          parentId: "0"
          shouldScrollContents: true
          size: LARGE
          top:
            mode: gridUnit
            value: 0
          type: SLIDEOUT_WIDGET
          widgetId: pejhx1pa8s
          widgetName: detail_slide
          width:
            mode: gridUnit
            value: 80
        - appMode: EDIT
          canOutsideClickClose: true
          children:
            - appMode: EDIT
              canExtend: true
              children:
                - appMode: EDIT
                  canExtend: true
                  children:
                    - animateLoading: true
                      appMode: EDIT
                      collapseWhenHidden: true
                      dynamicBindingPathList:
                        - key: text
                      dynamicTriggerPathList: []
                      gridColumns: 53
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 3
                      parentId: rlypax6u3l
                      text: "Tracked Duration: <b>{{getPatientToStop.response.showTime}}</b>"
                      textAlign: LEFT
                      textStyle: LABEL
                      textType: text
                      top:
                        mode: gridUnit
                        value: 17
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: 9xxzdfdyxx
                      widgetName: Text20
                      width:
                        mode: gridUnit
                        value: 53
                    - animateLoading: true
                      appMode: EDIT
                      collapseWhenHidden: true
                      dynamicBindingPathList:
                        - key: text
                      dynamicTriggerPathList: []
                      gridColumns: 53
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 3
                      parentId: rlypax6u3l
                      text: "End Time: <b>{{moment(getPatientToStop.response.end_time).format('D MMMM
                        YYYY, h:mm:ss A')}}</b>"
                      textAlign: LEFT
                      textStyle: LABEL
                      textType: text
                      top:
                        mode: gridUnit
                        value: 13
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: 7pawcr052i
                      widgetName: Text19
                      width:
                        mode: gridUnit
                        value: 53
                    - animateLoading: true
                      appMode: EDIT
                      collapseWhenHidden: true
                      dynamicBindingPathList:
                        - key: text
                      dynamicTriggerPathList: []
                      gridColumns: 53
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 3
                      parentId: rlypax6u3l
                      text: "Start Time: <b>{{moment(getPatientToStop.response.start_time).format('D
                        MMMM YYYY, h:mm:ss A')}}</b>"
                      textAlign: LEFT
                      textStyle: LABEL
                      textType: text
                      top:
                        mode: gridUnit
                        value: 9
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: r1ez0oh526
                      widgetName: Text18
                      width:
                        mode: gridUnit
                        value: 53
                    - animateLoading: true
                      appMode: EDIT
                      collapseWhenHidden: true
                      dynamicBindingPathList:
                        - key: text
                      dynamicTriggerPathList: []
                      gridColumns: 91
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      parentId: rlypax6u3l
                      text: "{{getPatientToStop.response.navigator}}'s Time Tracking"
                      textAlign: LEFT
                      textStyle: HEADING_2
                      textType: text
                      top:
                        mode: gridUnit
                        value: 0
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: 9z2uu733cp
                      widgetName: Text16
                      width:
                        mode: gridUnit
                        value: 91
                    - animateLoading: true
                      appMode: EDIT
                      buttonStyle: SECONDARY_BUTTON
                      collapseWhenHidden: true
                      docsUrl: https://docs.superblocks.com/components/button
                      dynamicTriggerPathList:
                        - key: onClick
                      gridColumns: 20
                      height:
                        mode: gridUnit
                        value: 3
                      iconPosition: LEFT
                      isDefaultClickDisabled: true
                      isDisabled: false
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 65
                      onClick:
                        - direction: close
                          id: en6j795yuj
                          name: timeTrackModal
                          type: controlModal
                      parentId: rlypax6u3l
                      text: Cancel
                      top:
                        mode: gridUnit
                        value: 11
                      type: BUTTON_WIDGET
                      widgetId: nc0uxjygou
                      widgetName: Button5
                      width:
                        mode: gridUnit
                        value: 20
                    - animateLoading: true
                      appMode: EDIT
                      backgroundColor: "{{ theme.colors.danger }}"
                      buttonStyle: PRIMARY_BUTTON
                      collapseWhenHidden: true
                      docsUrl: https://docs.superblocks.com/components/button
                      dynamicBindingPathList:
                        - key: backgroundColor
                      dynamicTriggerPathList:
                        - key: onClick
                      gridColumns: 20
                      height:
                        mode: gridUnit
                        value: 3
                      iconPosition: LEFT
                      isDefaultClickDisabled: true
                      isDisabled: false
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 65
                      onClick:
                        - apiNames:
                            - endTimeTracked
                          id: ct6gi3uy6y
                          type: executeApi
                        - apiNames:
                            - getTimeTracksForNav
                          id: fhj6v6d659
                          type: executeApi
                        - apiNames:
                            - updateTimeTrack
                          id: xh7occuj0f
                          type: executeApi
                        - direction: close
                          id: 1lhdgwtlg0
                          name: timeTrackModal
                          type: controlModal
                      parentId: rlypax6u3l
                      text: Stop
                      top:
                        mode: gridUnit
                        value: 16
                      type: BUTTON_WIDGET
                      widgetId: cyjo8xl30k
                      widgetName: Button6
                      width:
                        mode: gridUnit
                        value: 20
                    - animateLoading: true
                      appMode: EDIT
                      collapseWhenHidden: true
                      dynamicBindingPathList:
                        - key: text
                      dynamicTriggerPathList: []
                      gridColumns: 53
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 3
                      parentId: rlypax6u3l
                      text: "Patient Name: <b>{{getPatientToStop.response.first_name}}
                        {{getPatientToStop.response.last_name}}</b>"
                      textAlign: LEFT
                      textStyle: LABEL
                      textType: text
                      top:
                        mode: gridUnit
                        value: 5
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: g1crjkd04m
                      widgetName: Text17
                      width:
                        mode: gridUnit
                        value: 53
                    - animateLoading: true
                      appMode: EDIT
                      collapseWhenHidden: true
                      defaultOptionValue: Care Navigation
                      dynamicBindingPathList:
                        - key: icon
                      dynamicTriggerPathList:
                        - key: onOptionChange
                        - key: onSearchTextChange
                        - key: onClear
                      gridColumns: 53
                      height:
                        mode: gridUnit
                        value: 5
                      icon: "{{ icons.info }}"
                      isLoading: false
                      isVertical: true
                      isVisible: true
                      label: Time Spent on
                      left:
                        mode: gridUnit
                        value: 56
                      onClear:
                        - id: 5hco5rgwkt
                      onOptionChange:
                        - id: shodi3vopl
                      onSearchTextChange:
                        - id: 4s17mdoy4y
                      options: |-
                        [
                          {
                            "label": "Care Navigation",
                            "value": "Care Navigation"
                          },
                          {
                            "label": "Clinical Services",
                            "value": "Clinical Services"
                          },
                          {
                            "label": "Device Support",
                            "value": "Device Support"
                          },
                          {
                            "label": "Enrollment",
                            "value": "Enrollment"
                          },
                          {
                            "label": "Other",
                            "value": "Other"
                          },
                          {
                            "label": "Records & Admin",
                            "value": "Records & Admin"
                          }
                        ]
                      parentId: rlypax6u3l
                      placeholderText: Select an option
                      top:
                        mode: gridUnit
                        value: 4
                      type: DROP_DOWN_WIDGET
                      widgetId: uuumf1d4lt
                      widgetName: serviceType
                      width:
                        mode: gridUnit
                        value: 40
                  collapseWhenHidden: true
                  detachFromLayout: true
                  gridColumns: 96
                  height:
                    mode: fitContent
                    value: 21
                  isDisabled: false
                  isInModal: true
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 0
                  minHeight:
                    mode: gridUnit
                    value: 33
                  parentId: ov97v82o91
                  shouldScrollContents: true
                  top:
                    mode: gridUnit
                    value: 0
                  type: CANVAS_WIDGET
                  widgetId: rlypax6u3l
                  widgetName: Canvas17
                  width:
                    mode: gridUnit
                    value: 96
              collapseWhenHidden: true
              detachFromLayout: true
              dragDisabled: true
              gridColumns: 96
              height:
                mode: fitContent
                value: 23
              isLoading: false
              isVisible: true
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: gridUnit
                value: 23
              parentId: en6j795yuj
              top:
                mode: gridUnit
                value: 0
              type: SECTION_WIDGET
              widgetId: ov97v82o91
              widgetName: Section5
              width:
                mode: gridUnit
                value: 0
          detachFromLayout: true
          dynamicBindingPathList: []
          dynamicTriggerPathList:
            - key: onOpen
            - key: onClose
          gridColumns: 96
          hasBackdrop: true
          height:
            mode: gridUnit
            value: 0
          heightPreset: MEDIUM
          isLoading: false
          left:
            mode: gridUnit
            value: 0
          onClose:
            - id: w9kq2a4kq6
          onOpen:
            - apiNames:
                - getPatientToStop
              id: g55nhdoalh
              type: executeApi
          parentId: "0"
          shouldScrollContents: true
          top:
            mode: gridUnit
            value: 0
          type: MODAL_WIDGET
          widgetId: en6j795yuj
          widgetName: timeTrackModal
          width:
            mode: gridUnit
            value: 96
          widthPreset: SMALL
      detachFromLayout: true
      dynamicBindingPathList: []
      gridColumns: 96
      height:
        mode: gridUnit
        value: 99
      layoutVersion: 4
      left:
        mode: gridUnit
        value: 0
      maxWidth:
        mode: px
        value: 7680
      minWidth:
        mode: px
        value: 840
      stateVars:
        stateVarMap:
          96396dd2-8804-43ae-8f82-a590f4c16cdb:
            createdAt: 1713932508882
            defaultValue: ""
            id: 96396dd2-8804-43ae-8f82-a590f4c16cdb
            name: currentTrackeToStop
            persistance: Temporary
          df015d7d-4d6d-4157-a193-15503a2185b5:
            createdAt: 1712885637358
            defaultValue: "{endDate: new Date(), startDate: new Date()}"
            dynamicBindingPathList: []
            dynamicTriggerPathList: []
            id: df015d7d-4d6d-4157-a193-15503a2185b5
            name: dateRange
            persistance: Temporary
      timers:
        timerMap:
          1cd29477-bbae-4a3d-b9e1-386c02c5a687:
            createdAt: 1713918080406
            dynamicTriggerPathList:
              - key: steps
            id: 1cd29477-bbae-4a3d-b9e1-386c02c5a687
            intervalMs: 5000
            name: Timer1
            startOnPageLoad: true
            steps:
              - apiNames:
                  - updateTimeTrack
                id: z83wyftr9u
                type: executeApi
              - apiNames:
                  - getCurrentPanelTime
                id: jg1sr7wssn
                type: executeApi
      top:
        mode: gridUnit
        value: 0
      type: PAGE_WIDGET
      version: 8
      widgetId: "0"
      widgetName: Page
      width:
        mode: gridUnit
        value: 0
    id: 184aed59-8f87-4b59-9fe6-45fb54886044
name: Page
