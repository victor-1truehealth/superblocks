blocks:
  - name: Step1
    step:
      integration: c00652f8-5dd0-499b-9f0e-c48909251229
      snowflake:
        body: |-
          WITH MonthlyPatientCounts AS (
              SELECT 
                  EXTRACT(YEAR FROM PD.CREATED_ON) AS Year,
                  EXTRACT(MONTH FROM PD.CREATED_ON) AS Month,
                  COUNT(DISTINCT PD.PATIENT_INDIVIDUAL_ID) AS NewPatients
              FROM 
                  FIVETRAN_DATABASE.TRUECARE.PATIENT_DATA PD
              WHERE 
                  PD.LEAD_STAGE IN ('Active', 'Re-engage')
              GROUP BY 
                  Year, Month
          ),
          CumulativeActivePatients AS (
              SELECT 
                  MPC.Year, 
                  MPC.Month, 
                  SUM(MPC.NewPatients) OVER (ORDER BY MPC.Year, MPC.Month ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS CumulativePatients
              FROM 
                  MonthlyPatientCounts MPC
          ),
          MonthlyCharges AS (
              SELECT 
                  EXTRACT(YEAR FROM RC.SRVC_DATE) AS Year,
                  EXTRACT(MONTH FROM RC.SRVC_DATE) AS Month,
                  SUM(RC.CHARGES) AS TotalCharges
              FROM 
                  FIVETRAN_DATABASE.SHARE_POINT.SEGUE_REIMBURSEMENTS_RPM_CHARGES RC
              JOIN 
                  FIVETRAN_DATABASE.TRUECARE.PATIENT_DATA PD
              ON 
                  PD.PATIENT_DOB = CAST(RC.DOB AS DATE)
              WHERE 
                  PD.LEAD_STAGE IN ('Active', 'Re-engage')
              GROUP BY 
                  Year, Month
          )
          SELECT 
              MC.Year, 
              MC.Month, 
              MC.TotalCharges,
              CAP.CumulativePatients,
              CASE 
                  WHEN CAP.CumulativePatients > 0 THEN MC.TotalCharges / CAP.CumulativePatients 
                  ELSE 0 
              END AS AvgChargesPerPatient
          FROM 
              MonthlyCharges MC
          JOIN 
              CumulativeActivePatients CAP
          ON 
              MC.Year = CAP.Year AND MC.Month = CAP.Month
          ORDER BY 
              MC.Year, 
              MC.Month;
        filterBy: []
        mappedColumns: []
        newValues: []
        oldValues: []
        usePreparedSql: true
metadata:
  id: a9cbff11-0f2b-4a85-ac18-df6180c0ff77
  name: getNormalizedBillingCharges
  organization: 220afb9e-bf20-40ef-9f76-b8fe766a8630
trigger:
  application:
    id: 0628ed1a-5202-4cbe-829f-9b3976454a97
