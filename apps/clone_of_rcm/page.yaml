applicationId: 0628ed1a-5202-4cbe-829f-9b3976454a97
id: f73b90cd-8589-4212-8901-c859c0614ea1
isHidden: false
layouts:
  - dsl:
      apis:
        apiMap:
          0c929eb6-942d-4a9d-974b-741166aee532:
            dynamicTriggerPathList:
              - key: onError
            id: 0c929eb6-942d-4a9d-974b-741166aee532
            onError:
              - id: dfe5cb55-2542-4600-9f19-acd28b69ae91
                message: "{{API1.error}}"
                style: error
                type: showAlert
          16692555-10e2-430e-9863-2fee20c518e1:
            dynamicTriggerPathList:
              - key: onError
            id: 16692555-10e2-430e-9863-2fee20c518e1
            onError:
              - id: efb90638-3aba-4e81-aae1-dec7b1c7e2f5
                message: "{{getReimbursementsCurrentMonth.error}}"
                style: error
                type: showAlert
          241eef40-adc6-4450-9359-2fe627816d6b:
            dynamicTriggerPathList:
              - key: onError
            id: 241eef40-adc6-4450-9359-2fe627816d6b
            onError:
              - id: ed2e6e2e-9e08-476c-afb6-4395f1029087
                message: "{{API3.error}}"
                style: error
                type: showAlert
          3058f8f4-8287-4941-be2f-834d03afcf39:
            dynamicTriggerPathList:
              - key: onError
            id: 3058f8f4-8287-4941-be2f-834d03afcf39
            onError:
              - id: b2271fb7-0468-4105-a0a4-8aec19bd406d
                message: "{{getNew99457_99458Billings.error}}"
                style: error
                type: showAlert
          5a9ffa20-e5d3-453f-8847-aea133122a0a:
            dynamicTriggerPathList:
              - key: onError
            id: 5a9ffa20-e5d3-453f-8847-aea133122a0a
            onError:
              - id: 9bfb8b3e-4352-485b-ba4c-a28e48aaf4ad
                message: "{{getCohortAnalytics.error}}"
                style: error
                type: showAlert
          5b8f684e-e555-466f-b8d7-b0dace5ed67f:
            dynamicTriggerPathList:
              - key: onError
            id: 5b8f684e-e555-466f-b8d7-b0dace5ed67f
            onError:
              - id: 34b91b8f-ec82-4bcf-9d93-06c48f981072
                message: "{{getPreviousBillings.error}}"
                style: error
                type: showAlert
          6674c23c-742b-480d-a4c9-f9d0ef5468c7:
            dynamicTriggerPathList:
              - key: onError
            id: 6674c23c-742b-480d-a4c9-f9d0ef5468c7
            onError:
              - id: a728c26d-cf4c-4356-b57c-b989fc37fe50
                message: "{{getReimbursementsLastMonth.error}}"
                style: error
                type: showAlert
          84531c23-ed63-470b-ab92-08ed55b3479f:
            dynamicTriggerPathList:
              - key: onError
            id: 84531c23-ed63-470b-ab92-08ed55b3479f
            onError:
              - id: 3d2751dd-0198-4e2e-9910-9ab95fb30405
                message: "{{getMismatchedPatients.error}}"
                style: error
                type: showAlert
          9099632c-c3db-45b1-a6e4-080b92378c90:
            dynamicTriggerPathList:
              - key: onError
            id: 9099632c-c3db-45b1-a6e4-080b92378c90
            onError:
              - id: afdfb1cc-f507-4d4d-b49e-c4ae995d5647
                message: "{{getNormalizedBillingCodes.error}}"
                style: error
                type: showAlert
          a4f6e0f9-11e0-46d6-90c1-d09608672ffa:
            dynamicTriggerPathList:
              - key: onError
            id: a4f6e0f9-11e0-46d6-90c1-d09608672ffa
            onError:
              - id: 2ca1443c-24ca-4616-9b49-eba46dd055c9
                message: "{{getReimbursementsAll.error}}"
                style: error
                type: showAlert
          a5ff7866-e20b-4759-b6d6-bb4fd83069ec:
            dynamicTriggerPathList:
              - key: onError
            id: a5ff7866-e20b-4759-b6d6-bb4fd83069ec
            onError:
              - id: eb2f4a49-b850-4efd-8ef9-2e3af4467215
                message: "{{getAllPreviousBillings.error}}"
                style: error
                type: showAlert
          a9cbff11-0f2b-4a85-ac18-df6180c0ff77:
            dynamicTriggerPathList:
              - key: onError
            id: a9cbff11-0f2b-4a85-ac18-df6180c0ff77
            onError:
              - id: 27ac4f2c-2926-4899-b814-84a3abcd487d
                message: "{{getNormalizedBillingCharges.error}}"
                style: error
                type: showAlert
          c26f72c4-b312-4a2a-8057-b0e4f31e646f:
            dynamicTriggerPathList:
              - key: onError
            id: c26f72c4-b312-4a2a-8057-b0e4f31e646f
            onError:
              - id: 3a998ec2-0144-404d-b3d5-afbba964fa9e
                message: "{{getCustomers.error}}"
                style: error
                type: showAlert
          d1f16cf9-214f-41fc-a8a1-54bc1b6020ea:
            dynamicTriggerPathList:
              - key: onError
            id: d1f16cf9-214f-41fc-a8a1-54bc1b6020ea
            onError:
              - id: 9efe3b97-60f8-4c37-a943-7638782131a6
                message: "{{getNew99453_99454Billings.error}}"
                style: error
                type: showAlert
          d2ffc3cd-ca90-4822-9e24-f0d4fb593586:
            dynamicTriggerPathList:
              - key: onError
            id: d2ffc3cd-ca90-4822-9e24-f0d4fb593586
            onError:
              - id: f1b3d2d9-9c36-49e5-b8cf-774411db7e2a
                message: "{{getInvoice.error}}"
                style: error
                type: showAlert
          fff07e9d-a036-4aec-9685-9411004aecb4:
            dynamicTriggerPathList:
              - key: onError
            id: fff07e9d-a036-4aec-9685-9411004aecb4
            onError:
              - id: 718c7b34-1ad6-428b-8381-fd18d76e476c
                message: "{{API2.error}}"
                style: error
                type: showAlert
      backgroundColor: none
      cachedData:
        pageLoadActions:
          apiDeps:
            API2: []
            getAllPreviousBillings: []
            getCohortAnalytics: []
            getCustomers: []
            getMismatchedPatients: []
            getNew99453_99454Billings:
              - getCustomers
            getNew99457_99458Billings:
              - getCustomers
            getNormalizedBillingCharges: []
            getNormalizedBillingCodes: []
            getPreviousBillings: []
            getReimbursementsCurrentMonth: []
            getReimbursementsLastMonth: []
          apiNames:
            - getCustomers
            - getAllPreviousBillings
            - getNormalizedBillingCodes
            - getNew99453_99454Billings
            - getPreviousBillings
            - getMismatchedPatients
            - getNew99457_99458Billings
            - getCohortAnalytics
            - getNormalizedBillingCharges
            - API2
            - getReimbursementsCurrentMonth
            - getReimbursementsLastMonth
      canExtend: true
      children:
        - canExtend: true
          children:
            - backgroundColor: none
              canExtend: true
              children:
                - animateLoading: true
                  cachedColumnSettings:
                    CPT_Code:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_Code })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CPT_Code
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: CPT_Code
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_Code })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_Code })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    FIRST_READING_DATE:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FIRST_READING_DATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: FIRST_READING_DATE
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: FIRST_READING_DATE
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FIRST_READING_DATE })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FIRST_READING_DATE })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    FIRST_READING_SINCE_LAST_DOS:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FIRST_READING_SINCE_LAST_DOS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: FIRST_READING_SINCE_LAST_DOS
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: FIRST_READING_SINCE_LAST_DOS
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FIRST_READING_SINCE_LAST_DOS })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FIRST_READING_SINCE_LAST_DOS })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LAST_BILLED:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_BILLED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LAST_BILLED
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: LAST_BILLED
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_BILLED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_BILLED })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LAST_BILLED_DATE:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_BILLED_DATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LAST_BILLED_DATE
                      index: 6
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: LAST_BILLED_DATE
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_BILLED_DATE })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_BILLED_DATE })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LAST_READING_IN_BILLING_WINDOW:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_READING_IN_BILLING_WINDOW })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LAST_READING_IN_BILLING_WINDOW
                      index: 7
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: LAST_READING_IN_BILLING_WINDOW
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_READING_IN_BILLING_WINDOW })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_READING_IN_BILLING_WINDOW })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LATEST_READING_DATE:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LATEST_READING_DATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LATEST_READING_DATE
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: LATEST_READING_DATE
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LATEST_READING_DATE })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LATEST_READING_DATE })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    NUMBER_OF_DAYS_WITH_READINGS:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NUMBER_OF_DAYS_WITH_READINGS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: NUMBER_OF_DAYS_WITH_READINGS
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: NUMBER_OF_DAYS_WITH_READINGS
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NUMBER_OF_DAYS_WITH_READINGS })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NUMBER_OF_DAYS_WITH_READINGS })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    OUTSTANDING_BALANCE_FROM_LAST_BILLING:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.OUTSTANDING_BALANCE_FROM_LAST_BILLING })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: OUTSTANDING_BALANCE_FROM_LAST_BILLING
                      index: 10
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: OUTSTANDING_BALANCE_FROM_LAST_BILLING
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.OUTSTANDING_BALANCE_FROM_LAST_BILLING })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.OUTSTANDING_BALANCE_FROM_LAST_BILLING })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    READING_DAYS:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: READING_DAYS
                      index: 15
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: READING_DAYS
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  columnOrder:
                    - CUSTOMER_FACILITY
                    - PATIENT_FIRST_NAME
                    - PATIENT_LAST_NAME
                    - PATIENT_DOB
                    - CPT_CODE
                    - DATE_OF_SERVICE
                    - VISITING_PROVIDER
                    - CARE_NAVIGATOR
                    - CARE_SERVICES
                    - CUSTOMER
                    - CCM_PAYER
                    - CCM_STAGE
                    - CREATED_ON
                    - LEADSQUARED_ID
                    - LEAD_STAGE
                    - LEAD_TYPE
                    - PATIENT_INDIVIDUAL_ID
                    - RPM_PAYER
                    - RPM_STAGE
                    - WELLNESS_PAYER
                    - WELLNESS_STAGE
                  columnSizeMap:
                    CPT_CODE: 60
                    CUSTOMER_FACILITY: 167.32943315085777
                    DATE_OF_SERVICE: 86.25925925925927
                    PATIENT_DOB: 75.3626011786821
                    PATIENT_FIRST_NAME: 86
                    PATIENT_LAST_NAME: 64
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  defaultSort:
                    column: DATE_OF_SERVICE
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: tableData
                    - key: primaryColumns.CUSTOMER.computedValue
                    - key: primaryColumns.CUSTOMER.linkUrl
                    - key: primaryColumns.CUSTOMER.linkLabel
                    - key: primaryColumns.DATE_OF_SERVICE.computedValue
                    - key: primaryColumns.DATE_OF_SERVICE.linkUrl
                    - key: primaryColumns.DATE_OF_SERVICE.linkLabel
                    - key: primaryColumns.PATIENT_DOB.computedValue
                    - key: primaryColumns.PATIENT_DOB.linkUrl
                    - key: primaryColumns.PATIENT_DOB.linkLabel
                    - key: primaryColumns.PATIENT_FIRST_NAME.computedValue
                    - key: primaryColumns.PATIENT_FIRST_NAME.linkUrl
                    - key: primaryColumns.PATIENT_FIRST_NAME.linkLabel
                    - key: primaryColumns.PATIENT_LAST_NAME.computedValue
                    - key: primaryColumns.PATIENT_LAST_NAME.linkUrl
                    - key: primaryColumns.PATIENT_LAST_NAME.linkLabel
                    - key: primaryColumns.CPT_CODE.computedValue
                    - key: primaryColumns.CPT_CODE.linkUrl
                    - key: primaryColumns.CPT_CODE.linkLabel
                    - key: primaryColumns.CARE_SERVICES.computedValue
                    - key: primaryColumns.CARE_SERVICES.linkUrl
                    - key: primaryColumns.CARE_SERVICES.linkLabel
                    - key: primaryColumns.CCM_PAYER.computedValue
                    - key: primaryColumns.CCM_PAYER.linkUrl
                    - key: primaryColumns.CCM_PAYER.linkLabel
                    - key: primaryColumns.CCM_STAGE.computedValue
                    - key: primaryColumns.CCM_STAGE.linkUrl
                    - key: primaryColumns.CCM_STAGE.linkLabel
                    - key: primaryColumns.CREATED_ON.computedValue
                    - key: primaryColumns.CREATED_ON.linkUrl
                    - key: primaryColumns.CREATED_ON.linkLabel
                    - key: primaryColumns.CUSTOMER_FACILITY.computedValue
                    - key: primaryColumns.CUSTOMER_FACILITY.linkUrl
                    - key: primaryColumns.CUSTOMER_FACILITY.linkLabel
                    - key: primaryColumns.LEADSQUARED_ID.computedValue
                    - key: primaryColumns.LEADSQUARED_ID.linkUrl
                    - key: primaryColumns.LEADSQUARED_ID.linkLabel
                    - key: primaryColumns.LEAD_STAGE.computedValue
                    - key: primaryColumns.LEAD_STAGE.linkUrl
                    - key: primaryColumns.LEAD_STAGE.linkLabel
                    - key: primaryColumns.LEAD_TYPE.computedValue
                    - key: primaryColumns.LEAD_TYPE.linkUrl
                    - key: primaryColumns.LEAD_TYPE.linkLabel
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkUrl
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkLabel
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.computedValue
                    - key: primaryColumns.RPM_PAYER.computedValue
                    - key: primaryColumns.RPM_PAYER.linkUrl
                    - key: primaryColumns.RPM_PAYER.linkLabel
                    - key: primaryColumns.RPM_STAGE.computedValue
                    - key: primaryColumns.RPM_STAGE.linkUrl
                    - key: primaryColumns.RPM_STAGE.linkLabel
                    - key: primaryColumns.VISITING_PROVIDER.computedValue
                    - key: primaryColumns.VISITING_PROVIDER.linkUrl
                    - key: primaryColumns.VISITING_PROVIDER.linkLabel
                    - key: primaryColumns.WELLNESS_PAYER.computedValue
                    - key: primaryColumns.WELLNESS_PAYER.linkUrl
                    - key: primaryColumns.WELLNESS_PAYER.linkLabel
                    - key: primaryColumns.WELLNESS_STAGE.computedValue
                    - key: primaryColumns.WELLNESS_STAGE.linkUrl
                    - key: primaryColumns.WELLNESS_STAGE.linkLabel
                    - key: primaryColumns.CARE_NAVIGATOR.computedValue
                    - key: primaryColumns.CARE_NAVIGATOR.linkUrl
                    - key: primaryColumns.CARE_NAVIGATOR.linkLabel
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 32
                  height:
                    mode: gridUnit
                    value: 39
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: true
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 0
                  onCancelChanges:
                    - id: q4snykv6oq
                      newWindow: true
                  onRowClicked:
                    - id: ix8fhskv62
                      newWindow: true
                  onSaveChanges:
                    - id: rn229zaaj2
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    CARE_NAVIGATOR:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_NAVIGATOR })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CARE_NAVIGATOR
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CARE_NAVIGATOR
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_NAVIGATOR })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_NAVIGATOR })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CARE_SERVICES:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_SERVICES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CARE_SERVICES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CARE_SERVICES
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_SERVICES })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_SERVICES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CCM_PAYER:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CCM_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CCM_PAYER
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_PAYER })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CCM_STAGE:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CCM_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CCM_STAGE
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_STAGE })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CPT_CODE:
                      columnType: number
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_CODE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: CPT_CODE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: CPT
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_CODE })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_CODE })}}"
                      notation: unformatted
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CREATED_ON:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CREATED_ON })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CREATED_ON
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CREATED_ON
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CREATED_ON })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CREATED_ON })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CUSTOMER:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CUSTOMER
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CUSTOMER
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CUSTOMER_FACILITY:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER_FACILITY })}}"
                      enableFilter: true
                      enableSort: true
                      fontStyle: ITALIC
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: CUSTOMER_FACILITY
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 6
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Facility
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER_FACILITY })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER_FACILITY })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    DATE_OF_SERVICE:
                      columnType: date
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DATE_OF_SERVICE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: DATE_OF_SERVICE
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: DoS
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DATE_OF_SERVICE })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DATE_OF_SERVICE })}}"
                      notation: standard
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEADSQUARED_ID:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEADSQUARED_ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEADSQUARED_ID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LEADSQUARED_ID
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEADSQUARED_ID })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEADSQUARED_ID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEAD_STAGE:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEAD_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LEAD_STAGE
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_STAGE })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEAD_TYPE:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_TYPE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEAD_TYPE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 10
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LEAD_TYPE
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_TYPE })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_TYPE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_DOB:
                      columnType: date
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: PATIENT_DOB
                      index: 11
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: DOB
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      notation: standard
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_FIRST_NAME:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: PATIENT_FIRST_NAME
                      index: 12
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: First
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_INDIVIDUAL_ID:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_INDIVIDUAL_ID
                      index: 13
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PATIENT_INDIVIDUAL_ID
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_LAST_NAME:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_LAST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      fontStyle: BOLD
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_LAST_NAME
                      index: 14
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Last
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_LAST_NAME })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_LAST_NAME })}}"
                      notation: standard
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    RPM_PAYER:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: RPM_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 15
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: RPM_PAYER
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_PAYER })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    RPM_STAGE:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: RPM_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 16
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: RPM_STAGE
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_STAGE })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    VISITING_PROVIDER:
                      columnType: tags
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.VISITING_PROVIDER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: VISITING_PROVIDER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 17
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Provider
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.VISITING_PROVIDER })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.VISITING_PROVIDER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    WELLNESS_PAYER:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: WELLNESS_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 18
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: WELLNESS_PAYER
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_PAYER })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    WELLNESS_STAGE:
                      columnType: text
                      computedValue: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: WELLNESS_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 19
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: WELLNESS_STAGE
                      linkLabel: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_STAGE })}}"
                      linkUrl: "{{RPMCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  tableData: "{{getNew99453_99454Billings.response}}"
                  tableHeader: RPM Data CPT Codes
                  textSize: PARAGRAPH2
                  top:
                    mode: gridUnit
                    value: 68
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: l3g3jphr1t
                  widgetName: RPMCPTCodes
                  width:
                    mode: gridUnit
                    value: 32
                - allowClearing: false
                  animateLoading: true
                  defaultOptionValue: Segue Health
                  dynamicBindingPathList:
                    - key: options
                  dynamicTriggerPathList:
                    - key: onOptionChange
                    - key: onSearchTextChange
                    - key: onClear
                  gridColumns: 19
                  height:
                    mode: gridUnit
                    value: 3
                  isLoading: false
                  isMultiple: false
                  isVertical: false
                  isVisible: true
                  label: Customer
                  left:
                    mode: gridUnit
                    value: 33
                  onClear:
                    - id: tty778cpph
                      newWindow: true
                  onOptionChange:
                    - apiNames:
                        - getNormalizedBillingCharges
                      id: bf1p4s45wk
                      newWindow: true
                      type: executeApi
                  onSearchTextChange:
                    - id: yhmg2aimkp
                      newWindow: true
                  options: "{{getCustomers.response}}"
                  parentId: dwpvpsnarl
                  placeholderText: Select an option
                  top:
                    mode: gridUnit
                    value: 1
                  type: DROP_DOWN_WIDGET
                  widgetId: ob48bicm6m
                  widgetName: Customer
                  width:
                    mode: gridUnit
                    value: 19
                - animateLoading: true
                  cachedColumnSettings:
                    CPT_Code:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_Code })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: CPT_Code
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: CPT Code
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_Code })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_Code })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  columnOrder:
                    - CPT_CODE
                    - PATIENT_FIRST_NAME
                    - PATIENT_LAST_NAME
                    - PATIENT_DOB
                    - MATCHED_CUSTOMER
                    - DATE_OF_SERVICE
                    - CUSTOMER
                    - MATCHING_ON_NAME_WITHOUT_DOB
                    - PATIENT_INDIVIDUAL_ID
                  columnSizeMap:
                    CPT_Code: 109
                    DATE_OF_SERVICE: 140
                    MATCHING_ON_NAME_WITHOUT_DOB: 285.9071180555556
                    PATIENT_DOB: 106
                    PATIENT_FIRST_NAME: 126
                    PATIENT_LAST_NAME: 124
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: tableData
                    - key: primaryColumns.DATE_OF_SERVICE.computedValue
                    - key: primaryColumns.DATE_OF_SERVICE.linkUrl
                    - key: primaryColumns.DATE_OF_SERVICE.linkLabel
                    - key: primaryColumns.PATIENT_DOB.computedValue
                    - key: primaryColumns.PATIENT_DOB.linkUrl
                    - key: primaryColumns.PATIENT_DOB.linkLabel
                    - key: primaryColumns.PATIENT_FIRST_NAME.computedValue
                    - key: primaryColumns.PATIENT_FIRST_NAME.linkUrl
                    - key: primaryColumns.PATIENT_FIRST_NAME.linkLabel
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.computedValue
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkUrl
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkLabel
                    - key: primaryColumns.PATIENT_LAST_NAME.computedValue
                    - key: primaryColumns.PATIENT_LAST_NAME.linkUrl
                    - key: primaryColumns.PATIENT_LAST_NAME.linkLabel
                    - key: primaryColumns.CUSTOMER.computedValue
                    - key: primaryColumns.CUSTOMER.linkUrl
                    - key: primaryColumns.CUSTOMER.linkLabel
                    - key: primaryColumns.MATCHING_ON_NAME_WITHOUT_DOB.computedValue
                    - key: primaryColumns.MATCHING_ON_NAME_WITHOUT_DOB.linkUrl
                    - key: primaryColumns.MATCHING_ON_NAME_WITHOUT_DOB.linkLabel
                    - key: primaryColumns.CPT_CODE.computedValue
                    - key: primaryColumns.CPT_CODE.linkUrl
                    - key: primaryColumns.CPT_CODE.linkLabel
                    - key: primaryColumns.MATCHED_CUSTOMER.computedValue
                    - key: primaryColumns.MATCHED_CUSTOMER.linkUrl
                    - key: primaryColumns.MATCHED_CUSTOMER.linkLabel
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 46
                  height:
                    mode: gridUnit
                    value: 62
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: false
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 0
                  onCancelChanges:
                    - id: srsqqecmb6
                      newWindow: true
                  onRowClicked:
                    - id: skbaxez4q5
                      newWindow: true
                  onSaveChanges:
                    - id: thl879benr
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    CPT_CODE:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_CODE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CPT_CODE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: CPT_CODE
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_CODE })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_CODE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CUSTOMER:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CUSTOMER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Customer
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    DATE_OF_SERVICE:
                      columnType: date
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DATE_OF_SERVICE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: DATE_OF_SERVICE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Date of Service
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DATE_OF_SERVICE })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DATE_OF_SERVICE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MATCHED_CUSTOMER:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MATCHED_CUSTOMER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MATCHED_CUSTOMER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: MATCHED_CUSTOMER
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MATCHED_CUSTOMER })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MATCHED_CUSTOMER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MATCHING_ON_NAME_WITHOUT_DOB:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MATCHING_ON_NAME_WITHOUT_DOB })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MATCHING_ON_NAME_WITHOUT_DOB
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: MATCHING_ON_NAME_WITHOUT_DOB
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MATCHING_ON_NAME_WITHOUT_DOB })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MATCHING_ON_NAME_WITHOUT_DOB })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_DOB:
                      columnType: date
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: PATIENT_DOB
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: DOB
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_FIRST_NAME:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: PATIENT_FIRST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: First
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_INDIVIDUAL_ID:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_INDIVIDUAL_ID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PATIENT_INDIVIDUAL_ID
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_LAST_NAME:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_LAST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_LAST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Last
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_LAST_NAME })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_LAST_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  tableData: "{{getMismatchedPatients.response}}"
                  tableHeader: Mismatched Billings
                  textSize: PARAGRAPH
                  top:
                    mode: gridUnit
                    value: 157
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: 19xjfm29rb
                  widgetName: Table1
                  width:
                    mode: gridUnit
                    value: 46
                - animateLoading: true
                  cachedColumnSettings:
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  columnOrder:
                    - NAME
                    - DOB
                    - ADJS
                    - BALANCE
                    - CHARGES
                    - ID
                    - ORIGINAL_BILL_DATE
                    - PAID
                    - PRIMARY_PAYER
                    - PROCEDURE
                    - RENDERING_PROVIDER
                    - SECONDARY_PAYER
                    - SERVICE_DATE
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: tableData
                    - key: primaryColumns.ADJS.computedValue
                    - key: primaryColumns.ADJS.linkUrl
                    - key: primaryColumns.ADJS.linkLabel
                    - key: primaryColumns.BALANCE.computedValue
                    - key: primaryColumns.BALANCE.linkUrl
                    - key: primaryColumns.BALANCE.linkLabel
                    - key: primaryColumns.CHARGES.computedValue
                    - key: primaryColumns.CHARGES.linkUrl
                    - key: primaryColumns.CHARGES.linkLabel
                    - key: primaryColumns.DOB.computedValue
                    - key: primaryColumns.DOB.linkUrl
                    - key: primaryColumns.DOB.linkLabel
                    - key: primaryColumns.ID.computedValue
                    - key: primaryColumns.ID.linkUrl
                    - key: primaryColumns.ID.linkLabel
                    - key: primaryColumns.NAME.computedValue
                    - key: primaryColumns.NAME.linkUrl
                    - key: primaryColumns.NAME.linkLabel
                    - key: primaryColumns.ORIGINAL_BILL_DATE.computedValue
                    - key: primaryColumns.ORIGINAL_BILL_DATE.linkUrl
                    - key: primaryColumns.ORIGINAL_BILL_DATE.linkLabel
                    - key: primaryColumns.PAID.computedValue
                    - key: primaryColumns.PAID.linkUrl
                    - key: primaryColumns.PAID.linkLabel
                    - key: primaryColumns.PRIMARY_PAYER.computedValue
                    - key: primaryColumns.PRIMARY_PAYER.linkUrl
                    - key: primaryColumns.PRIMARY_PAYER.linkLabel
                    - key: primaryColumns.PROCEDURE.computedValue
                    - key: primaryColumns.PROCEDURE.linkUrl
                    - key: primaryColumns.PROCEDURE.linkLabel
                    - key: primaryColumns.RENDERING_PROVIDER.computedValue
                    - key: primaryColumns.RENDERING_PROVIDER.linkUrl
                    - key: primaryColumns.RENDERING_PROVIDER.linkLabel
                    - key: primaryColumns.SECONDARY_PAYER.computedValue
                    - key: primaryColumns.SECONDARY_PAYER.linkUrl
                    - key: primaryColumns.SECONDARY_PAYER.linkLabel
                    - key: primaryColumns.SERVICE_DATE.computedValue
                    - key: primaryColumns.SERVICE_DATE.linkUrl
                    - key: primaryColumns.SERVICE_DATE.linkLabel
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 49
                  height:
                    mode: gridUnit
                    value: 62
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: false
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 47
                  onCancelChanges:
                    - id: v2p41psk9i
                      newWindow: true
                  onRowClicked:
                    - id: wi77ghd3xg
                      newWindow: true
                  onSaveChanges:
                    - id: vzugzstyy0
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    ADJS:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ADJS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: ADJS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: ADJS
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ADJS })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ADJS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    BALANCE:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.BALANCE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: BALANCE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: BALANCE
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.BALANCE })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.BALANCE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CHARGES:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CHARGES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CHARGES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CHARGES
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CHARGES })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CHARGES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    DOB:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DOB })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: DOB
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: DOB
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DOB })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DOB })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    ID:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: ID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: ID
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ID })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    NAME:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NAME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: NAME
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NAME })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    ORIGINAL_BILL_DATE:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ORIGINAL_BILL_DATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: ORIGINAL_BILL_DATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 6
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: ORIGINAL_BILL_DATE
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ORIGINAL_BILL_DATE })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ORIGINAL_BILL_DATE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PAID:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PAID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PAID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 7
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PAID
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PAID })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PAID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PRIMARY_PAYER:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PRIMARY_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PRIMARY_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PRIMARY_PAYER
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PRIMARY_PAYER })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PRIMARY_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROCEDURE:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROCEDURE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PROCEDURE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PROCEDURE
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROCEDURE })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROCEDURE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    RENDERING_PROVIDER:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RENDERING_PROVIDER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: RENDERING_PROVIDER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 10
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: RENDERING_PROVIDER
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RENDERING_PROVIDER })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RENDERING_PROVIDER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    SECONDARY_PAYER:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.SECONDARY_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: SECONDARY_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 11
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: SECONDARY_PAYER
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.SECONDARY_PAYER })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.SECONDARY_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    SERVICE_DATE:
                      columnType: text
                      computedValue: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.SERVICE_DATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: SERVICE_DATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 12
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: SERVICE_DATE
                      linkLabel: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.SERVICE_DATE })}}"
                      linkUrl: "{{Table2.tableDataWithInserts.map((currentRow) => { return
                        currentRow.SERVICE_DATE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  tableData: "{{getPreviousBillings.response}}"
                  tableHeader: ""
                  textSize: PARAGRAPH
                  top:
                    mode: gridUnit
                    value: 157
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: 8k9nsdlcz2
                  widgetName: Table2
                  width:
                    mode: gridUnit
                    value: 49
                - animateLoading: true
                  cachedColumnSettings:
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  columnOrder:
                    - CUSTOMER_FACILITY
                    - PATIENT_FIRST_NAME
                    - PATIENT_LAST_NAME
                    - PATIENT_DOB
                    - CPT_Code
                    - DATE_OF_SERVICE
                    - VISITING_PROVIDER
                    - CARE_NAVIGATOR
                    - CARE_SERVICES
                    - CCM_PAYER
                    - CCM_STAGE
                    - CREATED_ON
                    - CUSTOMER
                    - LEADSQUARED_ID
                    - LEAD_STAGE
                    - LEAD_TYPE
                    - PATIENT_INDIVIDUAL_ID
                    - RPM_PAYER
                    - RPM_STAGE
                    - WELLNESS_PAYER
                    - WELLNESS_STAGE
                  columnSizeMap:
                    CPT_Code: 66
                    CUSTOMER_FACILITY: 232
                    DATE_OF_SERVICE: 90
                    PATIENT_DOB: 95
                    PATIENT_FIRST_NAME: 104
                    PATIENT_LAST_NAME: 88
                    VISITING_PROVIDER: 115
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  defaultSort:
                    column: PATIENT_LAST_NAME
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: tableData
                    - key: primaryColumns.CARE_SERVICES.computedValue
                    - key: primaryColumns.CARE_SERVICES.linkUrl
                    - key: primaryColumns.CARE_SERVICES.linkLabel
                    - key: primaryColumns.CCM_PAYER.computedValue
                    - key: primaryColumns.CCM_PAYER.linkUrl
                    - key: primaryColumns.CCM_PAYER.linkLabel
                    - key: primaryColumns.CCM_STAGE.computedValue
                    - key: primaryColumns.CCM_STAGE.linkUrl
                    - key: primaryColumns.CCM_STAGE.linkLabel
                    - key: primaryColumns.CREATED_ON.computedValue
                    - key: primaryColumns.CREATED_ON.linkUrl
                    - key: primaryColumns.CREATED_ON.linkLabel
                    - key: primaryColumns.CUSTOMER.computedValue
                    - key: primaryColumns.CUSTOMER.linkUrl
                    - key: primaryColumns.CUSTOMER.linkLabel
                    - key: primaryColumns.CUSTOMER_FACILITY.computedValue
                    - key: primaryColumns.CUSTOMER_FACILITY.linkUrl
                    - key: primaryColumns.CUSTOMER_FACILITY.linkLabel
                    - key: primaryColumns.DATE_OF_SERVICE.computedValue
                    - key: primaryColumns.DATE_OF_SERVICE.linkUrl
                    - key: primaryColumns.DATE_OF_SERVICE.linkLabel
                    - key: primaryColumns.LEADSQUARED_ID.computedValue
                    - key: primaryColumns.LEADSQUARED_ID.linkUrl
                    - key: primaryColumns.LEADSQUARED_ID.linkLabel
                    - key: primaryColumns.LEAD_STAGE.computedValue
                    - key: primaryColumns.LEAD_STAGE.linkUrl
                    - key: primaryColumns.LEAD_STAGE.linkLabel
                    - key: primaryColumns.LEAD_TYPE.computedValue
                    - key: primaryColumns.LEAD_TYPE.linkUrl
                    - key: primaryColumns.LEAD_TYPE.linkLabel
                    - key: primaryColumns.PATIENT_DOB.computedValue
                    - key: primaryColumns.PATIENT_DOB.linkUrl
                    - key: primaryColumns.PATIENT_DOB.linkLabel
                    - key: primaryColumns.PATIENT_FIRST_NAME.computedValue
                    - key: primaryColumns.PATIENT_FIRST_NAME.linkUrl
                    - key: primaryColumns.PATIENT_FIRST_NAME.linkLabel
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.computedValue
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkUrl
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkLabel
                    - key: primaryColumns.PATIENT_LAST_NAME.computedValue
                    - key: primaryColumns.PATIENT_LAST_NAME.linkUrl
                    - key: primaryColumns.PATIENT_LAST_NAME.linkLabel
                    - key: primaryColumns.RPM_PAYER.computedValue
                    - key: primaryColumns.RPM_PAYER.linkUrl
                    - key: primaryColumns.RPM_PAYER.linkLabel
                    - key: primaryColumns.RPM_STAGE.computedValue
                    - key: primaryColumns.RPM_STAGE.linkUrl
                    - key: primaryColumns.RPM_STAGE.linkLabel
                    - key: primaryColumns.VISITING_PROVIDER.computedValue
                    - key: primaryColumns.VISITING_PROVIDER.linkUrl
                    - key: primaryColumns.VISITING_PROVIDER.linkLabel
                    - key: primaryColumns.WELLNESS_PAYER.computedValue
                    - key: primaryColumns.WELLNESS_PAYER.linkUrl
                    - key: primaryColumns.WELLNESS_PAYER.linkLabel
                    - key: primaryColumns.WELLNESS_STAGE.computedValue
                    - key: primaryColumns.WELLNESS_STAGE.linkUrl
                    - key: primaryColumns.WELLNESS_STAGE.linkLabel
                    - key: primaryColumns.CPT_Code.computedValue
                    - key: primaryColumns.CPT_Code.linkUrl
                    - key: primaryColumns.CPT_Code.linkLabel
                    - key: primaryColumns.CARE_NAVIGATOR.computedValue
                    - key: primaryColumns.CARE_NAVIGATOR.linkUrl
                    - key: primaryColumns.CARE_NAVIGATOR.linkLabel
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 48
                  height:
                    mode: gridUnit
                    value: 39
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: true
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 33
                  onCancelChanges:
                    - id: 8idkvtd1xo
                      newWindow: true
                  onRowClicked:
                    - apiNames:
                        - getCohortAnalytics
                      id: 5yfuc7mtqo
                      name: Slideout1
                      newWindow: true
                      type: controlSlideout
                  onSaveChanges:
                    - id: u97s36snmo
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    CARE_NAVIGATOR:
                      columnType: tags
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_NAVIGATOR })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CARE_NAVIGATOR
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Care Navigator
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_NAVIGATOR })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_NAVIGATOR })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CARE_SERVICES:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_SERVICES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CARE_SERVICES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CARE_SERVICES
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_SERVICES })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_SERVICES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CCM_PAYER:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CCM_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CCM_PAYER
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_PAYER })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CCM_STAGE:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CCM_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CCM_STAGE
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_STAGE })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CPT_Code:
                      columnType: number
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_Code })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: CPT_Code
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: CPT
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_Code })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CPT_Code })}}"
                      notation: unformatted
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CREATED_ON:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CREATED_ON })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CREATED_ON
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CREATED_ON
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CREATED_ON })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CREATED_ON })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CUSTOMER:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CUSTOMER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CUSTOMER
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CUSTOMER_FACILITY:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER_FACILITY })}}"
                      enableFilter: true
                      enableSort: true
                      fontStyle: ITALIC
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: CUSTOMER_FACILITY
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 6
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Facility
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER_FACILITY })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER_FACILITY })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    DATE_OF_SERVICE:
                      columnType: date
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DATE_OF_SERVICE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: DATE_OF_SERVICE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 7
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: DoS
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DATE_OF_SERVICE })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DATE_OF_SERVICE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEADSQUARED_ID:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEADSQUARED_ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEADSQUARED_ID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LEADSQUARED_ID
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEADSQUARED_ID })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEADSQUARED_ID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEAD_STAGE:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEAD_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LEAD_STAGE
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_STAGE })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEAD_TYPE:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_TYPE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEAD_TYPE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 10
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LEAD_TYPE
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_TYPE })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_TYPE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_DOB:
                      columnType: date
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: PATIENT_DOB
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 11
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: DOB
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_FIRST_NAME:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      fontStyle: ""
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: PATIENT_FIRST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 12
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: First
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_INDIVIDUAL_ID:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_INDIVIDUAL_ID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 13
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PATIENT_INDIVIDUAL_ID
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_LAST_NAME:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_LAST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      fontStyle: BOLD
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_LAST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 14
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Last
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_LAST_NAME })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_LAST_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    RPM_PAYER:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: RPM_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 15
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: RPM_PAYER
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_PAYER })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    RPM_STAGE:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: RPM_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 16
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: RPM_STAGE
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_STAGE })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    VISITING_PROVIDER:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.VISITING_PROVIDER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: VISITING_PROVIDER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 17
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Provider
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.VISITING_PROVIDER })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.VISITING_PROVIDER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    WELLNESS_PAYER:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: WELLNESS_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 18
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: WELLNESS_PAYER
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_PAYER })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    WELLNESS_STAGE:
                      columnType: text
                      computedValue: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: WELLNESS_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 19
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: WELLNESS_STAGE
                      linkLabel: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_STAGE })}}"
                      linkUrl: "{{TimeCPTCodes.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  tableData: "{{getNew99457_99458Billings.response}}"
                  tableHeader: Time-Based CPT Codes
                  textSize: PARAGRAPH2
                  top:
                    mode: gridUnit
                    value: 68
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: ov2de2xpga
                  widgetName: TimeCPTCodes
                  width:
                    mode: gridUnit
                    value: 48
                - animateLoading: true
                  cachedColumnSettings:
                    MONTH:
                      columnType: text
                      computedValue: "{{Reimbursements.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTH })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: MONTH
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Month
                      linkLabel: "{{Reimbursements.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH })}}"
                      linkUrl: "{{Reimbursements.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_ADJUSTMENTS:
                      columnType: text
                      computedValue: "{{Reimbursements.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_ADJUSTMENTS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_ADJUSTMENTS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_ADJUSTMENTS
                      linkLabel: "{{Reimbursements.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_ADJUSTMENTS })}}"
                      linkUrl: "{{Reimbursements.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_ADJUSTMENTS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_BALANCE:
                      columnType: text
                      computedValue: "{{Reimbursements.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_BALANCE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_BALANCE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_BALANCE
                      linkLabel: "{{Reimbursements.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_BALANCE })}}"
                      linkUrl: "{{Reimbursements.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_BALANCE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    YEAR:
                      columnType: text
                      computedValue: "{{Reimbursements.tableDataWithInserts.map((currentRow) => {
                        return currentRow.YEAR })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: YEAR
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 7
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Year
                      linkLabel: "{{Reimbursements.tableDataWithInserts.map((currentRow) => { return
                        currentRow.YEAR })}}"
                      linkUrl: "{{Reimbursements.tableDataWithInserts.map((currentRow) => { return
                        currentRow.YEAR })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  collapseWhenHidden: false
                  columnOrder:
                    - CPT_CODE
                    - TOTAL_CHARGES
                    - TOTAL_PAYMENTS
                    - FEE
                    - ISTOTAL
                  columnSizeMap:
                    CPT_CODE: 108
                    FEE: 111
                    TOTAL_CHARGES: 118.53856790123456
                    TOTAL_PAYMENTS: 120
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  defaultSort:
                    asc: true
                    column: CPT_CODE
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: primaryColumns.FEE.computedValue
                    - key: primaryColumns.FEE.linkUrl
                    - key: primaryColumns.FEE.linkLabel
                    - key: primaryColumns.CPT_CODE.computedValue
                    - key: primaryColumns.CPT_CODE.linkUrl
                    - key: primaryColumns.CPT_CODE.linkLabel
                    - key: primaryColumns.TOTAL_PAYMENTS.computedValue
                    - key: primaryColumns.TOTAL_PAYMENTS.linkUrl
                    - key: primaryColumns.TOTAL_PAYMENTS.linkLabel
                    - key: primaryColumns.TOTAL_CHARGES.computedValue
                    - key: primaryColumns.TOTAL_CHARGES.linkUrl
                    - key: primaryColumns.TOTAL_CHARGES.linkLabel
                    - key: primaryColumns.ISTOTAL.computedValue
                    - key: primaryColumns.ISTOTAL.linkUrl
                    - key: primaryColumns.ISTOTAL.linkLabel
                    - key: tableData
                    - key: tableHeader
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 44
                  height:
                    mode: gridUnit
                    value: 33
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: false
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 0
                  onCancelChanges:
                    - id: 2a5rpdtm4l
                      newWindow: true
                  onRowClicked:
                    - id: 4nv6w891pn
                      newWindow: true
                  onSaveChanges:
                    - id: l95hhoqfc2
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    CPT_CODE:
                      columnType: text
                      computedValue: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow)
                        => { return currentRow.CPT_CODE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: CPT_CODE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Code
                      linkLabel: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CPT_CODE })}}"
                      linkUrl: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CPT_CODE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    FEE:
                      columnType: currency
                      computedValue: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow)
                        => { return currentRow.FEE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: FEE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 1TH Fee
                      linkLabel: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.FEE })}}"
                      linkUrl: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.FEE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    ISTOTAL:
                      columnType: text
                      computedValue: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow)
                        => { return currentRow.ISTOTAL })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: ISTOTAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: ISTOTAL
                      linkLabel: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ISTOTAL })}}"
                      linkUrl: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ISTOTAL })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_CHARGES:
                      columnType: currency
                      computedValue: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow)
                        => { return currentRow.TOTAL_CHARGES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_CHARGES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Charges
                      linkLabel: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_CHARGES })}}"
                      linkUrl: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_CHARGES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_PAYMENTS:
                      columnType: currency
                      computedValue: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow)
                        => { return currentRow.TOTAL_PAYMENTS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_PAYMENTS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Payments
                      linkLabel: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_PAYMENTS })}}"
                      linkUrl: "{{ReimbursementsLastMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_PAYMENTS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  tableData: "{{getReimbursementsLastMonth.response}}"
                  tableHeader: |-
                    {{(() => {
                      const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
                      const currentDate = new Date();
                      const previousMonthIndex = (currentDate.getMonth() - 1 + 12) % 12;
                      return months[previousMonthIndex];
                    })()}} Reimbursements
                  textSize: PARAGRAPH
                  top:
                    mode: gridUnit
                    value: 34
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: zfegwgz3nu
                  widgetName: ReimbursementsLastMonth
                  width:
                    mode: gridUnit
                    value: 44
                - animateLoading: true
                  cachedColumnSettings:
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  collapseWhenHidden: false
                  columnOrder:
                    - CPT_CODE
                    - TOTAL_CHARGES
                    - TOTAL_PAYMENTS
                    - FEE
                    - ISTOTAL
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: tableHeader
                    - key: tableData
                    - key: primaryColumns.CPT_CODE.computedValue
                    - key: primaryColumns.CPT_CODE.linkUrl
                    - key: primaryColumns.CPT_CODE.linkLabel
                    - key: primaryColumns.FEE.computedValue
                    - key: primaryColumns.FEE.linkUrl
                    - key: primaryColumns.FEE.linkLabel
                    - key: primaryColumns.ISTOTAL.computedValue
                    - key: primaryColumns.ISTOTAL.linkUrl
                    - key: primaryColumns.ISTOTAL.linkLabel
                    - key: primaryColumns.TOTAL_CHARGES.computedValue
                    - key: primaryColumns.TOTAL_CHARGES.linkUrl
                    - key: primaryColumns.TOTAL_CHARGES.linkLabel
                    - key: primaryColumns.TOTAL_PAYMENTS.computedValue
                    - key: primaryColumns.TOTAL_PAYMENTS.linkUrl
                    - key: primaryColumns.TOTAL_PAYMENTS.linkLabel
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 51
                  height:
                    mode: gridUnit
                    value: 33
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: false
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 45
                  onCancelChanges:
                    - id: 2u44j816v7
                      newWindow: true
                  onRowClicked:
                    - id: 30ehoeph8f
                      newWindow: true
                  onSaveChanges:
                    - id: b3czodgk6g
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    CPT_CODE:
                      columnType: text
                      computedValue: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow)
                        => { return currentRow.CPT_CODE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: CPT_CODE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Code
                      linkLabel: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CPT_CODE })}}"
                      linkUrl: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CPT_CODE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    FEE:
                      columnType: currency
                      computedValue: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow)
                        => { return currentRow.FEE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: FEE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 1TH Fee
                      linkLabel: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.FEE })}}"
                      linkUrl: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.FEE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    ISTOTAL:
                      columnType: text
                      computedValue: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow)
                        => { return currentRow.ISTOTAL })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: ISTOTAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: ISTOTAL
                      linkLabel: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ISTOTAL })}}"
                      linkUrl: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ISTOTAL })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_CHARGES:
                      columnType: currency
                      computedValue: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow)
                        => { return currentRow.TOTAL_CHARGES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_CHARGES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Charges
                      linkLabel: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_CHARGES })}}"
                      linkUrl: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_CHARGES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_PAYMENTS:
                      columnType: currency
                      computedValue: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow)
                        => { return currentRow.TOTAL_PAYMENTS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_PAYMENTS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Payments
                      linkLabel: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_PAYMENTS })}}"
                      linkUrl: "{{ReimbursementsThisMonth.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_PAYMENTS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  tableData: "{{getReimbursementsCurrentMonth.response}}"
                  tableHeader: |-
                    {{(() => {
                      const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
                      const currentDate = new Date();
                      const previousMonthIndex = (currentDate.getMonth() + 12) % 12;
                      return months[previousMonthIndex];
                    })()}} Reimbursements
                  textSize: PARAGRAPH
                  top:
                    mode: gridUnit
                    value: 34
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: ow7e5icoyx
                  widgetName: ReimbursementsThisMonth
                  width:
                    mode: gridUnit
                    value: 51
                - animateLoading: true
                  cachedColumnSettings:
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  collapseWhenHidden: false
                  columnOrder:
                    - NAME
                    - DOB
                    - PROCEDURE
                    - SERVICE_DATE
                    - ORIGINAL_BILL_DATE
                    - CHARGES
                    - ADJS
                    - PAID
                    - BALANCE
                    - RENDERING_PROVIDER
                    - PRIMARY_PAYER
                    - SECONDARY_PAYER
                    - ID
                  columnSizeMap:
                    ADJS: 70
                    BALANCE: 86
                    CHARGES: 85
                    DOB: 86
                    NAME: 148
                    ORIGINAL_BILL_DATE: 85
                    PAID: 77
                    PRIMARY_PAYER: 134
                    PROCEDURE: 69
                    RENDERING_PROVIDER: 127
                    SERVICE_DATE: 116
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: tableData
                    - key: primaryColumns.ADJS.computedValue
                    - key: primaryColumns.ADJS.linkUrl
                    - key: primaryColumns.ADJS.linkLabel
                    - key: primaryColumns.BALANCE.computedValue
                    - key: primaryColumns.BALANCE.linkUrl
                    - key: primaryColumns.BALANCE.linkLabel
                    - key: primaryColumns.CHARGES.computedValue
                    - key: primaryColumns.CHARGES.linkUrl
                    - key: primaryColumns.CHARGES.linkLabel
                    - key: primaryColumns.DOB.computedValue
                    - key: primaryColumns.DOB.linkUrl
                    - key: primaryColumns.DOB.linkLabel
                    - key: primaryColumns.ID.computedValue
                    - key: primaryColumns.ID.linkUrl
                    - key: primaryColumns.ID.linkLabel
                    - key: primaryColumns.NAME.computedValue
                    - key: primaryColumns.NAME.linkUrl
                    - key: primaryColumns.NAME.linkLabel
                    - key: primaryColumns.ORIGINAL_BILL_DATE.computedValue
                    - key: primaryColumns.ORIGINAL_BILL_DATE.linkUrl
                    - key: primaryColumns.ORIGINAL_BILL_DATE.linkLabel
                    - key: primaryColumns.PAID.computedValue
                    - key: primaryColumns.PAID.linkUrl
                    - key: primaryColumns.PAID.linkLabel
                    - key: primaryColumns.PRIMARY_PAYER.computedValue
                    - key: primaryColumns.PRIMARY_PAYER.linkUrl
                    - key: primaryColumns.PRIMARY_PAYER.linkLabel
                    - key: primaryColumns.PROCEDURE.computedValue
                    - key: primaryColumns.PROCEDURE.linkUrl
                    - key: primaryColumns.PROCEDURE.linkLabel
                    - key: primaryColumns.RENDERING_PROVIDER.computedValue
                    - key: primaryColumns.RENDERING_PROVIDER.linkUrl
                    - key: primaryColumns.RENDERING_PROVIDER.linkLabel
                    - key: primaryColumns.SECONDARY_PAYER.computedValue
                    - key: primaryColumns.SECONDARY_PAYER.linkUrl
                    - key: primaryColumns.SECONDARY_PAYER.linkLabel
                    - key: primaryColumns.SERVICE_DATE.computedValue
                    - key: primaryColumns.SERVICE_DATE.linkUrl
                    - key: primaryColumns.SERVICE_DATE.linkLabel
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 49
                  height:
                    mode: gridUnit
                    value: 48
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: true
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 0
                  onCancelChanges:
                    - id: 7qamncrzir
                      newWindow: true
                  onRowClicked:
                    - id: vplpdzymnv
                      newWindow: true
                  onSaveChanges:
                    - id: 453c139qq5
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    ADJS:
                      columnType: currency
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ADJS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: ADJS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Adj
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ADJS })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ADJS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    BALANCE:
                      columnType: currency
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.BALANCE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: BALANCE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Balance
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.BALANCE })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.BALANCE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CHARGES:
                      columnType: currency
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CHARGES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: CHARGES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Charges
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CHARGES })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CHARGES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    DOB:
                      columnType: text
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DOB })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: DOB
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: DOB
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DOB })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DOB })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    ID:
                      columnType: text
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: ID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: ID
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ID })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    NAME:
                      columnType: text
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.NAME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Patient Name
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NAME })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    ORIGINAL_BILL_DATE:
                      columnType: date
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ORIGINAL_BILL_DATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: ORIGINAL_BILL_DATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 6
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Bill Date
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ORIGINAL_BILL_DATE })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ORIGINAL_BILL_DATE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PAID:
                      columnType: currency
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PAID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: PAID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 7
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Payments
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PAID })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PAID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PRIMARY_PAYER:
                      columnType: text
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PRIMARY_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PRIMARY_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Primary Payer
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PRIMARY_PAYER })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PRIMARY_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROCEDURE:
                      columnType: text
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROCEDURE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: PROCEDURE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Code
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROCEDURE })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROCEDURE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    RENDERING_PROVIDER:
                      columnType: text
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.RENDERING_PROVIDER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: RENDERING_PROVIDER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 10
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Provider
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RENDERING_PROVIDER })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RENDERING_PROVIDER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    SECONDARY_PAYER:
                      columnType: text
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.SECONDARY_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: SECONDARY_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 11
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Secondary Payer
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.SECONDARY_PAYER })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.SECONDARY_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    SERVICE_DATE:
                      columnType: date
                      computedValue: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.SERVICE_DATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: SERVICE_DATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 12
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Date of Service
                      linkLabel: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.SERVICE_DATE })}}"
                      linkUrl: "{{BillingstoDate.tableDataWithInserts.map((currentRow) => { return
                        currentRow.SERVICE_DATE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  tableData: "{{getPreviousBillings.response}}"
                  tableHeader: Billings-to-date
                  textSize: PARAGRAPH2
                  top:
                    mode: gridUnit
                    value: 108
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: zy5zzetb71
                  widgetName: BillingstoDate
                  width:
                    mode: gridUnit
                    value: 49
                - animateLoading: true
                  cachedColumnSettings:
                    CPT_CODE:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.CPT_CODE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: CPT_CODE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Code
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CPT_CODE })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CPT_CODE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    FEE:
                      columnType: currency
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.FEE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: FEE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 1TH Fee
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.FEE })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.FEE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    ISTOTAL:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.ISTOTAL })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: ISTOTAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: ISTOTAL
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ISTOTAL })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ISTOTAL })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PAYMENT_PERCENTAGE:
                      columnType: number
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.PAYMENT_PERCENTAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PAYMENT_PERCENTAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 6
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: PAYMENT_PERCENTAGE
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PAYMENT_PERCENTAGE })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PAYMENT_PERCENTAGE })}}"
                      maximumFractionDigits: ""
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROCEDURE:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.PROCEDURE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PROCEDURE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PROCEDURE
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROCEDURE })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROCEDURE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_CHARGES:
                      columnType: currency
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.TOTAL_CHARGES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_CHARGES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Charges
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_CHARGES })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_CHARGES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_PAID:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.TOTAL_PAID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_PAID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 13
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_PAID
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_PAID })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_PAID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_PAYMENTS:
                      columnType: currency
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.TOTAL_PAYMENTS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_PAYMENTS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Payments
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_PAYMENTS })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_PAYMENTS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  collapseWhenHidden: false
                  columnOrder:
                    - PROC_CODE
                    - DOS
                    - CHARGES
                    - PATIENT_NAME
                    - PMT_DATE
                    - APPLIED
                    - ACCOUNT_
                    - CREATED_TIMESTAMP
                    - PMT_SOURCE
                    - REF_
                    - REIMBURSEMENT_RATE
                    - _
                    - _FIVETRAN_SYNCED
                    - _LINE
                  columnSizeMap:
                    APPLIED: 88
                    CHARGES: 75
                    DOS: 83
                    PATIENT_NAME: 154
                    PMT_DATE: 86
                    PROC_CODE: 66
                    REIMBURSEMENT_RATE: 120.8976078392094
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: tableData
                    - key: primaryColumns.APPLIED.computedValue
                    - key: primaryColumns.APPLIED.linkUrl
                    - key: primaryColumns.APPLIED.linkLabel
                    - key: primaryColumns.CHARGES.computedValue
                    - key: primaryColumns.CHARGES.linkUrl
                    - key: primaryColumns.CHARGES.linkLabel
                    - key: primaryColumns.DOS.computedValue
                    - key: primaryColumns.DOS.linkUrl
                    - key: primaryColumns.DOS.linkLabel
                    - key: primaryColumns.PATIENT_NAME.computedValue
                    - key: primaryColumns.PATIENT_NAME.linkUrl
                    - key: primaryColumns.PATIENT_NAME.linkLabel
                    - key: primaryColumns.PMT_DATE.computedValue
                    - key: primaryColumns.PMT_DATE.linkUrl
                    - key: primaryColumns.PMT_DATE.linkLabel
                    - key: primaryColumns.PMT_SOURCE.computedValue
                    - key: primaryColumns.PMT_SOURCE.linkUrl
                    - key: primaryColumns.PMT_SOURCE.linkLabel
                    - key: primaryColumns.PROC_CODE.computedValue
                    - key: primaryColumns.PROC_CODE.linkUrl
                    - key: primaryColumns.PROC_CODE.linkLabel
                    - key: primaryColumns.REF_.computedValue
                    - key: primaryColumns.REF_.linkUrl
                    - key: primaryColumns.REF_.linkLabel
                    - key: primaryColumns._.computedValue
                    - key: primaryColumns._.linkUrl
                    - key: primaryColumns._.linkLabel
                    - key: primaryColumns._FIVETRAN_SYNCED.computedValue
                    - key: primaryColumns._FIVETRAN_SYNCED.linkUrl
                    - key: primaryColumns._FIVETRAN_SYNCED.linkLabel
                    - key: primaryColumns._LINE.computedValue
                    - key: primaryColumns._LINE.linkUrl
                    - key: primaryColumns._LINE.linkLabel
                    - key: primaryColumns.ACCOUNT_.computedValue
                    - key: primaryColumns.ACCOUNT_.linkUrl
                    - key: primaryColumns.ACCOUNT_.linkLabel
                    - key: primaryColumns.CREATED_TIMESTAMP.computedValue
                    - key: primaryColumns.CREATED_TIMESTAMP.linkUrl
                    - key: primaryColumns.CREATED_TIMESTAMP.linkLabel
                    - key: primaryColumns.REIMBURSEMENT_RATE.computedValue
                    - key: primaryColumns.REIMBURSEMENT_RATE.linkUrl
                    - key: primaryColumns.REIMBURSEMENT_RATE.linkLabel
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 46
                  height:
                    mode: gridUnit
                    value: 48
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: false
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 50
                  onCancelChanges:
                    - id: 6kr6pyz2c7
                      newWindow: true
                  onRowClicked:
                    - id: od8dz5mfli
                      newWindow: true
                  onSaveChanges:
                    - id: f3e6gxsqj9
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    ACCOUNT_:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.ACCOUNT_ })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: ACCOUNT_
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: ACCOUNT_
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ACCOUNT_ })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ACCOUNT_ })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    APPLIED:
                      columnType: currency
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.APPLIED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: APPLIED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Payment
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.APPLIED })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.APPLIED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CHARGES:
                      columnType: currency
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.CHARGES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: CHARGES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Charge
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CHARGES })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CHARGES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CREATED_TIMESTAMP:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.CREATED_TIMESTAMP })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CREATED_TIMESTAMP
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CREATED_TIMESTAMP
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CREATED_TIMESTAMP })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CREATED_TIMESTAMP })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    DOS:
                      columnType: date
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.DOS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: DOS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: DOS
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DOS })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DOS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_NAME:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.PATIENT_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Patient
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_NAME })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PMT_DATE:
                      columnType: date
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.PMT_DATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: PMT_DATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Pmt Date
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PMT_DATE })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PMT_DATE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PMT_SOURCE:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.PMT_SOURCE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PMT_SOURCE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Payer
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PMT_SOURCE })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PMT_SOURCE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROC_CODE:
                      columnType: number
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.PROC_CODE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: CENTER
                      id: PROC_CODE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 6
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Code
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROC_CODE })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROC_CODE })}}"
                      notation: unformatted
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    REF_:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.REF_ })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: REF_
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 7
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: REF_
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.REF_ })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.REF_ })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    REIMBURSEMENT_RATE:
                      columnType: percentage
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow.REIMBURSEMENT_RATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: REIMBURSEMENT_RATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 10
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: "% Reimbursed"
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.REIMBURSEMENT_RATE })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow.REIMBURSEMENT_RATE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    _:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow._ })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: _
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: _
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow._ })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow._ })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    _FIVETRAN_SYNCED:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow._FIVETRAN_SYNCED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: _FIVETRAN_SYNCED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: _FIVETRAN_SYNCED
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow._FIVETRAN_SYNCED })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow._FIVETRAN_SYNCED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    _LINE:
                      columnType: text
                      computedValue: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) =>
                        { return currentRow._LINE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: _LINE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 10
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: _LINE
                      linkLabel: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow._LINE })}}"
                      linkUrl: "{{ReimbursementstoDate.tableDataWithInserts.map((currentRow) => {
                        return currentRow._LINE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  tableData: "{{API2.response}}"
                  tableHeader: Reimbursements-to-date
                  textSize: PARAGRAPH2
                  top:
                    mode: gridUnit
                    value: 108
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: 0fto5gd07i
                  widgetName: ReimbursementstoDate
                  width:
                    mode: gridUnit
                    value: 46
                - animateLoading: true
                  chartData: "{{getAllPreviousBillings.response}}"
                  chartDefinition: ui
                  chartType: COLUMN_CHART
                  collapseWhenHidden: false
                  columnInfo:
                    - name: ACCOUNT_
                    - canBeNumeric: true
                      name: ADJS
                      type: string
                    - canBeNumeric: true
                      name: BALANCE
                      type: string
                    - canBeNumeric: true
                      name: CHARGES
                      type: string
                    - name: DOB
                    - name: NAME
                    - name: ORIGINAL_BILL_DATE
                    - canBeNumeric: true
                      name: PAID
                      type: string
                    - name: PRIMARY_INSURED_S_ID_
                    - name: PRIMARY_PAYER
                    - name: PROCEDURE
                    - name: RENDERING_PROVIDER
                    - name: SECONDARY_PAYER
                    - name: SRVC_DATE
                    - name: _
                    - canBeNumeric: true
                      name: _FIVETRAN_SYNCED
                      type: string
                    - canBeNumeric: true
                      name: _LINE
                      type: number
                  dynamicBindingPathList:
                    - key: chartData
                  dynamicTriggerPathList:
                    - key: onSelectData
                  gridColumns: 34
                  groupBy:
                    field: PROCEDURE
                  headerTitle: ""
                  height:
                    mode: gridUnit
                    value: 28
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 62
                  onSelectData:
                    - id: klyodmf7dp
                      newWindow: true
                  parentId: dwpvpsnarl
                  plotlyChartJson:
                    data:
                      - type: bar
                        x:
                          - 1
                          - 2
                          - 3
                        y:
                          - 2
                          - 5
                          - 3
                    layout: {}
                  size:
                    field: ""
                  top:
                    mode: gridUnit
                    value: 5
                  type: CHART_WIDGET
                  widgetId: 4tsshibd24
                  widgetName: Billings
                  width:
                    mode: gridUnit
                    value: 34
                  x:
                    axisTitle: ""
                    dataType: temporal
                    field: SRVC_DATE
                    timeUnit: yearmonth
                  y:
                    aggregation: count
                    axisTitle: ""
                    dataType: number
                    notation: standard
                    series:
                      - field: PROCEDURE
                - animateLoading: true
                  collapseWhenHidden: false
                  dynamicBindingPathList: []
                  dynamicTriggerPathList: []
                  gridColumns: 34
                  height:
                    mode: gridUnit
                    value: 3
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 62
                  parentId: dwpvpsnarl
                  text: Billings Per Month by CPT Code
                  textAlign: LEFT
                  textStyle: HEADING_1
                  textType: text
                  top:
                    mode: gridUnit
                    value: 1
                  type: TEXT_WIDGET
                  verticalAlign: AUTO
                  widgetId: 4dlkl1hcjt
                  widgetName: Text1
                  width:
                    mode: gridUnit
                    value: 34
                - animateLoading: true
                  cachedColumnSettings:
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  collapseWhenHidden: false
                  columnOrder:
                    - MONTH
                    - NORMALIZEDAVGPROCEDURES
                    - TOTALPATIENTS
                    - TOTALPROCEDURES
                    - YEAR
                    - PROCEDURE
                  compactMode: SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: primaryColumns.PROCEDURE.computedValue
                    - key: primaryColumns.PROCEDURE.linkUrl
                    - key: primaryColumns.PROCEDURE.linkLabel
                    - key: primaryColumns.MONTH.computedValue
                    - key: primaryColumns.MONTH.linkUrl
                    - key: primaryColumns.MONTH.linkLabel
                    - key: primaryColumns.NORMALIZEDAVGPROCEDURES.computedValue
                    - key: primaryColumns.NORMALIZEDAVGPROCEDURES.linkUrl
                    - key: primaryColumns.NORMALIZEDAVGPROCEDURES.linkLabel
                    - key: primaryColumns.TOTALPATIENTS.computedValue
                    - key: primaryColumns.TOTALPATIENTS.linkUrl
                    - key: primaryColumns.TOTALPATIENTS.linkLabel
                    - key: primaryColumns.TOTALPROCEDURES.computedValue
                    - key: primaryColumns.TOTALPROCEDURES.linkUrl
                    - key: primaryColumns.TOTALPROCEDURES.linkLabel
                    - key: primaryColumns.YEAR.computedValue
                    - key: primaryColumns.YEAR.linkUrl
                    - key: primaryColumns.YEAR.linkLabel
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 96
                  height:
                    mode: gridUnit
                    value: 48
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: true
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 0
                  onCancelChanges:
                    - id: h7wqv9wut0
                      newWindow: true
                  onRowClicked:
                    - id: nkfgbpj7qn
                      newWindow: true
                  onSaveChanges:
                    - id: s8rqb3bqu7
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    MONTH:
                      columnType: text
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MONTH
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: MONTH
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    NORMALIZEDAVGPROCEDURES:
                      columnType: text
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NORMALIZEDAVGPROCEDURES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: NORMALIZEDAVGPROCEDURES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: NORMALIZEDAVGPROCEDURES
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NORMALIZEDAVGPROCEDURES })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NORMALIZEDAVGPROCEDURES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROCEDURE:
                      columnType: text
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROCEDURE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PROCEDURE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: PROCEDURE
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROCEDURE })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROCEDURE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTALPATIENTS:
                      columnType: text
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTALPATIENTS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTALPATIENTS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: TOTALPATIENTS
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTALPATIENTS })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTALPATIENTS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTALPROCEDURES:
                      columnType: text
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTALPROCEDURES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTALPROCEDURES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: TOTALPROCEDURES
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTALPROCEDURES })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTALPROCEDURES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    YEAR:
                      columnType: text
                      computedValue: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.YEAR })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: YEAR
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: YEAR
                      linkLabel: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.YEAR })}}"
                      linkUrl: "{{Table3.tableDataWithInserts.map((currentRow) => { return
                        currentRow.YEAR })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  tableData: ""
                  tableHeader: Previous Billings & Charges to-be-Billed
                  textSize: PARAGRAPH
                  top:
                    mode: gridUnit
                    value: 220
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: 0fanl0l3lh
                  widgetName: Table3
                  width:
                    mode: gridUnit
                    value: 96
                - animateLoading: true
                  chartData: "{{getNormalizedBillingCodes.response}}"
                  chartDefinition: ui
                  chartType: LINE_CHART
                  collapseWhenHidden: false
                  columnInfo:
                    - canBeNumeric: true
                      name: MONTH
                      type: number
                    - canBeNumeric: true
                      name: NORMALIZEDAVGPROCEDURES
                      type: number
                    - canBeNumeric: true
                      name: PROCEDURE
                      type: number
                    - canBeNumeric: true
                      name: TOTALPATIENTS
                      type: number
                    - canBeNumeric: true
                      name: TOTALPROCEDURES
                      type: number
                    - canBeNumeric: true
                      name: YEAR
                      type: number
                  dynamicBindingPathList:
                    - key: chartData
                  dynamicTriggerPathList:
                    - key: onSelectData
                  gridColumns: 28
                  groupBy:
                    field: PROCEDURE
                  headerTitle: ""
                  height:
                    mode: gridUnit
                    value: 28
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 33
                  onSelectData:
                    - id: 23gzg6oess
                      newWindow: true
                  parentId: dwpvpsnarl
                  plotlyChartJson:
                    data:
                      - type: bar
                        x:
                          - 1
                          - 2
                          - 3
                        y:
                          - 2
                          - 5
                          - 3
                    layout: {}
                  size:
                    field: PROCEDURE
                  top:
                    mode: gridUnit
                    value: 5
                  type: CHART_WIDGET
                  widgetId: s0dhsp89h1
                  widgetName: Chart1
                  width:
                    mode: gridUnit
                    value: 28
                  x:
                    axisTitle: ""
                    dataType: nominal
                    field: MONTH
                  y:
                    axisTitle: ""
                    dataType: number
                    maximumFractionDigits: "1"
                    minimumFractionDigits: "1"
                    notation: standard
                    series:
                      - field: NORMALIZEDAVGPROCEDURES
                - animateLoading: true
                  chartData: "{{getNormalizedBillingCharges.response}}"
                  chartDefinition: ui
                  chartType: AREA_CHART
                  collapseWhenHidden: false
                  columnInfo:
                    - canBeNumeric: true
                      name: AVGCHARGESPERPATIENT
                      type: number
                    - canBeNumeric: true
                      name: CUMULATIVEPATIENTS
                      type: number
                    - canBeNumeric: true
                      name: MONTH
                      type: number
                    - canBeNumeric: true
                      name: TOTALCHARGES
                      type: number
                    - canBeNumeric: true
                      name: YEAR
                      type: number
                  dynamicBindingPathList:
                    - key: chartData
                  dynamicTriggerPathList:
                    - key: onSelectData
                  gridColumns: 32
                  groupBy: {}
                  headerTitle: ""
                  height:
                    mode: gridUnit
                    value: 28
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 0
                  onSelectData:
                    - id: pe1yesvefh
                      newWindow: true
                  parentId: dwpvpsnarl
                  plotlyChartJson:
                    data:
                      - type: bar
                        x:
                          - 1
                          - 2
                          - 3
                        y:
                          - 2
                          - 5
                          - 3
                    layout: {}
                  size:
                    field: ""
                  top:
                    mode: gridUnit
                    value: 5
                  type: CHART_WIDGET
                  widgetId: lpqbb70bef
                  widgetName: Chart2
                  width:
                    mode: gridUnit
                    value: 32
                  x:
                    axisTitle: ""
                    dataType: nominal
                    field: MONTH
                    timeUnit: yearmonth
                  y:
                    axisTitle: ""
                    dataType: currency
                    maximumFractionDigits: "0"
                    minimumFractionDigits: "0"
                    notation: standard
                    series:
                      - field: AVGCHARGESPERPATIENT
                - animateLoading: true
                  collapseWhenHidden: false
                  dynamicBindingPathList: []
                  dynamicTriggerPathList: []
                  gridColumns: 32
                  height:
                    mode: gridUnit
                    value: 3
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 0
                  parentId: dwpvpsnarl
                  text: Average Charges Per Active Patient Per Month
                  textAlign: LEFT
                  textStyle: HEADING_2
                  textType: text
                  top:
                    mode: gridUnit
                    value: 1
                  type: TEXT_WIDGET
                  verticalAlign: AUTO
                  widgetId: jjd8mrc25g
                  widgetName: Text2
                  width:
                    mode: gridUnit
                    value: 32
                - animateLoading: true
                  cachedColumnSettings:
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  collapseWhenHidden: false
                  columnOrder:
                    - AGGREGATE_PATIENTS_ACTIVE_FOR_MONTHS
                    - AGGREGATE_PATIENTS_ACTIVE_SINCE_ENROLLMENT
                    - AGGREGATE_PATIENTS_READINGS_ACTIVE_SINCE_ENROLLMENT
                    - AGGREGATE_PATIENTS_TIME_TRACKING_ACTIVE_SINCE_ENROLLMENT
                    - AGGREGATE_TOTAL_CHARGED
                    - AGGREGATE_TOTAL_PAID
                    - ENROLLMENTS
                    - MONTHS_ACTIVE
                    - MONTH_OF_ENROLLMENT
                    - NORMALISED_AGGREGATE_CHARGED
                    - NORMALISED_CHARGED
                    - PATIENTS_ACTIVE_FOR_MONTHS
                    - TOTAL_CHARGED
                    - TOTAL_PAID
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: tableData
                    - key: primaryColumns.AGGREGATE_PATIENTS_ACTIVE_FOR_MONTHS.computedValue
                    - key: primaryColumns.AGGREGATE_PATIENTS_ACTIVE_FOR_MONTHS.linkUrl
                    - key: primaryColumns.AGGREGATE_PATIENTS_ACTIVE_FOR_MONTHS.linkLabel
                    - key: primaryColumns.AGGREGATE_PATIENTS_ACTIVE_SINCE_ENROLLMENT.computedValue
                    - key: primaryColumns.AGGREGATE_PATIENTS_ACTIVE_SINCE_ENROLLMENT.linkUrl
                    - key: primaryColumns.AGGREGATE_PATIENTS_ACTIVE_SINCE_ENROLLMENT.linkLabel
                    - key: primaryColumns.AGGREGATE_PATIENTS_READINGS_ACTIVE_SINCE_ENROLLMENT.computedValue
                    - key: primaryColumns.AGGREGATE_PATIENTS_READINGS_ACTIVE_SINCE_ENROLLMENT.linkUrl
                    - key: primaryColumns.AGGREGATE_PATIENTS_READINGS_ACTIVE_SINCE_ENROLLMENT.linkLabel
                    - key: primaryColumns.AGGREGATE_PATIENTS_TIME_TRACKING_ACTIVE_SINCE_ENROLLMENT.computedValue
                    - key: primaryColumns.AGGREGATE_PATIENTS_TIME_TRACKING_ACTIVE_SINCE_ENROLLMENT.linkUrl
                    - key: primaryColumns.AGGREGATE_PATIENTS_TIME_TRACKING_ACTIVE_SINCE_ENROLLMENT.linkLabel
                    - key: primaryColumns.AGGREGATE_TOTAL_CHARGED.computedValue
                    - key: primaryColumns.AGGREGATE_TOTAL_CHARGED.linkUrl
                    - key: primaryColumns.AGGREGATE_TOTAL_CHARGED.linkLabel
                    - key: primaryColumns.AGGREGATE_TOTAL_PAID.computedValue
                    - key: primaryColumns.AGGREGATE_TOTAL_PAID.linkUrl
                    - key: primaryColumns.AGGREGATE_TOTAL_PAID.linkLabel
                    - key: primaryColumns.ENROLLMENTS.computedValue
                    - key: primaryColumns.ENROLLMENTS.linkUrl
                    - key: primaryColumns.ENROLLMENTS.linkLabel
                    - key: primaryColumns.MONTHS_ACTIVE.computedValue
                    - key: primaryColumns.MONTHS_ACTIVE.linkUrl
                    - key: primaryColumns.MONTHS_ACTIVE.linkLabel
                    - key: primaryColumns.MONTH_OF_ENROLLMENT.computedValue
                    - key: primaryColumns.MONTH_OF_ENROLLMENT.linkUrl
                    - key: primaryColumns.MONTH_OF_ENROLLMENT.linkLabel
                    - key: primaryColumns.NORMALISED_AGGREGATE_CHARGED.computedValue
                    - key: primaryColumns.NORMALISED_AGGREGATE_CHARGED.linkUrl
                    - key: primaryColumns.NORMALISED_AGGREGATE_CHARGED.linkLabel
                    - key: primaryColumns.NORMALISED_CHARGED.computedValue
                    - key: primaryColumns.NORMALISED_CHARGED.linkUrl
                    - key: primaryColumns.NORMALISED_CHARGED.linkLabel
                    - key: primaryColumns.PATIENTS_ACTIVE_FOR_MONTHS.computedValue
                    - key: primaryColumns.PATIENTS_ACTIVE_FOR_MONTHS.linkUrl
                    - key: primaryColumns.PATIENTS_ACTIVE_FOR_MONTHS.linkLabel
                    - key: primaryColumns.TOTAL_CHARGED.computedValue
                    - key: primaryColumns.TOTAL_CHARGED.linkUrl
                    - key: primaryColumns.TOTAL_CHARGED.linkLabel
                    - key: primaryColumns.TOTAL_PAID.computedValue
                    - key: primaryColumns.TOTAL_PAID.linkUrl
                    - key: primaryColumns.TOTAL_PAID.linkLabel
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 96
                  height:
                    mode: gridUnit
                    value: 29
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: true
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 0
                  onCancelChanges:
                    - id: yv5qylfkmg
                      newWindow: true
                  onRowClicked:
                    - id: r6pd6jrjfw
                      newWindow: true
                  onSaveChanges:
                    - id: duoxdukhex
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    AGGREGATE_PATIENTS_ACTIVE_FOR_MONTHS:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_ACTIVE_FOR_MONTHS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: AGGREGATE_PATIENTS_ACTIVE_FOR_MONTHS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: AGGREGATE_PATIENTS_ACTIVE_FOR_MONTHS
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_ACTIVE_FOR_MONTHS })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_ACTIVE_FOR_MONTHS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    AGGREGATE_PATIENTS_ACTIVE_SINCE_ENROLLMENT:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_ACTIVE_SINCE_ENROLLMENT
                        })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: AGGREGATE_PATIENTS_ACTIVE_SINCE_ENROLLMENT
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: AGGREGATE_PATIENTS_ACTIVE_SINCE_ENROLLMENT
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_ACTIVE_SINCE_ENROLLMENT
                        })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_ACTIVE_SINCE_ENROLLMENT
                        })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    AGGREGATE_PATIENTS_READINGS_ACTIVE_SINCE_ENROLLMENT:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_READINGS_ACTIVE_SINCE_ENR\
                        OLLMENT })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: AGGREGATE_PATIENTS_READINGS_ACTIVE_SINCE_ENROLLMENT
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: AGGREGATE_PATIENTS_READINGS_ACTIVE_SINCE_ENROLLMENT
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_READINGS_ACTIVE_SINCE_ENR\
                        OLLMENT })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_READINGS_ACTIVE_SINCE_ENR\
                        OLLMENT })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    AGGREGATE_PATIENTS_TIME_TRACKING_ACTIVE_SINCE_ENROLLMENT:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_TIME_TRACKING_ACTIVE_SINC\
                        E_ENROLLMENT })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: AGGREGATE_PATIENTS_TIME_TRACKING_ACTIVE_SINCE_ENROLLMENT
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: AGGREGATE_PATIENTS_TIME_TRACKING_ACTIVE_SINCE_ENROLLMENT
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_TIME_TRACKING_ACTIVE_SINC\
                        E_ENROLLMENT })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_PATIENTS_TIME_TRACKING_ACTIVE_SINC\
                        E_ENROLLMENT })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    AGGREGATE_TOTAL_CHARGED:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_TOTAL_CHARGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: AGGREGATE_TOTAL_CHARGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: AGGREGATE_TOTAL_CHARGED
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_TOTAL_CHARGED })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_TOTAL_CHARGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    AGGREGATE_TOTAL_PAID:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_TOTAL_PAID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: AGGREGATE_TOTAL_PAID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: AGGREGATE_TOTAL_PAID
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_TOTAL_PAID })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AGGREGATE_TOTAL_PAID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    ENROLLMENTS:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ENROLLMENTS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: ENROLLMENTS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 6
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: ENROLLMENTS
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ENROLLMENTS })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ENROLLMENTS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MONTHS_ACTIVE:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTHS_ACTIVE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MONTHS_ACTIVE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 7
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: MONTHS_ACTIVE
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTHS_ACTIVE })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTHS_ACTIVE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MONTH_OF_ENROLLMENT:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH_OF_ENROLLMENT })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MONTH_OF_ENROLLMENT
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: MONTH_OF_ENROLLMENT
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH_OF_ENROLLMENT })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH_OF_ENROLLMENT })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    NORMALISED_AGGREGATE_CHARGED:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NORMALISED_AGGREGATE_CHARGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: NORMALISED_AGGREGATE_CHARGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: NORMALISED_AGGREGATE_CHARGED
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NORMALISED_AGGREGATE_CHARGED })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NORMALISED_AGGREGATE_CHARGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    NORMALISED_CHARGED:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NORMALISED_CHARGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: NORMALISED_CHARGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 10
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: NORMALISED_CHARGED
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NORMALISED_CHARGED })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.NORMALISED_CHARGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENTS_ACTIVE_FOR_MONTHS:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENTS_ACTIVE_FOR_MONTHS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENTS_ACTIVE_FOR_MONTHS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 11
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: PATIENTS_ACTIVE_FOR_MONTHS
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENTS_ACTIVE_FOR_MONTHS })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENTS_ACTIVE_FOR_MONTHS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_CHARGED:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_CHARGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_CHARGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 12
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: TOTAL_CHARGED
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_CHARGED })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_CHARGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_PAID:
                      columnType: text
                      computedValue: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_PAID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_PAID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 13
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: TOTAL_PAID
                      linkLabel: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_PAID })}}"
                      linkUrl: "{{Table4.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_PAID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  tableData: "{{getCohortAnalytics.response}}"
                  tableHeader: Cohort Analytics
                  textSize: PARAGRAPH
                  top:
                    mode: gridUnit
                    value: 269
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: f273wt7lp3
                  widgetName: Table4
                  width:
                    mode: gridUnit
                    value: 96
                - animateLoading: true
                  chartData: |-
                    [
                      {
                        "city": "Toronto",
                        "population": 2930000,
                        "country": "Canada"
                      },
                      {
                        "city": "New York",
                        "population": 8419000,
                        "country": "USA"
                      },
                      {
                        "city": "Vancouver",
                        "population": 675218,
                        "country": "Canada"
                      },
                      {
                        "city": "San Francisco",
                        "population": 874961,
                        "country": "USA"
                      }
                    ]
                  chartDefinition: plotly
                  chartType: COLUMN_CHART
                  collapseWhenHidden: false
                  columnInfo: []
                  dynamicBindingPathList: []
                  dynamicTriggerPathList:
                    - key: onSelectData
                  gridColumns: 96
                  groupBy:
                    field: ""
                  headerTitle: My chart
                  height:
                    mode: gridUnit
                    value: 28
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 0
                  onSelectData:
                    - id: boecjsvu0t
                      newWindow: true
                  parentId: dwpvpsnarl
                  plotlyChartJson: |-
                    {
                      "data": [
                        {
                          "type": "bar",
                          "x": [
                            1,
                            2,
                            3
                          ],
                          "y": [
                            2,
                            5,
                            3
                          ]
                        }
                      ],
                      "layout": {}
                    }
                  size:
                    field: ""
                  top:
                    mode: gridUnit
                    value: 299
                  type: CHART_WIDGET
                  widgetId: v3swtlzhmk
                  widgetName: Chart3
                  width:
                    mode: gridUnit
                    value: 96
                  x:
                    axisTitle: ""
                    dataType: auto
                    field: city
                  y:
                    axisTitle: ""
                    dataType: number
                    notation: standard
                    series:
                      - field: population
              containerStyle: none
              detachFromLayout: true
              dragDisabled: true
              dynamicBindingPathList: []
              dynamicTriggerPathList: []
              gridColumns: 96
              height:
                mode: gridUnit
                value: 327
              isLoading: false
              isVisible: true
              layout: FIXED_GRID
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: px
                value: 1292
              parentId: lm2jrimm2x
              top:
                mode: gridUnit
                value: 0
              type: CANVAS_WIDGET
              widgetId: dwpvpsnarl
              widgetName: Canvas1
              width:
                mode: gridUnit
                value: 0
          detachFromLayout: true
          dragDisabled: true
          gridColumns: 96
          height:
            mode: fitContent
            value: 329
          isLoading: false
          isVisible: true
          left:
            mode: gridUnit
            value: 0
          parentId: "0"
          shouldScrollContents: true
          top:
            mode: gridUnit
            value: 0
          type: SECTION_WIDGET
          widgetId: lm2jrimm2x
          widgetName: Section1
          width:
            mode: gridUnit
            value: 96
        - canOutsideClickClose: true
          children:
            - canExtend: true
              children:
                - canExtend: true
                  children:
                    - animateLoading: true
                      collapseWhenHidden: false
                      gridColumns: 70
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      parentId: jvp3rp5q9g
                      text: Slideout Title
                      textAlign: LEFT
                      textStyle: HEADING_1
                      textType: text
                      top:
                        mode: gridUnit
                        value: 0
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: rf4gnzp8mb
                      widgetName: Text3
                      width:
                        mode: gridUnit
                        value: 70
                    - animateLoading: true
                      cachedColumnSettings:
                        action:
                          buttonLabel: Approve
                          columnType: button
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: action
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 5
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: action
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          notation: standard
                          onClick:
                            - code: showAlert(currentRow.name + ' is approved!', 'success')
                              id: id0
                              newWindow: true
                              type: runJs
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        date_joined:
                          columnType: date
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: date_joined
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 2
                          inputFormat: YYYY-MM-DD
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: date joined
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          outputFormat: MM-DD-YYYY
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        photo:
                          columnType: image
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: photo
                          imageBorderRadius:
                            mode: "%"
                            value: 50
                          imageSize: FIXED
                          index: 3
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: photo
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        twitter:
                          columnType: link
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.twitter })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: twitter
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 1
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: twitter
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return '@' +
                            currentRow.twitter?.split('/').pop()})}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.twitter })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                      collapseWhenHidden: false
                      columnOrder:
                        - ADJS
                        - BALANCE
                        - CHARGES
                        - DOB
                        - ID
                        - NAME
                        - ORIGINAL_BILL_DATE
                        - PAID
                        - PRIMARY_PAYER
                        - PROCEDURE
                        - RENDERING_PROVIDER
                        - SECONDARY_PAYER
                        - SERVICE_DATE
                      compactMode: SHORT
                      defaultFilters: "{}"
                      defaultSelectedRow: "0"
                      derivedColumns: {}
                      dynamicBindingPathList:
                        - key: tableData
                        - key: primaryColumns.ADJS.computedValue
                        - key: primaryColumns.ADJS.linkUrl
                        - key: primaryColumns.ADJS.linkLabel
                        - key: primaryColumns.BALANCE.computedValue
                        - key: primaryColumns.BALANCE.linkUrl
                        - key: primaryColumns.BALANCE.linkLabel
                        - key: primaryColumns.CHARGES.computedValue
                        - key: primaryColumns.CHARGES.linkUrl
                        - key: primaryColumns.CHARGES.linkLabel
                        - key: primaryColumns.DOB.computedValue
                        - key: primaryColumns.DOB.linkUrl
                        - key: primaryColumns.DOB.linkLabel
                        - key: primaryColumns.NAME.computedValue
                        - key: primaryColumns.NAME.linkUrl
                        - key: primaryColumns.NAME.linkLabel
                        - key: primaryColumns.ORIGINAL_BILL_DATE.computedValue
                        - key: primaryColumns.ORIGINAL_BILL_DATE.linkUrl
                        - key: primaryColumns.ORIGINAL_BILL_DATE.linkLabel
                        - key: primaryColumns.PAID.computedValue
                        - key: primaryColumns.PAID.linkUrl
                        - key: primaryColumns.PAID.linkLabel
                        - key: primaryColumns.PRIMARY_PAYER.computedValue
                        - key: primaryColumns.PRIMARY_PAYER.linkUrl
                        - key: primaryColumns.PRIMARY_PAYER.linkLabel
                        - key: primaryColumns.PROCEDURE.computedValue
                        - key: primaryColumns.PROCEDURE.linkUrl
                        - key: primaryColumns.PROCEDURE.linkLabel
                        - key: primaryColumns.RENDERING_PROVIDER.computedValue
                        - key: primaryColumns.RENDERING_PROVIDER.linkUrl
                        - key: primaryColumns.RENDERING_PROVIDER.linkLabel
                        - key: primaryColumns.SECONDARY_PAYER.computedValue
                        - key: primaryColumns.SECONDARY_PAYER.linkUrl
                        - key: primaryColumns.SECONDARY_PAYER.linkLabel
                        - key: primaryColumns.ID.computedValue
                        - key: primaryColumns.ID.linkUrl
                        - key: primaryColumns.ID.linkLabel
                        - key: primaryColumns.SERVICE_DATE.computedValue
                        - key: primaryColumns.SERVICE_DATE.linkUrl
                        - key: primaryColumns.SERVICE_DATE.linkLabel
                      dynamicTriggerPathList:
                        - key: onRowClicked
                        - key: onSaveChanges
                        - key: onCancelChanges
                      gridColumns: 79
                      height:
                        mode: gridUnit
                        value: 45
                      horizontalAlignment: LEFT
                      isDownloadable: true
                      isFilterable: true
                      isLoading: false
                      isSearchable: true
                      isVisible: true
                      label: Data
                      left:
                        mode: gridUnit
                        value: 0
                      onCancelChanges:
                        - id: cgfkibh8bx
                          newWindow: true
                      onRowClicked:
                        - id: 1julwisncp
                          newWindow: true
                      onSaveChanges:
                        - id: voewhjkdaj
                          newWindow: true
                      pageType: NONE
                      parentId: jvp3rp5q9g
                      primaryColumns:
                        ADJS:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.ADJS })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: ADJS
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 1
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: ADJS
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.ADJS })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.ADJS })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        BALANCE:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.BALANCE })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: BALANCE
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 2
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: BALANCE
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.BALANCE })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.BALANCE })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        CHARGES:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.CHARGES })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: CHARGES
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 3
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: CHARGES
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.CHARGES })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.CHARGES })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        DOB:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.DOB })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: DOB
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 4
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: DOB
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.DOB })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.DOB })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        ID:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.ID })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: ID
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 4
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: ID
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.ID })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.ID })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        NAME:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.NAME })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: NAME
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 5
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: NAME
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.NAME })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.NAME })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        ORIGINAL_BILL_DATE:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.ORIGINAL_BILL_DATE })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: ORIGINAL_BILL_DATE
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 6
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: ORIGINAL_BILL_DATE
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.ORIGINAL_BILL_DATE })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.ORIGINAL_BILL_DATE })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        PAID:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.PAID })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: PAID
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 7
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: PAID
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.PAID })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.PAID })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        PRIMARY_PAYER:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.PRIMARY_PAYER })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: PRIMARY_PAYER
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 9
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: PRIMARY_PAYER
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.PRIMARY_PAYER })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.PRIMARY_PAYER })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        PROCEDURE:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.PROCEDURE })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: PROCEDURE
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 10
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: PROCEDURE
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.PROCEDURE })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.PROCEDURE })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        RENDERING_PROVIDER:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.RENDERING_PROVIDER })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: RENDERING_PROVIDER
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 11
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: RENDERING_PROVIDER
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.RENDERING_PROVIDER })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.RENDERING_PROVIDER })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        SECONDARY_PAYER:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.SECONDARY_PAYER })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: SECONDARY_PAYER
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 12
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: SECONDARY_PAYER
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.SECONDARY_PAYER })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.SECONDARY_PAYER })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        SERVICE_DATE:
                          columnType: text
                          computedValue: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.SERVICE_DATE })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: SERVICE_DATE
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 12
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: SERVICE_DATE
                          linkLabel: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.SERVICE_DATE })}}"
                          linkUrl: "{{Table5.tableDataWithInserts.map((currentRow) => { return
                            currentRow.SERVICE_DATE })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                      tableData: "{{getPreviousBillings.response}}"
                      tableHeader: Users
                      textSize: PARAGRAPH
                      top:
                        mode: gridUnit
                        value: 4
                      type: TABLE_WIDGET
                      verticalAlignment: CENTER
                      widgetId: 2e4d89tnu6
                      widgetName: Table5
                      width:
                        mode: gridUnit
                        value: 79
                  collapseWhenHidden: false
                  detachFromLayout: true
                  gridColumns: 80
                  height:
                    mode: fitContent
                    value: 69
                  isDisabled: false
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 0
                  minHeight:
                    mode: px
                    value: 800
                  parentId: 85ksft7wnu
                  shouldScrollContents: true
                  top:
                    mode: gridUnit
                    value: 0
                  type: CANVAS_WIDGET
                  widgetId: jvp3rp5q9g
                  widgetName: Canvas2
                  width:
                    mode: gridUnit
                    value: 0
              collapseWhenHidden: false
              detachFromLayout: true
              dragDisabled: true
              gridColumns: 80
              height:
                mode: fitContent
                value: 71
              isLoading: false
              isVisible: true
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: px
                value: 800
              parentId: rcluy47jaj
              top:
                mode: gridUnit
                value: 0
              type: SECTION_WIDGET
              widgetId: 85ksft7wnu
              widgetName: Section2
              width:
                mode: gridUnit
                value: 0
          detachFromLayout: true
          dynamicBindingPathList: []
          dynamicTriggerPathList:
            - key: onOpen
            - key: onClose
          gridColumns: 80
          hasBackdrop: true
          height:
            mode: gridUnit
            value: 69
          isLoading: false
          left:
            mode: gridUnit
            value: 0
          onClose:
            - id: t4ibiqgk2x
              newWindow: true
          onOpen:
            - id: cinjf8c0jl
              newWindow: true
          parentId: "0"
          shouldScrollContents: true
          top:
            mode: gridUnit
            value: 0
          type: SLIDEOUT_WIDGET
          widgetId: rcluy47jaj
          widgetName: Slideout1
          width:
            mode: gridUnit
            value: 80
      detachFromLayout: true
      dynamicBindingPathList: []
      gridColumns: 96
      height:
        mode: gridUnit
        value: 99
      layoutVersion: 2
      left:
        mode: gridUnit
        value: 0
      maxWidth:
        mode: px
        value: 7680
      minWidth:
        mode: px
        value: 840
      stateVars:
        stateVarMap: {}
      timers:
        timerMap: {}
      top:
        mode: gridUnit
        value: 0
      type: PAGE_WIDGET
      version: 8
      widgetId: "0"
      widgetName: Page
      width:
        mode: gridUnit
        value: 0
    id: bb6a07e3-6587-4dd7-b5fa-67d5881daae0
name: Page1
