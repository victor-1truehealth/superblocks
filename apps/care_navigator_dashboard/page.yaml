applicationId: 91949d78-431b-4f5f-b349-0ad5f686f35e
id: 0395b7d5-e681-478b-a14f-600eaf10651f
isHidden: false
layouts:
  - dsl:
      apis:
        apiMap:
          03ad7663-50f5-47d0-b7cf-1b8b76e6d699:
            dynamicTriggerPathList:
              - key: onError
            id: 03ad7663-50f5-47d0-b7cf-1b8b76e6d699
            onError:
              - id: 30995297-d31f-46f7-b425-75cd0715a503
                message: "{{getTimeAdherence.error}}"
                style: error
                type: showAlert
          1e0bdb04-4181-41ee-a4cb-50a5f4e877fd:
            dynamicTriggerPathList:
              - key: onError
            id: 1e0bdb04-4181-41ee-a4cb-50a5f4e877fd
            onError:
              - id: c81fbdcb-69ff-47b7-a1f4-99df916c10ba
                message: "{{getAllTimeTracked.error}}"
                style: error
                type: showAlert
          2aa5cc03-9525-4e47-b570-28c557f8d857:
            dynamicTriggerPathList:
              - key: onError
            id: 2aa5cc03-9525-4e47-b570-28c557f8d857
            onError:
              - id: 10a929a8-4d1a-4a4b-9279-b097d6ba9ee2
                message: "{{getAllTime.error}}"
                style: error
                type: showAlert
          4968abb4-fabd-4e81-9cf1-14f24d9c59f0:
            dynamicTriggerPathList:
              - key: onError
            id: 4968abb4-fabd-4e81-9cf1-14f24d9c59f0
            onError:
              - id: a96e645a-5efd-40e6-a3d2-c2d190034190
                message: "{{getAdherence.error}}"
                style: error
                type: showAlert
          4df55474-32df-42a8-b17b-8a8ed8e4259b:
            dynamicTriggerPathList:
              - key: onError
            id: 4df55474-32df-42a8-b17b-8a8ed8e4259b
            onError:
              - id: fce16301-b28e-419a-b8cc-b4c6b5de6cd5
                message: "{{getTimePriorities.error}}"
                style: error
                type: showAlert
          65558df3-6dec-467a-87d0-69229b475427:
            dynamicTriggerPathList:
              - key: onError
            id: 65558df3-6dec-467a-87d0-69229b475427
            onError:
              - id: d30089d3-c771-426b-8867-3edf1b568d60
                message: "{{API1.error}}"
                style: error
                type: showAlert
          6e9d86cc-4cba-43d1-9687-d125ee38854b:
            dynamicTriggerPathList:
              - key: onError
            id: 6e9d86cc-4cba-43d1-9687-d125ee38854b
            onError:
              - id: bd385316-bf42-4840-a34e-30b4792d4466
                message: "{{getCTAvgHours.error}}"
                style: error
                type: showAlert
          738f11a4-6601-496d-9dfc-7c88cb5cf238:
            dynamicTriggerPathList:
              - key: onError
            id: 738f11a4-6601-496d-9dfc-7c88cb5cf238
            onError:
              - id: c73d547e-2746-4a97-a243-b84fa6f06000
                message: "{{getPatientCohorts.error}}"
                style: error
                type: showAlert
          c4be51b3-b735-414b-804d-3c2656cb4a87:
            dynamicTriggerPathList:
              - key: onError
            id: c4be51b3-b735-414b-804d-3c2656cb4a87
            onError:
              - id: 4eba8232-6f8e-4db7-a2fd-976e8582be70
                message: "{{time_yesterday_CN.error}}"
                style: error
                type: showAlert
          daab6ffa-64ef-4953-9383-a196b9b47a0e:
            dynamicTriggerPathList:
              - key: onError
            id: daab6ffa-64ef-4953-9383-a196b9b47a0e
            onError:
              - id: 2ac641cb-cbd1-4067-9f7a-07f1a01c0357
                message: "{{getTimePrioritiesGlobal.error}}"
                style: error
                type: showAlert
          e02ac7d3-bc21-480a-9911-85f97341d958:
            dynamicTriggerPathList:
              - key: onError
            id: e02ac7d3-bc21-480a-9911-85f97341d958
            onError:
              - id: 32d4ea10-7b38-4e25-a97e-b2af0482d988
                message: "{{getCareTeam.error}}"
                style: error
                type: showAlert
          e59e8c18-6f9e-4736-b28b-2d855d040c15:
            dynamicTriggerPathList:
              - key: onError
            id: e59e8c18-6f9e-4736-b28b-2d855d040c15
            onError:
              - id: d5a16e80-c582-4f25-8325-0be453da9895
                message: "{{getInfoTimeAdherence.error}}"
                style: error
                type: showAlert
          e865e1b0-a53f-4856-9ccb-fede8f007c8f:
            dynamicBindingPathList: []
            dynamicTriggerPathList:
              - key: onError
              - key: onSuccess
              - key: onCancel
            id: e865e1b0-a53f-4856-9ccb-fede8f007c8f
            onCancel:
              - id: hkk63sucaf
                newWindow: true
            onError:
              - id: db7cc771-9191-4720-899e-844f3a3a82d2
                message: "{{getCareTeamTime.error}}"
                style: error
                type: showAlert
            onSuccess:
              - id: p9pp1li357
                newWindow: true
          f3e502af-e1b3-4ac7-ab2e-6f3e9ae4bdd2:
            dynamicTriggerPathList:
              - key: onError
            id: f3e502af-e1b3-4ac7-ab2e-6f3e9ae4bdd2
            onError:
              - id: 65854146-aac2-4a00-bb6c-e3bc24c404a7
                message: "{{getYesterdayReadings.error}}"
                style: error
                type: showAlert
      backgroundColor: none
      cachedData:
        pageLoadActions:
          apiDeps:
            getPatientCohorts: []
            getTimeAdherence: []
          apiNames:
            - getPatientCohorts
            - getTimeAdherence
      canExtend: true
      children:
        - canExtend: true
          children:
            - backgroundColor: none
              canExtend: true
              children:
                - animateLoading: true
                  collapseWhenHidden: false
                  dynamicBindingPathList: []
                  dynamicTriggerPathList: []
                  gridColumns: 26
                  height:
                    mode: gridUnit
                    value: 3
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 46
                  parentId: dwpvpsnarl
                  text: Minutes Tracked
                  textAlign: CENTER
                  textStyle: HEADING_2
                  textType: text
                  top:
                    mode: gridUnit
                    value: 1
                  type: TEXT_WIDGET
                  verticalAlign: AUTO
                  widgetId: roxcuamfjs
                  widgetName: Text2
                  width:
                    mode: gridUnit
                    value: 26
                - animateLoading: true
                  cachedColumnSettings:
                    DAYS_SINCE_LAST_INTERACTION:
                      columnType: number
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DAYS_SINCE_LAST_INTERACTION })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: DAYS_SINCE_LAST_INTERACTION
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Days Since...
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DAYS_SINCE_LAST_INTERACTION })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DAYS_SINCE_LAST_INTERACTION })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    FINAL_TOTAL_TIME_LOGGED:
                      columnType: number
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FINAL_TOTAL_TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: FINAL_TOTAL_TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Billable
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FINAL_TOTAL_TIME_LOGGED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FINAL_TOTAL_TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LAST_TIME_LOGGED:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LAST_TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 19
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LAST_TIME_LOGGED
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_TIME_LOGGED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MINUTES_LOGGED:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MINUTES_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MINUTES_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 20
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: MINUTES_LOGGED
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MINUTES_LOGGED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MINUTES_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    REMAINDER:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.REMAINDER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: REMAINDER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 38
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: REMAINDER
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.REMAINDER })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.REMAINDER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TIME_LOGGED:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 43
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TIME_LOGGED
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TIME_LOGGED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_MINUTES_LOGGED:
                      columnType: text
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_MINUTES_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_MINUTES_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 33
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: TOTAL_MINUTES_LOGGED
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_MINUTES_LOGGED })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_MINUTES_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH2
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_TIME_LOGGED_BY_CN:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_BY_CN })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_TIME_LOGGED_BY_CN
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 34
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: TOTAL_TIME_LOGGED_BY_CN
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_BY_CN })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_TIME_LOGGED_BY_CN })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    action:
                      buttonLabel: Approve
                      columnType: button
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: action
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: action
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.action })}}"
                      notation: standard
                      onClick:
                        - code: showAlert(currentRow.name + ' is approved!', 'success')
                          id: id0
                          newWindow: true
                          type: runJs
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    date_joined:
                      columnType: date
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: date_joined
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      inputFormat: YYYY-MM-DD
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: date joined
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.date_joined })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: MM-DD-YYYY
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    photo:
                      columnType: image
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: photo
                      imageBorderRadius:
                        mode: "%"
                        value: 50
                      imageSize: FIXED
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: photo
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.photo })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    twitter:
                      columnType: link
                      computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: twitter
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: twitter
                      linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return '@' +
                        currentRow.twitter?.split('/').pop()})}}"
                      linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                        currentRow.twitter })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  collapseWhenHidden: false
                  columnOrder:
                    - MONTH_OF
                    - CARE_NAVIGATOR
                    - TRUE_CARE_LINK
                    - PATIENT_FIRST_NAME
                    - PATIENT_LAST_NAME
                    - MONTHS_SINCE_CREATED
                    - LEAD_STAGE
                    - RPM_STAGE
                    - CCM_STAGE
                    - DAYS_FROM_LAST_ENC
                    - ASSIGNED_NAVIGATOR_TIME_LOGGED
                    - INDIVIDUAL_TIME_LOGGED
                    - TOTAL_TIME_LOGGED_ROUNDED
                    - TOTAL_BILLABLE_BLOCKS
                    - TIME_LEFT
                    - THREE_DAY_ADHERENCE_RATE
                    - WEEK_ADHERENCE_RATE
                    - MONTH_ADHERENCE_RATE
                    - QUARTER_ADHERENCE_RATE
                    - PROPORTION_INDIVIDUAL
                    - TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED
                    - LATEST_ENC_CREATED_TIME
                    - PROPORTION_INDIVIDUAL_WITH_GLOBAL
                    - PROPORTION_GLOBAL
                    - TOTAL_BILLABLE
                    - FIRST_NAME
                    - LAST_NAME
                    - CCM_PAYER
                    - CARE_SERVICES
                    - CREATED_ON
                    - PROPORTION_GROUP
                    - CUSTOMER_FACILITY
                    - GROUP_PROPORTIONAL_MULTIPLIER
                    - GLOBAL_PROPORTIONAL_MULTIPLIER
                    - AT_LEAST_ONE_BILLABLE_BLOCK
                    - CUSTOMER
                    - DOB
                    - GLOBAL_OUTLIER
                    - GROUP_OUTLIER
                    - INDIVIDUALLY_BILLABLE_BLOCKS
                    - PATIENT_INDIVIDUAL_ID
                    - LEADSQUARED_ID
                    - READING_DAYS_LAST_MONTH
                    - READING_DAYS_LAST_QUARTER
                    - TOTAL_TIME_LOGGED
                    - READING_DAYS_LAST_THREE
                    - READING_DAYS_LAST_WEEK
                    - TOTAL_TIME_LOGGED_WITH_GLOBAL
                    - LEAD_TYPE
                    - PATIENT_DOB
                    - RPM_PAYER
                    - VISITING_PROVIDER
                    - WELLNESS_PAYER
                    - WELLNESS_STAGE
                  columnSizeMap:
                    ASSIGNED_NAVIGATOR_TIME_LOGGED: 95.5697677880024
                    CARE_NAVIGATOR: 100
                    CCM_STAGE: 81
                    DAYS_FROM_LAST_ENC: 133.12792841506632
                    FIRST_NAME: 98
                    INDIVIDUAL_TIME_LOGGED: 202
                    LAST_NAME: 99
                    LEAD_STAGE: 129
                    MONTHS_SINCE_CREATED: 81.28868312757201
                    MONTH_ADHERENCE_RATE: 72.52914223251028
                    MONTH_OF: 80
                    PATIENT_FIRST_NAME: 93
                    PATIENT_LAST_NAME: 99
                    PROPORTION_GROUP: 60
                    PROPORTION_INDIVIDUAL: 74
                    QUARTER_ADHERENCE_RATE: 67.93512341392321
                    RPM_STAGE: 77
                    THREE_DAY_ADHERENCE_RATE: 80
                    TIME_LEFT: 96
                    TOTAL_BILLABLE: 133.42222222222222
                    TOTAL_BILLABLE_BLOCKS: 123
                    TOTAL_TIME_LOGGED: 175.0830864197531
                    TOTAL_TIME_LOGGED_ROUNDED: 126
                    TOTAL_TIME_LOGGED_WITH_GLOBAL: 284.15781893004123
                    TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED: 124
                    TRUE_CARE_LINK: 173
                    WEEK_ADHERENCE_RATE: 75
                  compactMode: VERY_SHORT
                  defaultFilters: "{}"
                  defaultSelectedRow: "0"
                  defaultSort:
                    asc: false
                    column: TOTAL_TIME_LOGGED_ROUNDED
                  derivedColumns: {}
                  dynamicBindingPathList:
                    - key: tableData
                    - key: primaryColumns.AT_LEAST_ONE_BILLABLE_BLOCK.computedValue
                    - key: primaryColumns.AT_LEAST_ONE_BILLABLE_BLOCK.linkUrl
                    - key: primaryColumns.AT_LEAST_ONE_BILLABLE_BLOCK.linkLabel
                    - key: primaryColumns.CARE_NAVIGATOR.computedValue
                    - key: primaryColumns.CARE_NAVIGATOR.linkUrl
                    - key: primaryColumns.CARE_NAVIGATOR.linkLabel
                    - key: primaryColumns.CUSTOMER.computedValue
                    - key: primaryColumns.CUSTOMER.linkUrl
                    - key: primaryColumns.CUSTOMER.linkLabel
                    - key: primaryColumns.DOB.computedValue
                    - key: primaryColumns.DOB.linkUrl
                    - key: primaryColumns.DOB.linkLabel
                    - key: primaryColumns.FIRST_NAME.computedValue
                    - key: primaryColumns.FIRST_NAME.linkUrl
                    - key: primaryColumns.FIRST_NAME.linkLabel
                    - key: primaryColumns.GLOBAL_OUTLIER.computedValue
                    - key: primaryColumns.GLOBAL_OUTLIER.linkUrl
                    - key: primaryColumns.GLOBAL_OUTLIER.linkLabel
                    - key: primaryColumns.GLOBAL_PROPORTIONAL_MULTIPLIER.computedValue
                    - key: primaryColumns.GLOBAL_PROPORTIONAL_MULTIPLIER.linkUrl
                    - key: primaryColumns.GLOBAL_PROPORTIONAL_MULTIPLIER.linkLabel
                    - key: primaryColumns.GROUP_OUTLIER.computedValue
                    - key: primaryColumns.GROUP_OUTLIER.linkUrl
                    - key: primaryColumns.GROUP_OUTLIER.linkLabel
                    - key: primaryColumns.GROUP_PROPORTIONAL_MULTIPLIER.computedValue
                    - key: primaryColumns.GROUP_PROPORTIONAL_MULTIPLIER.linkUrl
                    - key: primaryColumns.GROUP_PROPORTIONAL_MULTIPLIER.linkLabel
                    - key: primaryColumns.INDIVIDUALLY_BILLABLE_BLOCKS.computedValue
                    - key: primaryColumns.INDIVIDUALLY_BILLABLE_BLOCKS.linkUrl
                    - key: primaryColumns.INDIVIDUALLY_BILLABLE_BLOCKS.linkLabel
                    - key: primaryColumns.INDIVIDUAL_TIME_LOGGED.computedValue
                    - key: primaryColumns.INDIVIDUAL_TIME_LOGGED.linkUrl
                    - key: primaryColumns.INDIVIDUAL_TIME_LOGGED.linkLabel
                    - key: primaryColumns.LAST_NAME.computedValue
                    - key: primaryColumns.LAST_NAME.linkUrl
                    - key: primaryColumns.LAST_NAME.linkLabel
                    - key: primaryColumns.MONTH_OF.computedValue
                    - key: primaryColumns.MONTH_OF.linkUrl
                    - key: primaryColumns.MONTH_OF.linkLabel
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.computedValue
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkUrl
                    - key: primaryColumns.PATIENT_INDIVIDUAL_ID.linkLabel
                    - key: primaryColumns.PROPORTION_GLOBAL.computedValue
                    - key: primaryColumns.PROPORTION_GLOBAL.linkUrl
                    - key: primaryColumns.PROPORTION_GLOBAL.linkLabel
                    - key: primaryColumns.PROPORTION_GROUP.computedValue
                    - key: primaryColumns.PROPORTION_GROUP.linkUrl
                    - key: primaryColumns.PROPORTION_GROUP.linkLabel
                    - key: primaryColumns.PROPORTION_INDIVIDUAL.computedValue
                    - key: primaryColumns.PROPORTION_INDIVIDUAL.linkUrl
                    - key: primaryColumns.PROPORTION_INDIVIDUAL.linkLabel
                    - key: primaryColumns.PROPORTION_INDIVIDUAL_WITH_GLOBAL.computedValue
                    - key: primaryColumns.PROPORTION_INDIVIDUAL_WITH_GLOBAL.linkUrl
                    - key: primaryColumns.PROPORTION_INDIVIDUAL_WITH_GLOBAL.linkLabel
                    - key: primaryColumns.TOTAL_BILLABLE.computedValue
                    - key: primaryColumns.TOTAL_BILLABLE.linkUrl
                    - key: primaryColumns.TOTAL_BILLABLE.linkLabel
                    - key: primaryColumns.TOTAL_BILLABLE_BLOCKS.computedValue
                    - key: primaryColumns.TOTAL_BILLABLE_BLOCKS.linkUrl
                    - key: primaryColumns.TOTAL_BILLABLE_BLOCKS.linkLabel
                    - key: primaryColumns.TOTAL_TIME_LOGGED.computedValue
                    - key: primaryColumns.TOTAL_TIME_LOGGED.linkUrl
                    - key: primaryColumns.TOTAL_TIME_LOGGED.linkLabel
                    - key: primaryColumns.TOTAL_TIME_LOGGED_ROUNDED.computedValue
                    - key: primaryColumns.TOTAL_TIME_LOGGED_ROUNDED.linkUrl
                    - key: primaryColumns.TOTAL_TIME_LOGGED_ROUNDED.linkLabel
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL.computedValue
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL.linkUrl
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL.linkLabel
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED.computedValue
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED.linkUrl
                    - key: primaryColumns.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED.linkLabel
                    - key: primaryColumns.MONTH_OF.outputFormat
                    - key: primaryColumns.CARE_SERVICES.linkUrl
                    - key: primaryColumns.CARE_SERVICES.linkLabel
                    - key: primaryColumns.CARE_SERVICES.computedValue
                    - key: primaryColumns.CCM_PAYER.linkUrl
                    - key: primaryColumns.CCM_PAYER.linkLabel
                    - key: primaryColumns.CCM_PAYER.computedValue
                    - key: primaryColumns.CCM_STAGE.linkUrl
                    - key: primaryColumns.CCM_STAGE.linkLabel
                    - key: primaryColumns.CCM_STAGE.computedValue
                    - key: primaryColumns.CREATED_ON.linkUrl
                    - key: primaryColumns.CREATED_ON.linkLabel
                    - key: primaryColumns.CREATED_ON.computedValue
                    - key: primaryColumns.CUSTOMER_FACILITY.linkUrl
                    - key: primaryColumns.CUSTOMER_FACILITY.linkLabel
                    - key: primaryColumns.CUSTOMER_FACILITY.computedValue
                    - key: primaryColumns.LEADSQUARED_ID.linkUrl
                    - key: primaryColumns.LEADSQUARED_ID.linkLabel
                    - key: primaryColumns.LEADSQUARED_ID.computedValue
                    - key: primaryColumns.LEAD_STAGE.linkUrl
                    - key: primaryColumns.LEAD_STAGE.linkLabel
                    - key: primaryColumns.LEAD_STAGE.computedValue
                    - key: primaryColumns.LEAD_TYPE.linkUrl
                    - key: primaryColumns.LEAD_TYPE.linkLabel
                    - key: primaryColumns.LEAD_TYPE.computedValue
                    - key: primaryColumns.PATIENT_DOB.linkUrl
                    - key: primaryColumns.PATIENT_DOB.linkLabel
                    - key: primaryColumns.PATIENT_DOB.computedValue
                    - key: primaryColumns.PATIENT_FIRST_NAME.linkUrl
                    - key: primaryColumns.PATIENT_FIRST_NAME.linkLabel
                    - key: primaryColumns.PATIENT_FIRST_NAME.computedValue
                    - key: primaryColumns.PATIENT_LAST_NAME.linkUrl
                    - key: primaryColumns.PATIENT_LAST_NAME.linkLabel
                    - key: primaryColumns.PATIENT_LAST_NAME.computedValue
                    - key: primaryColumns.RPM_PAYER.linkUrl
                    - key: primaryColumns.RPM_PAYER.linkLabel
                    - key: primaryColumns.RPM_PAYER.computedValue
                    - key: primaryColumns.RPM_STAGE.linkUrl
                    - key: primaryColumns.RPM_STAGE.linkLabel
                    - key: primaryColumns.RPM_STAGE.computedValue
                    - key: primaryColumns.VISITING_PROVIDER.linkUrl
                    - key: primaryColumns.VISITING_PROVIDER.linkLabel
                    - key: primaryColumns.VISITING_PROVIDER.computedValue
                    - key: primaryColumns.WELLNESS_PAYER.linkUrl
                    - key: primaryColumns.WELLNESS_PAYER.linkLabel
                    - key: primaryColumns.WELLNESS_PAYER.computedValue
                    - key: primaryColumns.WELLNESS_STAGE.linkUrl
                    - key: primaryColumns.WELLNESS_STAGE.linkLabel
                    - key: primaryColumns.WELLNESS_STAGE.computedValue
                    - key: primaryColumns.MONTH_ADHERENCE_RATE.linkUrl
                    - key: primaryColumns.MONTH_ADHERENCE_RATE.linkLabel
                    - key: primaryColumns.MONTH_ADHERENCE_RATE.computedValue
                    - key: primaryColumns.QUARTER_ADHERENCE_RATE.linkUrl
                    - key: primaryColumns.QUARTER_ADHERENCE_RATE.linkLabel
                    - key: primaryColumns.QUARTER_ADHERENCE_RATE.computedValue
                    - key: primaryColumns.READING_DAYS_LAST_MONTH.linkUrl
                    - key: primaryColumns.READING_DAYS_LAST_MONTH.linkLabel
                    - key: primaryColumns.READING_DAYS_LAST_MONTH.computedValue
                    - key: primaryColumns.READING_DAYS_LAST_QUARTER.linkUrl
                    - key: primaryColumns.READING_DAYS_LAST_QUARTER.linkLabel
                    - key: primaryColumns.READING_DAYS_LAST_QUARTER.computedValue
                    - key: primaryColumns.READING_DAYS_LAST_THREE.linkUrl
                    - key: primaryColumns.READING_DAYS_LAST_THREE.linkLabel
                    - key: primaryColumns.READING_DAYS_LAST_THREE.computedValue
                    - key: primaryColumns.READING_DAYS_LAST_WEEK.linkUrl
                    - key: primaryColumns.READING_DAYS_LAST_WEEK.linkLabel
                    - key: primaryColumns.READING_DAYS_LAST_WEEK.computedValue
                    - key: primaryColumns.THREE_DAY_ADHERENCE_RATE.linkUrl
                    - key: primaryColumns.THREE_DAY_ADHERENCE_RATE.linkLabel
                    - key: primaryColumns.THREE_DAY_ADHERENCE_RATE.computedValue
                    - key: primaryColumns.WEEK_ADHERENCE_RATE.linkUrl
                    - key: primaryColumns.WEEK_ADHERENCE_RATE.linkLabel
                    - key: primaryColumns.WEEK_ADHERENCE_RATE.computedValue
                    - key: primaryColumns.MONTHS_SINCE_CREATED.linkUrl
                    - key: primaryColumns.MONTHS_SINCE_CREATED.linkLabel
                    - key: primaryColumns.MONTHS_SINCE_CREATED.computedValue
                    - key: primaryColumns.TIME_LEFT.linkUrl
                    - key: primaryColumns.TIME_LEFT.linkLabel
                    - key: primaryColumns.TIME_LEFT.computedValue
                    - key: primaryColumns.TRUE_CARE_LINK.computedValue
                    - key: primaryColumns.TRUE_CARE_LINK.linkLabel
                    - key: primaryColumns.ASSIGNED_NAVIGATOR_TIME_LOGGED.computedValue
                    - key: primaryColumns.ASSIGNED_NAVIGATOR_TIME_LOGGED.linkUrl
                    - key: primaryColumns.ASSIGNED_NAVIGATOR_TIME_LOGGED.linkLabel
                    - key: primaryColumns.DAYS_FROM_LAST_ENC.computedValue
                    - key: primaryColumns.DAYS_FROM_LAST_ENC.linkUrl
                    - key: primaryColumns.DAYS_FROM_LAST_ENC.linkLabel
                    - key: primaryColumns.LATEST_ENC_CREATED_TIME.computedValue
                    - key: primaryColumns.LATEST_ENC_CREATED_TIME.linkUrl
                    - key: primaryColumns.LATEST_ENC_CREATED_TIME.linkLabel
                  dynamicPropertyPathList:
                    - key: primaryColumns.MONTH_OF.outputFormat
                  dynamicTriggerPathList:
                    - key: onRowClicked
                    - key: onSaveChanges
                    - key: onCancelChanges
                  gridColumns: 95
                  height:
                    mode: gridUnit
                    value: 66
                  horizontalAlignment: LEFT
                  isDownloadable: true
                  isFilterable: true
                  isLoading: false
                  isSearchable: false
                  isVisible: true
                  label: Data
                  left:
                    mode: gridUnit
                    value: 0
                  onCancelChanges:
                    - id: d3qag7isi0
                      newWindow: true
                  onRowClicked:
                    - id: 9gbsc2ql4n
                      newWindow: true
                  onSaveChanges:
                    - id: xowve3qe8z
                      newWindow: true
                  pageType: NONE
                  parentId: dwpvpsnarl
                  primaryColumns:
                    ASSIGNED_NAVIGATOR_TIME_LOGGED:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ASSIGNED_NAVIGATOR_TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: ASSIGNED_NAVIGATOR_TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Care Navigator
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.ASSIGNED_NAVIGATOR_TIME_LOGGED })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.ASSIGNED_NAVIGATOR_TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    AT_LEAST_ONE_BILLABLE_BLOCK:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.AT_LEAST_ONE_BILLABLE_BLOCK })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: AT_LEAST_ONE_BILLABLE_BLOCK
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 0
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: AT_LEAST_ONE_BILLABLE_BLOCK
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.AT_LEAST_ONE_BILLABLE_BLOCK })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.AT_LEAST_ONE_BILLABLE_BLOCK })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CARE_NAVIGATOR:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CARE_NAVIGATOR })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CARE_NAVIGATOR
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 1
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Care Navigator
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CARE_NAVIGATOR })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_NAVIGATOR })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CARE_SERVICES:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CARE_SERVICES })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CARE_SERVICES
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 2
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CARE_SERVICES
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CARE_SERVICES })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CARE_SERVICES })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CCM_PAYER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CCM_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CCM_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 3
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CCM_PAYER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CCM_PAYER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CCM_STAGE:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CCM_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CCM_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 4
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: CCM
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CCM_STAGE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CCM_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig:
                        Active:
                          color: "#14CDB733"
                        Cancelled:
                          color: "#FF484833"
                        Candidate:
                          color: "#FF9F3533"
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CREATED_ON:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CREATED_ON })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CREATED_ON
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 5
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CREATED_ON
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CREATED_ON })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CREATED_ON })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CUSTOMER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CUSTOMER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CUSTOMER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 6
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CUSTOMER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CUSTOMER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    CUSTOMER_FACILITY:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CUSTOMER_FACILITY })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: CUSTOMER_FACILITY
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 7
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CUSTOMER_FACILITY
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.CUSTOMER_FACILITY })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.CUSTOMER_FACILITY })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    DAYS_FROM_LAST_ENC:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DAYS_FROM_LAST_ENC })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: DAYS_FROM_LAST_ENC
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Last Touch (Days)
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DAYS_FROM_LAST_ENC })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DAYS_FROM_LAST_ENC })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    DOB:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DOB })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: DOB
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 8
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: DOB
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.DOB })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.DOB })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    FIRST_NAME:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.FIRST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: FIRST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 9
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: FIRST_NAME
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.FIRST_NAME })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.FIRST_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    GLOBAL_OUTLIER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GLOBAL_OUTLIER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: GLOBAL_OUTLIER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 10
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: GLOBAL_OUTLIER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GLOBAL_OUTLIER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.GLOBAL_OUTLIER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    GLOBAL_PROPORTIONAL_MULTIPLIER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GLOBAL_PROPORTIONAL_MULTIPLIER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: GLOBAL_PROPORTIONAL_MULTIPLIER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 11
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: GLOBAL_PROPORTIONAL_MULTIPLIER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GLOBAL_PROPORTIONAL_MULTIPLIER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.GLOBAL_PROPORTIONAL_MULTIPLIER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    GROUP_OUTLIER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GROUP_OUTLIER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: GROUP_OUTLIER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 12
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: GROUP_OUTLIER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GROUP_OUTLIER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.GROUP_OUTLIER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    GROUP_PROPORTIONAL_MULTIPLIER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GROUP_PROPORTIONAL_MULTIPLIER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: GROUP_PROPORTIONAL_MULTIPLIER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 13
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: GROUP_PROPORTIONAL_MULTIPLIER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.GROUP_PROPORTIONAL_MULTIPLIER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.GROUP_PROPORTIONAL_MULTIPLIER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    INDIVIDUALLY_BILLABLE_BLOCKS:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.INDIVIDUALLY_BILLABLE_BLOCKS })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: INDIVIDUALLY_BILLABLE_BLOCKS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 14
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: INDIVIDUALLY_BILLABLE_BLOCKS
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.INDIVIDUALLY_BILLABLE_BLOCKS })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.INDIVIDUALLY_BILLABLE_BLOCKS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    INDIVIDUAL_TIME_LOGGED:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.INDIVIDUAL_TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: INDIVIDUAL_TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 15
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CN+1TH
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.INDIVIDUAL_TIME_LOGGED })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.INDIVIDUAL_TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LAST_NAME:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LAST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      fontStyle: BOLD
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LAST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 16
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LAST_NAME
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LAST_NAME })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LAST_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LATEST_ENC_CREATED_TIME:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LATEST_ENC_CREATED_TIME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LATEST_ENC_CREATED_TIME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 19
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LATEST_ENC_CREATED_TIME
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LATEST_ENC_CREATED_TIME })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LATEST_ENC_CREATED_TIME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEADSQUARED_ID:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEADSQUARED_ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEADSQUARED_ID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 17
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LEADSQUARED_ID
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEADSQUARED_ID })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEADSQUARED_ID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEAD_STAGE:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEAD_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEAD_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 18
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Stage
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEAD_STAGE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig:
                        Active:
                          color: "#14CDB733"
                        Cancelled:
                          color: "#FF484833"
                        Deceased:
                          color: "#9D585833"
                        Hospice:
                          color: "#FF62A433"
                        Inactive:
                          color: "#7C4FF833"
                        Paused:
                          color: "#27BBFF33"
                        Re-engage:
                          color: "#FF9F3533"
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    LEAD_TYPE:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEAD_TYPE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: LEAD_TYPE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 19
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: LEAD_TYPE
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.LEAD_TYPE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.LEAD_TYPE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MONTHS_SINCE_CREATED:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTHS_SINCE_CREATED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MONTHS_SINCE_CREATED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 23
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Months
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTHS_SINCE_CREATED })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTHS_SINCE_CREATED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig:
                        "0":
                          color: "#90e789b3"
                        "1":
                          color: "#95d090b3"
                        "10":
                          color: "#000000"
                        "2":
                          color: "#9dc09ab3"
                        "3":
                          color: "#97a896b3"
                        "4":
                          color: "#878f86b3"
                        "5":
                          color: "#6c706cb3"
                        "6":
                          color: "#444444b3"
                        "7":
                          color: "#262626b3"
                        "8":
                          color: "#000000b3"
                        "9":
                          color: "#000000"
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MONTH_ADHERENCE_RATE:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTH_ADHERENCE_RATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: MONTH_ADHERENCE_RATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 23
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 30-Day
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTH_ADHERENCE_RATE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH_ADHERENCE_RATE })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    MONTH_OF:
                      columnType: date
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTH_OF })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: MONTH_OF
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 20
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Month Of
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.MONTH_OF })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.MONTH_OF })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      outputFormat: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return 'MM-YYYY'})}}"
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_DOB:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_DOB })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_DOB
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 21
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PATIENT_DOB
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_DOB })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_DOB })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_FIRST_NAME:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_FIRST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: PATIENT_FIRST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 22
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: First
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_FIRST_NAME })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_FIRST_NAME })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_INDIVIDUAL_ID:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_INDIVIDUAL_ID
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 23
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PATIENT_INDIVIDUAL_ID
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PATIENT_INDIVIDUAL_ID })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PATIENT_LAST_NAME:
                      columnType: link
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_LAST_NAME })}}"
                      enableFilter: true
                      enableSort: true
                      fontStyle: BOLD
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PATIENT_LAST_NAME
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 24
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Last
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PATIENT_LAST_NAME })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TRUE_CARE_LINK })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROPORTION_GLOBAL:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_GLOBAL })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PROPORTION_GLOBAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 25
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PROPORTION_GLOBAL
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_GLOBAL })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROPORTION_GLOBAL })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROPORTION_GROUP:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_GROUP })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: PROPORTION_GROUP
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 26
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: CN
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_GROUP })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROPORTION_GROUP })}}"
                      maximumFractionDigits: "0"
                      minimumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROPORTION_INDIVIDUAL:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_INDIVIDUAL })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: PROPORTION_INDIVIDUAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 27
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Patient
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_INDIVIDUAL })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROPORTION_INDIVIDUAL })}}"
                      maximumFractionDigits: "0"
                      minimumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    PROPORTION_INDIVIDUAL_WITH_GLOBAL:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_INDIVIDUAL_WITH_GLOBAL
                        })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: PROPORTION_INDIVIDUAL_WITH_GLOBAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 28
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: PROPORTION_INDIVIDUAL_WITH_GLOBAL
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.PROPORTION_INDIVIDUAL_WITH_GLOBAL
                        })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.PROPORTION_INDIVIDUAL_WITH_GLOBAL })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    QUARTER_ADHERENCE_RATE:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.QUARTER_ADHERENCE_RATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: QUARTER_ADHERENCE_RATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 33
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 90-Day
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.QUARTER_ADHERENCE_RATE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.QUARTER_ADHERENCE_RATE })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    READING_DAYS_LAST_MONTH:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_MONTH })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: READING_DAYS_LAST_MONTH
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 34
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: READING_DAYS_LAST_MONTH
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_MONTH })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS_LAST_MONTH })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    READING_DAYS_LAST_QUARTER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_QUARTER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: READING_DAYS_LAST_QUARTER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 35
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: READING_DAYS_LAST_QUARTER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_QUARTER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS_LAST_QUARTER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    READING_DAYS_LAST_THREE:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_THREE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: READING_DAYS_LAST_THREE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 36
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: READING_DAYS_LAST_THREE
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_THREE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS_LAST_THREE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    READING_DAYS_LAST_WEEK:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_WEEK })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: READING_DAYS_LAST_WEEK
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 37
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: READING_DAYS_LAST_WEEK
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.READING_DAYS_LAST_WEEK })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.READING_DAYS_LAST_WEEK })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    RPM_PAYER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.RPM_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: RPM_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 29
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: RPM_PAYER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.RPM_PAYER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    RPM_STAGE:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.RPM_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: RPM_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 30
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: RPM
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.RPM_STAGE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.RPM_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig:
                        Active:
                          color: "#14CDB733"
                        Cancelled:
                          color: "#FF484833"
                        Inactive:
                          color: "#FF9F3533"
                        Paused:
                          color: "#27BBFF33"
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    THREE_DAY_ADHERENCE_RATE:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.THREE_DAY_ADHERENCE_RATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: THREE_DAY_ADHERENCE_RATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 41
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 3-Day
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.THREE_DAY_ADHERENCE_RATE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.THREE_DAY_ADHERENCE_RATE })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TIME_LEFT:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TIME_LEFT })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TIME_LEFT
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 42
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: "# Left to Bill"
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TIME_LEFT })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TIME_LEFT })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_BILLABLE:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_BILLABLE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_BILLABLE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 31
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_BILLABLE
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_BILLABLE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_BILLABLE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_BILLABLE_BLOCKS:
                      columnType: tags
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_BILLABLE_BLOCKS })}}"
                      enableFilter: true
                      enableSort: true
                      fontStyle: BOLD
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_BILLABLE_BLOCKS
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 32
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: Billable Codes
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_BILLABLE_BLOCKS })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_BILLABLE_BLOCKS })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig:
                        "0":
                          color: "#0000001a"
                        "1":
                          color: "#1ac93026"
                        "10":
                          color: "#ff484866"
                        "11":
                          color: "#ff484880"
                        "12":
                          color: "#ff484899"
                        "2":
                          color: "#1ac9304d"
                        "3":
                          color: "#1ac93073"
                        "4":
                          color: "#1ac93099"
                        "5":
                          color: "#1ac930bf"
                        "6":
                          color: "#1aec34d9"
                        "7":
                          color: "#FF9F3533"
                        "8":
                          color: "#ff9f354d"
                        "9":
                          color: "#ff9f3566"
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_TIME_LOGGED:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_TIME_LOGGED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 33
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_TIME_LOGGED
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_TIME_LOGGED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_TIME_LOGGED_ROUNDED:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_ROUNDED })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_TIME_LOGGED_ROUNDED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 34
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: Billable
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_ROUNDED })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_TIME_LOGGED_ROUNDED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_TIME_LOGGED_WITH_GLOBAL:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TOTAL_TIME_LOGGED_WITH_GLOBAL
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 35
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_TIME_LOGGED_WITH_GLOBAL
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED:
                      columnType: number
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED
                        })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 36
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED
                        })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.TOTAL_TIME_LOGGED_WITH_GLOBAL_ROUNDED })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    TRUE_CARE_LINK:
                      columnType: link
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TRUE_CARE_LINK })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: TRUE_CARE_LINK
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 47
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: TRUE_CARE_LINK
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.TRUE_CARE_LINK })}}"
                      linkUrl: ""
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    VISITING_PROVIDER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.VISITING_PROVIDER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: VISITING_PROVIDER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 37
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: VISITING_PROVIDER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.VISITING_PROVIDER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.VISITING_PROVIDER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    WEEK_ADHERENCE_RATE:
                      columnType: percentage
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WEEK_ADHERENCE_RATE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: RIGHT
                      id: WEEK_ADHERENCE_RATE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 51
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: true
                      label: 7-Day
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WEEK_ADHERENCE_RATE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WEEK_ADHERENCE_RATE })}}"
                      maximumFractionDigits: "0"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    WELLNESS_PAYER:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WELLNESS_PAYER })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: WELLNESS_PAYER
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 38
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: WELLNESS_PAYER
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WELLNESS_PAYER })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_PAYER })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                    WELLNESS_STAGE:
                      columnType: text
                      computedValue: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WELLNESS_STAGE })}}"
                      enableFilter: true
                      enableSort: true
                      headerIcon: ""
                      headerIconPosition: LEFT
                      horizontalAlignment: LEFT
                      id: WELLNESS_STAGE
                      imageBorderRadius:
                        mode: px
                        value: 0
                      imageSize: FIT
                      index: 39
                      isDerived: false
                      isEditableOnInsertion: true
                      isVisible: false
                      label: WELLNESS_STAGE
                      linkLabel: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => {
                        return currentRow.WELLNESS_STAGE })}}"
                      linkUrl: "{{MonthlyPatientLog.tableDataWithInserts.map((currentRow) => { return
                        currentRow.WELLNESS_STAGE })}}"
                      notation: standard
                      openImageUrl: true
                      openInNewTab: true
                      tagDisplayConfig: {}
                      textSize: PARAGRAPH
                      useLabelAsDisplayValue: true
                      verticalAlignment: CENTER
                      width: 150
                  showColumnBorders: true
                  tableData: "{{getTimeAdherence.response}}"
                  tableHeader: ""
                  textSize: PARAGRAPH
                  top:
                    mode: gridUnit
                    value: 4
                  type: TABLE_WIDGET
                  verticalAlignment: CENTER
                  widgetId: hmhk022xau
                  widgetName: MonthlyPatientLog
                  width:
                    mode: gridUnit
                    value: 95
                - animateLoading: true
                  collapseWhenHidden: false
                  defaultOptionValue: Jewell Dykstra
                  dynamicBindingPathList: []
                  dynamicTriggerPathList:
                    - key: onOptionChange
                    - key: onSearchTextChange
                    - key: onClear
                  gridColumns: 23
                  height:
                    mode: gridUnit
                    value: 3
                  isLoading: false
                  isVertical: false
                  isVisible: true
                  label: Care Navigator
                  left:
                    mode: gridUnit
                    value: 0
                  onClear:
                    - id: 0k5o8mol3w
                      newWindow: true
                  onOptionChange:
                    - apiNames:
                        - getTimeAdherence
                      id: ub75f9jjb7
                      newWindow: true
                      type: executeApi
                  onSearchTextChange:
                    - id: rw4qwocmux
                      newWindow: true
                  options: |-
                    [
                    	'Garrett Dunn',
                    	'Sandy Farley',
                    	'Hayden Geitner',
                    	'Marc Prescott',
                    	'Beth Sims',
                    	'Cailie Smith'
                    ]
                  parentId: dwpvpsnarl
                  placeholderText: Select an option
                  top:
                    mode: gridUnit
                    value: 0
                  type: DROP_DOWN_WIDGET
                  widgetId: 0rjttzyldd
                  widgetName: dropdownCN
                  width:
                    mode: gridUnit
                    value: 23
                - animateLoading: true
                  collapseWhenHidden: false
                  dynamicBindingPathList: []
                  dynamicTriggerPathList: []
                  gridColumns: 24
                  height:
                    mode: gridUnit
                    value: 3
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 72
                  parentId: dwpvpsnarl
                  text: Reading Adherence Rates
                  textAlign: CENTER
                  textStyle: HEADING_2
                  textType: text
                  top:
                    mode: gridUnit
                    value: 1
                  type: TEXT_WIDGET
                  verticalAlign: AUTO
                  widgetId: zll8fl5amp
                  widgetName: Text1
                  width:
                    mode: gridUnit
                    value: 24
              collapseWhenHidden: false
              containerStyle: none
              detachFromLayout: true
              dragDisabled: true
              dynamicBindingPathList: []
              dynamicTriggerPathList: []
              gridColumns: 96
              height:
                mode: fitContent
                value: 70
              isLoading: false
              isVisible: true
              layout: FIXED_GRID
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: px
                value: 1292
              parentId: lm2jrimm2x
              top:
                mode: gridUnit
                value: 0
              type: CANVAS_WIDGET
              widgetId: dwpvpsnarl
              widgetName: Canvas1
              width:
                mode: gridUnit
                value: 0
          detachFromLayout: true
          dragDisabled: true
          gridColumns: 96
          height:
            mode: fitContent
            value: 72
          isLoading: false
          isVisible: true
          left:
            mode: gridUnit
            value: 0
          parentId: "0"
          shouldScrollContents: true
          top:
            mode: gridUnit
            value: 0
          type: SECTION_WIDGET
          widgetId: lm2jrimm2x
          widgetName: Section1
          width:
            mode: gridUnit
            value: 96
        - canOutsideClickClose: true
          children:
            - canExtend: true
              children:
                - canExtend: true
                  children:
                    - animateLoading: true
                      collapseWhenHidden: false
                      gridColumns: 70
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      parentId: tafzsdmatz
                      text: Slideout Title
                      textAlign: LEFT
                      textStyle: HEADING_1
                      textType: text
                      top:
                        mode: gridUnit
                        value: 0
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: nrjiot9jbj
                      widgetName: Text3
                      width:
                        mode: gridUnit
                        value: 70
                    - animateLoading: true
                      cachedColumnSettings: {}
                      collapseWhenHidden: false
                      columnOrder:
                        - photo
                        - name
                        - twitter
                        - date_joined
                        - email
                        - action
                      compactMode: SHORT
                      defaultFilters: "{}"
                      defaultSelectedRow: "0"
                      derivedColumns: {}
                      dynamicBindingPathList:
                        - key: primaryColumns.name.linkUrl
                        - key: primaryColumns.name.linkLabel
                        - key: primaryColumns.name.computedValue
                        - key: primaryColumns.name.displayedValue
                        - key: primaryColumns.twitter.computedValue
                        - key: primaryColumns.twitter.linkUrl
                        - key: primaryColumns.twitter.linkLabel
                        - key: primaryColumns.date_joined.computedValue
                        - key: primaryColumns.date_joined.linkUrl
                        - key: primaryColumns.date_joined.linkLabel
                        - key: primaryColumns.photo.computedValue
                        - key: primaryColumns.photo.linkUrl
                        - key: primaryColumns.photo.linkLabel
                        - key: primaryColumns.photo.displayedValue
                        - key: primaryColumns.email.computedValue
                        - key: primaryColumns.email.linkUrl
                        - key: primaryColumns.email.linkLabel
                        - key: primaryColumns.email.displayedValue
                        - key: primaryColumns.action.computedValue
                        - key: primaryColumns.action.linkUrl
                        - key: primaryColumns.action.linkLabel
                        - key: primaryColumns.action.buttonLabel
                        - key: primaryColumns.action.displayedValue
                      dynamicTriggerPathList:
                        - key: primaryColumns.action.onClick
                        - key: onRowClicked
                        - key: onSaveChanges
                        - key: onCancelChanges
                      gridColumns: 66
                      height:
                        mode: gridUnit
                        value: 30
                      horizontalAlignment: LEFT
                      isDownloadable: true
                      isFilterable: true
                      isLoading: false
                      isSearchable: true
                      isVisible: true
                      label: Data
                      left:
                        mode: gridUnit
                        value: 0
                      onCancelChanges:
                        - id: 1cp7733mzr
                          newWindow: true
                      onRowClicked:
                        - id: wzbhcrvvug
                          newWindow: true
                      onSaveChanges:
                        - id: efuig7lb6l
                          newWindow: true
                      pageType: NONE
                      parentId: tafzsdmatz
                      primaryColumns:
                        action:
                          buttonLabel: Approve
                          columnType: button
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: action
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 5
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: action
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          notation: standard
                          onClick:
                            - code: showAlert(currentRow.name + ' is approved!', 'success')
                              id: id0
                              newWindow: true
                              type: runJs
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        date_joined:
                          columnType: date
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: date_joined
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 2
                          inputFormat: YYYY-MM-DD
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: date joined
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          outputFormat: MM-DD-YYYY
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        email:
                          columnType: text
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: email
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 4
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: email
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        name:
                          columnType: text
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: name
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 0
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: name
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        photo:
                          columnType: image
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: photo
                          imageBorderRadius:
                            mode: "%"
                            value: 50
                          imageSize: FIXED
                          index: 3
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: photo
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        twitter:
                          columnType: link
                          computedValue: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.twitter })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: twitter
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 1
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: twitter
                          linkLabel: "{{Table1.tableDataWithInserts.map((currentRow) => { return '@' +
                            currentRow.twitter?.split('/').pop()})}}"
                          linkUrl: "{{Table1.tableDataWithInserts.map((currentRow) => { return
                            currentRow.twitter })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                      tableData: |-
                        [
                          {
                            "name": "Billie Eilish",
                            "twitter": "https://twitter.com/billieeilish",
                            "date_joined": "2019-01-06",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/billie_eilish.png",
                            "email": "bad_guy@gmail.com",
                            "action": ""
                          },
                          {
                            "name": "Thom Yorke",
                            "twitter": "https://twitter.com/thomyorke",
                            "date_joined": "2019-01-05",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/thom_yorke.png",
                            "email": "karma_police_thom@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Katy Perry",
                            "twitter": "https://twitter.com/katyperry",
                            "date_joined": "2019-01-02",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/katy_perry.png",
                            "email": "katycat@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Ryan Gosling",
                            "twitter": "https://twitter.com/RyanGosling",
                            "date_joined": "2019-01-03",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/ryan_gosling.png",
                            "email": "ryan_the_notebook@gmail.com",
                            "action": ""
                          },
                          {
                            "name": "Dua Lipa",
                            "twitter": "https://twitter.com/DUALIPA",
                            "date_joined": "2019-01-07",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/dua_lipa.png",
                            "email": "dua_levitating@yahoo.com",
                            "action": ""
                          },
                          {
                            "name": "Beyonce Knowles",
                            "twitter": "https://twitter.com/Beyonce",
                            "date_joined": "2019-01-09",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/beyonce_knowles.png",
                            "email": "beyonce_run_the_world@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Lopez Jennifer",
                            "twitter": "https://twitter.com/JLo",
                            "date_joined": "2019-01-04",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/jennifer_lopez.png",
                            "email": "jenny_from_the_block@yahoo.com",
                            "action": ""
                          }
                        ]
                      tableHeader: Users
                      textSize: PARAGRAPH
                      top:
                        mode: gridUnit
                        value: 4
                      type: TABLE_WIDGET
                      verticalAlignment: CENTER
                      widgetId: gy833b68eg
                      widgetName: Table1
                      width:
                        mode: gridUnit
                        value: 66
                    - animateLoading: true
                      chartData: |-
                        [
                          {
                            "city": "Toronto",
                            "population": 2930000,
                            "country": "Canada"
                          },
                          {
                            "city": "New York",
                            "population": 8419000,
                            "country": "USA"
                          },
                          {
                            "city": "Vancouver",
                            "population": 675218,
                            "country": "Canada"
                          },
                          {
                            "city": "San Francisco",
                            "population": 874961,
                            "country": "USA"
                          }
                        ]
                      chartDefinition: ui
                      chartType: COLUMN_CHART
                      collapseWhenHidden: false
                      columnInfo:
                        - canBeNumeric: false
                          name: city
                          type: string
                        - canBeNumeric: false
                          name: country
                          type: string
                        - canBeNumeric: true
                          name: population
                          type: number
                      dynamicBindingPathList: []
                      dynamicTriggerPathList:
                        - key: onSelectData
                      gridColumns: 35
                      groupBy:
                        field: ""
                      headerTitle: My chart
                      height:
                        mode: gridUnit
                        value: 27
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      onSelectData:
                        - id: see0pd32kq
                          newWindow: true
                      parentId: tafzsdmatz
                      plotlyChartJson:
                        data:
                          - type: bar
                            x:
                              - 1
                              - 2
                              - 3
                            y:
                              - 2
                              - 5
                              - 3
                        layout: {}
                      size:
                        field: ""
                      top:
                        mode: gridUnit
                        value: 35
                      type: CHART_WIDGET
                      widgetId: u8t4swo9hq
                      widgetName: Chart1
                      width:
                        mode: gridUnit
                        value: 35
                      x:
                        axisTitle: ""
                        dataType: auto
                        field: city
                      y:
                        axisTitle: ""
                        dataType: number
                        notation: standard
                        series:
                          - field: population
                  collapseWhenHidden: false
                  detachFromLayout: true
                  gridColumns: 80
                  height:
                    mode: fitContent
                    value: 69
                  isDisabled: false
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 0
                  minHeight:
                    mode: px
                    value: 800
                  parentId: 2404l7dsek
                  shouldScrollContents: true
                  top:
                    mode: gridUnit
                    value: 0
                  type: CANVAS_WIDGET
                  widgetId: tafzsdmatz
                  widgetName: Canvas2
                  width:
                    mode: gridUnit
                    value: 0
              collapseWhenHidden: false
              detachFromLayout: true
              dragDisabled: true
              gridColumns: 80
              height:
                mode: fitContent
                value: 71
              isLoading: false
              isVisible: true
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: px
                value: 800
              parentId: tw4avekhqd
              top:
                mode: gridUnit
                value: 0
              type: SECTION_WIDGET
              widgetId: 2404l7dsek
              widgetName: Section2
              width:
                mode: gridUnit
                value: 0
          detachFromLayout: true
          dynamicBindingPathList: []
          dynamicTriggerPathList:
            - key: onOpen
            - key: onClose
          gridColumns: 80
          hasBackdrop: true
          height:
            mode: gridUnit
            value: 69
          isLoading: false
          left:
            mode: gridUnit
            value: 0
          onClose:
            - apiNames:
                - getTimeAdherence
              id: ye0z5k41cc
              newWindow: true
              type: executeApi
          onOpen:
            - apiNames:
                - getTimeAdherence
              id: lcq1b9v970
              newWindow: true
              type: executeApi
          parentId: "0"
          shouldScrollContents: true
          top:
            mode: gridUnit
            value: 0
          type: SLIDEOUT_WIDGET
          widgetId: tw4avekhqd
          widgetName: Slideout1
          width:
            mode: gridUnit
            value: 80
        - canOutsideClickClose: true
          children:
            - canExtend: true
              children:
                - canExtend: true
                  children:
                    - animateLoading: true
                      collapseWhenHidden: true
                      gridColumns: 91
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      parentId: gvp4cuo8bl
                      text: Modal Title
                      textAlign: LEFT
                      textStyle: HEADING_2
                      textType: text
                      top:
                        mode: gridUnit
                        value: 0
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: nddxz57sh7
                      widgetName: Text4
                      width:
                        mode: gridUnit
                        value: 91
                    - animateLoading: true
                      buttonStyle: SECONDARY_BUTTON
                      collapseWhenHidden: true
                      docsUrl: https://docs.superblocks.com/components/button
                      dynamicTriggerPathList:
                        - key: onClick
                      gridColumns: 20
                      height:
                        mode: gridUnit
                        value: 3
                      iconPosition: LEFT
                      isDefaultClickDisabled: true
                      isDisabled: false
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 54
                      onClick:
                        - direction: close
                          id: kf05y1i2rm
                          name: Modal1
                          type: controlModal
                      parentId: gvp4cuo8bl
                      text: Cancel
                      top:
                        mode: gridUnit
                        value: 28
                      type: BUTTON_WIDGET
                      widgetId: bryzgal8yn
                      widgetName: Button1
                      width:
                        mode: gridUnit
                        value: 20
                    - animateLoading: true
                      buttonStyle: PRIMARY_BUTTON
                      collapseWhenHidden: true
                      docsUrl: https://docs.superblocks.com/components/button
                      gridColumns: 20
                      height:
                        mode: gridUnit
                        value: 3
                      iconPosition: LEFT
                      isDefaultClickDisabled: true
                      isDisabled: false
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 76
                      parentId: gvp4cuo8bl
                      text: Confirm
                      top:
                        mode: gridUnit
                        value: 28
                      type: BUTTON_WIDGET
                      widgetId: kn6plseaft
                      widgetName: Button2
                      width:
                        mode: gridUnit
                        value: 20
                  collapseWhenHidden: true
                  detachFromLayout: true
                  gridColumns: 96
                  height:
                    mode: fitContent
                    value: 31
                  isDisabled: false
                  isInModal: true
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 0
                  minHeight:
                    mode: px
                    value: 340
                  parentId: phbvgbs6yb
                  shouldScrollContents: true
                  top:
                    mode: gridUnit
                    value: 0
                  type: CANVAS_WIDGET
                  widgetId: gvp4cuo8bl
                  widgetName: Canvas3
                  width:
                    mode: gridUnit
                    value: 0
              collapseWhenHidden: true
              detachFromLayout: true
              dragDisabled: true
              gridColumns: 96
              height:
                mode: fitContent
                value: 33
              isLoading: false
              isVisible: true
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: px
                value: 340
              parentId: kf05y1i2rm
              top:
                mode: gridUnit
                value: 0
              type: SECTION_WIDGET
              widgetId: phbvgbs6yb
              widgetName: Section3
              width:
                mode: gridUnit
                value: 0
          detachFromLayout: true
          dynamicBindingPathList: []
          dynamicTriggerPathList:
            - key: onOpen
            - key: onClose
          gridColumns: 96
          hasBackdrop: true
          height:
            mode: gridUnit
            value: 0
          heightPreset: MEDIUM
          isLoading: false
          left:
            mode: gridUnit
            value: 0
          onClose:
            - id: 7h14jutl2h
              newWindow: true
          onOpen:
            - id: 8l7ctanz9s
              newWindow: true
          parentId: "0"
          shouldScrollContents: true
          top:
            mode: gridUnit
            value: 0
          type: MODAL_WIDGET
          widgetId: kf05y1i2rm
          widgetName: Modal1
          width:
            mode: gridUnit
            value: 96
          widthPreset: MEDIUM
        - canOutsideClickClose: true
          children:
            - canExtend: true
              children:
                - canExtend: true
                  children:
                    - animateLoading: true
                      collapseWhenHidden: true
                      dynamicBindingPathList: []
                      dynamicTriggerPathList: []
                      gridColumns: 70
                      height:
                        mode: gridUnit
                        value: 3
                      isLoading: false
                      isVisible: true
                      left:
                        mode: gridUnit
                        value: 0
                      parentId: e63a0l86ih
                      text: Patient Member Details
                      textAlign: LEFT
                      textStyle: HEADING_1
                      textType: text
                      top:
                        mode: gridUnit
                        value: 0
                      type: TEXT_WIDGET
                      verticalAlign: AUTO
                      widgetId: ovkc73pl7d
                      widgetName: Text5
                      width:
                        mode: gridUnit
                        value: 70
                    - animateLoading: true
                      cachedColumnSettings: {}
                      collapseWhenHidden: true
                      columnOrder:
                        - photo
                        - name
                        - twitter
                        - date_joined
                        - email
                        - action
                      compactMode: SHORT
                      defaultFilters: "{}"
                      defaultSelectedRow: "0"
                      derivedColumns: {}
                      dynamicBindingPathList:
                        - key: primaryColumns.name.linkUrl
                        - key: primaryColumns.name.linkLabel
                        - key: primaryColumns.name.computedValue
                        - key: primaryColumns.name.displayedValue
                        - key: primaryColumns.twitter.computedValue
                        - key: primaryColumns.twitter.linkUrl
                        - key: primaryColumns.twitter.linkLabel
                        - key: primaryColumns.date_joined.computedValue
                        - key: primaryColumns.date_joined.linkUrl
                        - key: primaryColumns.date_joined.linkLabel
                        - key: primaryColumns.photo.computedValue
                        - key: primaryColumns.photo.linkUrl
                        - key: primaryColumns.photo.linkLabel
                        - key: primaryColumns.photo.displayedValue
                        - key: primaryColumns.email.computedValue
                        - key: primaryColumns.email.linkUrl
                        - key: primaryColumns.email.linkLabel
                        - key: primaryColumns.email.displayedValue
                        - key: primaryColumns.action.computedValue
                        - key: primaryColumns.action.linkUrl
                        - key: primaryColumns.action.linkLabel
                        - key: primaryColumns.action.buttonLabel
                        - key: primaryColumns.action.displayedValue
                      dynamicTriggerPathList:
                        - key: primaryColumns.action.onClick
                        - key: onRowClicked
                        - key: onSaveChanges
                        - key: onCancelChanges
                      gridColumns: 78
                      height:
                        mode: gridUnit
                        value: 30
                      horizontalAlignment: LEFT
                      isDownloadable: true
                      isFilterable: true
                      isLoading: false
                      isSearchable: true
                      isVisible: true
                      label: Data
                      left:
                        mode: gridUnit
                        value: 1
                      onCancelChanges:
                        - id: 76k58vjci7
                          newWindow: true
                      onRowClicked:
                        - id: 69s1x200zd
                          newWindow: true
                      onSaveChanges:
                        - id: gzkekve5or
                          newWindow: true
                      pageType: NONE
                      parentId: e63a0l86ih
                      primaryColumns:
                        action:
                          buttonLabel: Approve
                          columnType: button
                          computedValue: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: action
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 5
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: action
                          linkLabel: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          linkUrl: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          notation: standard
                          onClick:
                            - code: showAlert(currentRow.name + ' is approved!', 'success')
                              id: id0
                              newWindow: true
                              type: runJs
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        date_joined:
                          columnType: date
                          computedValue: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: date_joined
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 2
                          inputFormat: YYYY-MM-DD
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: date joined
                          linkLabel: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          linkUrl: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          outputFormat: MM-DD-YYYY
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        email:
                          columnType: text
                          computedValue: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: email
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 4
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: email
                          linkLabel: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          linkUrl: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        name:
                          columnType: text
                          computedValue: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: name
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 0
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: name
                          linkLabel: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          linkUrl: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        photo:
                          columnType: image
                          computedValue: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: photo
                          imageBorderRadius:
                            mode: "%"
                            value: 50
                          imageSize: FIXED
                          index: 3
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: photo
                          linkLabel: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          linkUrl: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        twitter:
                          columnType: link
                          computedValue: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.twitter })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: twitter
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 1
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: twitter
                          linkLabel: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return '@' +
                            currentRow.twitter?.split('/').pop()})}}"
                          linkUrl: "{{Call_Log.tableDataWithInserts.map((currentRow) => { return
                            currentRow.twitter })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                      tableData: |-
                        [
                          {
                            "name": "Billie Eilish",
                            "twitter": "https://twitter.com/billieeilish",
                            "date_joined": "2019-01-06",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/billie_eilish.png",
                            "email": "bad_guy@gmail.com",
                            "action": ""
                          },
                          {
                            "name": "Thom Yorke",
                            "twitter": "https://twitter.com/thomyorke",
                            "date_joined": "2019-01-05",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/thom_yorke.png",
                            "email": "karma_police_thom@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Katy Perry",
                            "twitter": "https://twitter.com/katyperry",
                            "date_joined": "2019-01-02",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/katy_perry.png",
                            "email": "katycat@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Ryan Gosling",
                            "twitter": "https://twitter.com/RyanGosling",
                            "date_joined": "2019-01-03",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/ryan_gosling.png",
                            "email": "ryan_the_notebook@gmail.com",
                            "action": ""
                          },
                          {
                            "name": "Dua Lipa",
                            "twitter": "https://twitter.com/DUALIPA",
                            "date_joined": "2019-01-07",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/dua_lipa.png",
                            "email": "dua_levitating@yahoo.com",
                            "action": ""
                          },
                          {
                            "name": "Beyonce Knowles",
                            "twitter": "https://twitter.com/Beyonce",
                            "date_joined": "2019-01-09",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/beyonce_knowles.png",
                            "email": "beyonce_run_the_world@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Lopez Jennifer",
                            "twitter": "https://twitter.com/JLo",
                            "date_joined": "2019-01-04",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/jennifer_lopez.png",
                            "email": "jenny_from_the_block@yahoo.com",
                            "action": ""
                          }
                        ]
                      tableHeader: Users
                      textSize: PARAGRAPH
                      top:
                        mode: gridUnit
                        value: 65
                      type: TABLE_WIDGET
                      verticalAlignment: CENTER
                      widgetId: 2tkbpd0xsr
                      widgetName: Call_Log
                      width:
                        mode: gridUnit
                        value: 78
                    - animateLoading: true
                      cachedColumnSettings: {}
                      collapseWhenHidden: true
                      columnOrder:
                        - photo
                        - name
                        - twitter
                        - date_joined
                        - email
                        - action
                      compactMode: SHORT
                      defaultFilters: "{}"
                      defaultSelectedRow: "0"
                      derivedColumns: {}
                      dynamicBindingPathList:
                        - key: primaryColumns.name.linkUrl
                        - key: primaryColumns.name.linkLabel
                        - key: primaryColumns.name.computedValue
                        - key: primaryColumns.name.displayedValue
                        - key: primaryColumns.twitter.computedValue
                        - key: primaryColumns.twitter.linkUrl
                        - key: primaryColumns.twitter.linkLabel
                        - key: primaryColumns.date_joined.computedValue
                        - key: primaryColumns.date_joined.linkUrl
                        - key: primaryColumns.date_joined.linkLabel
                        - key: primaryColumns.photo.computedValue
                        - key: primaryColumns.photo.linkUrl
                        - key: primaryColumns.photo.linkLabel
                        - key: primaryColumns.photo.displayedValue
                        - key: primaryColumns.email.computedValue
                        - key: primaryColumns.email.linkUrl
                        - key: primaryColumns.email.linkLabel
                        - key: primaryColumns.email.displayedValue
                        - key: primaryColumns.action.computedValue
                        - key: primaryColumns.action.linkUrl
                        - key: primaryColumns.action.linkLabel
                        - key: primaryColumns.action.buttonLabel
                        - key: primaryColumns.action.displayedValue
                      dynamicTriggerPathList:
                        - key: primaryColumns.action.onClick
                        - key: onRowClicked
                        - key: onSaveChanges
                        - key: onCancelChanges
                      gridColumns: 77
                      height:
                        mode: gridUnit
                        value: 60
                      horizontalAlignment: LEFT
                      isDownloadable: true
                      isFilterable: true
                      isLoading: false
                      isSearchable: true
                      isVisible: true
                      label: Data
                      left:
                        mode: gridUnit
                        value: 1
                      onCancelChanges:
                        - id: lgb494v13j
                          newWindow: true
                      onRowClicked:
                        - id: nkpq8smo1k
                          newWindow: true
                      onSaveChanges:
                        - id: kacqwp9pka
                          newWindow: true
                      pageType: NONE
                      parentId: e63a0l86ih
                      primaryColumns:
                        action:
                          buttonLabel: Approve
                          columnType: button
                          computedValue: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: action
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 5
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: action
                          linkLabel: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          linkUrl: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.action })}}"
                          notation: standard
                          onClick:
                            - code: showAlert(currentRow.name + ' is approved!', 'success')
                              id: id0
                              newWindow: true
                              type: runJs
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        date_joined:
                          columnType: date
                          computedValue: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: date_joined
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 2
                          inputFormat: YYYY-MM-DD
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: date joined
                          linkLabel: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          linkUrl: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.date_joined })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          outputFormat: MM-DD-YYYY
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        email:
                          columnType: text
                          computedValue: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: email
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 4
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: email
                          linkLabel: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          linkUrl: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.email })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        name:
                          columnType: text
                          computedValue: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: name
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 0
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: name
                          linkLabel: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          linkUrl: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.name })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        photo:
                          columnType: image
                          computedValue: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: photo
                          imageBorderRadius:
                            mode: "%"
                            value: 50
                          imageSize: FIXED
                          index: 3
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: photo
                          linkLabel: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          linkUrl: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.photo })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                        twitter:
                          columnType: link
                          computedValue: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.twitter })}}"
                          enableFilter: true
                          enableSort: true
                          headerIcon: ""
                          headerIconPosition: LEFT
                          horizontalAlignment: LEFT
                          id: twitter
                          imageBorderRadius:
                            mode: px
                            value: 0
                          imageSize: FIT
                          index: 1
                          isDerived: false
                          isEditableOnInsertion: true
                          isVisible: true
                          label: twitter
                          linkLabel: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return '@' +
                            currentRow.twitter?.split('/').pop()})}}"
                          linkUrl: "{{LSQ_Data.tableDataWithInserts.map((currentRow) => { return
                            currentRow.twitter })}}"
                          notation: standard
                          openImageUrl: true
                          openInNewTab: true
                          tagDisplayConfig: {}
                          textSize: PARAGRAPH
                          useLabelAsDisplayValue: true
                          verticalAlignment: CENTER
                          width: 150
                      tableData: |-
                        [
                          {
                            "name": "Billie Eilish",
                            "twitter": "https://twitter.com/billieeilish",
                            "date_joined": "2019-01-06",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/billie_eilish.png",
                            "email": "bad_guy@gmail.com",
                            "action": ""
                          },
                          {
                            "name": "Thom Yorke",
                            "twitter": "https://twitter.com/thomyorke",
                            "date_joined": "2019-01-05",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/thom_yorke.png",
                            "email": "karma_police_thom@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Katy Perry",
                            "twitter": "https://twitter.com/katyperry",
                            "date_joined": "2019-01-02",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/katy_perry.png",
                            "email": "katycat@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Ryan Gosling",
                            "twitter": "https://twitter.com/RyanGosling",
                            "date_joined": "2019-01-03",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/ryan_gosling.png",
                            "email": "ryan_the_notebook@gmail.com",
                            "action": ""
                          },
                          {
                            "name": "Dua Lipa",
                            "twitter": "https://twitter.com/DUALIPA",
                            "date_joined": "2019-01-07",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/dua_lipa.png",
                            "email": "dua_levitating@yahoo.com",
                            "action": ""
                          },
                          {
                            "name": "Beyonce Knowles",
                            "twitter": "https://twitter.com/Beyonce",
                            "date_joined": "2019-01-09",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/beyonce_knowles.png",
                            "email": "beyonce_run_the_world@hotmail.com",
                            "action": ""
                          },
                          {
                            "name": "Lopez Jennifer",
                            "twitter": "https://twitter.com/JLo",
                            "date_joined": "2019-01-04",
                            "photo": "https://lowcode.s3-us-west-2.amazonaws.com/jennifer_lopez.png",
                            "email": "jenny_from_the_block@yahoo.com",
                            "action": ""
                          }
                        ]
                      tableHeader: LSQ
                      textSize: PARAGRAPH
                      top:
                        mode: gridUnit
                        value: 4
                      type: TABLE_WIDGET
                      verticalAlignment: CENTER
                      widgetId: topiezepee
                      widgetName: LSQ_Data
                      width:
                        mode: gridUnit
                        value: 77
                  collapseWhenHidden: true
                  detachFromLayout: true
                  gridColumns: 80
                  height:
                    mode: fitContent
                    value: 95
                  isDisabled: false
                  isLoading: false
                  isVisible: true
                  left:
                    mode: gridUnit
                    value: 0
                  minHeight:
                    mode: gridUnit
                    value: 71
                  parentId: c29h4aktt9
                  shouldScrollContents: true
                  top:
                    mode: gridUnit
                    value: 0
                  type: CANVAS_WIDGET
                  widgetId: e63a0l86ih
                  widgetName: Canvas4
                  width:
                    mode: gridUnit
                    value: 0
              collapseWhenHidden: true
              detachFromLayout: true
              dragDisabled: true
              gridColumns: 80
              height:
                mode: fitContent
                value: 97
              isLoading: false
              isVisible: true
              left:
                mode: gridUnit
                value: 0
              minHeight:
                mode: gridUnit
                value: 71
              parentId: ciblxrqgt9
              top:
                mode: gridUnit
                value: 0
              type: SECTION_WIDGET
              widgetId: c29h4aktt9
              widgetName: Section4
              width:
                mode: gridUnit
                value: 0
          detachFromLayout: true
          dynamicBindingPathList: []
          dynamicTriggerPathList:
            - key: onOpen
            - key: onClose
          gridColumns: 80
          hasBackdrop: true
          height:
            mode: gridUnit
            value: 69
          isLoading: false
          left:
            mode: gridUnit
            value: 0
          onClose:
            - id: brvkspmb5o
              newWindow: true
          onOpen:
            - id: 1c9y7y5d3t
              newWindow: true
          parentId: "0"
          shouldScrollContents: true
          size: LARGE
          top:
            mode: gridUnit
            value: 0
          type: SLIDEOUT_WIDGET
          widgetId: ciblxrqgt9
          widgetName: Slideout2
          width:
            mode: gridUnit
            value: 80
      detachFromLayout: true
      dynamicBindingPathList: []
      gridColumns: 96
      height:
        mode: gridUnit
        value: 99
      layoutVersion: 4
      left:
        mode: gridUnit
        value: 0
      maxWidth:
        mode: px
        value: 7680
      minWidth:
        mode: px
        value: 840
      stateVars:
        stateVarMap: {}
      timers:
        timerMap: {}
      top:
        mode: gridUnit
        value: 0
      type: PAGE_WIDGET
      version: 8
      widgetId: "0"
      widgetName: Page
      width:
        mode: gridUnit
        value: 0
    id: 184aed59-8f87-4b59-9fe6-45fb54886044
name: Page
